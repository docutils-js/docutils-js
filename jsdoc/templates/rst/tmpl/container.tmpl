.. container.tmpl

.. role:: signature
.. role:: type-signature

<?js
    var self = this;
    var isGlobalPage;

    docs.forEach(function(doc, i) {
?>
<?js
    // we only need to check this once
    if (typeof isGlobalPage === 'undefined') {
        isGlobalPage = (doc.kind === 'globalobj');
    }
?>
<?js if (doc.kind === 'mainpage' || (doc.kind === 'package')) { ?>
<?js= self.partial('mainpage.tmpl', doc) ?>
<?js } else if (doc.kind === 'source') { ?>
<?js= self.partial('source.tmpl', doc) ?>
<?js } else { ?>
<?js if (!doc.longname || doc.kind !== 'module') { ?>
<?js if (doc.attribs) { ?>
.. <?js= doc.attribs ?><?js }
if (doc.ancestors && doc.ancestors.length) { ?>
.. <?js= doc.ancestors.join('') ?><?js
}
?><?js= doc.name ?><?js
if (doc.variation) { ?>
.. <?js= doc.variation ?><?js }
if (doc.signature && !doc.hideconstructor) { ?>
.. <?js= doc.signature ?><?js } ?>
<?js if (doc.classdesc) { ?>
<?js= doc.classdesc ?>
<?js } ?>
<?js } else if (doc.kind === 'module' && doc.modules) { ?>
<?js doc.modules.forEach(function(module) { ?>
<?js if (module.classdesc) { ?>
<div class="class-description"><?js= module.classdesc ?></div>
<?js } ?>
<?js }) ?>
<?js } ?>
<?js if (doc.kind === 'module' && doc.modules) { ?>
<?js if (doc.description) { ?>
<?js= doc.description ?>
<?js } ?>
<?js doc.modules.forEach(function(module) { ?>
<?js= self.partial('method.tmpl', module) ?>
<?js }) ?>
<?js } else if (doc.kind === 'class' || (doc.kind === 'namespace' && doc.signature)) { ?>
<?js= self.partial('method.tmpl', doc) ?>
<?js } else { ?>
<?js if (doc.description) { ?>
<?js= doc.description ?>
<?js } ?>
<?js= self.partial('details.tmpl', doc) ?>
<?js if (doc.examples && doc.examples.length) { ?>
Example<?js= doc.examples.length > 1? 's':'' ?>
=======<?js= doc.examples.length > 1? '=':'' ?>
<?js= self.partial('examples.tmpl', doc.examples) ?>
<?js } ?>
<?js } ?>
<?js if (doc.augments && doc.augments.length) { ?>
Extends
=======

<?js= self.partial('augments.tmpl', doc) ?>
<?js } ?>
<?js if (doc.requires && doc.requires.length) { ?>
Requires
========

<?js doc.requires.forEach(function(r) { ?>
* <?js= self.linkto(r, r) ?>
<?js }); ?>

<?js } ?>
<?js
var classes = self.find({kind: 'class', memberof: doc.longname});
if (!isGlobalPage && classes && classes.length) {
?>
Classes
=======

<?js classes.forEach(function(c) { ?>
<?js= self.linkto(c.longname, c.name) ?>:
    <?js if (c.summary) { ?><?js= c.summary ?><?js } ?>
<?js }); ?>

<?js } ?>
<?js
var interfaces = self.find({kind: 'interface', memberof: doc.longname});
if (!isGlobalPage && interfaces && interfaces.length) {
?>
Interfaces
==========
<?js interfaces.forEach(function(i) { ?>
<?js= self.linkto(i.longname, i.name) ?>:
    <?js if (i.summary) { ?><?js= i.summary ?><?js } ?>
<?js }); ?></dl>

<?js } ?>
<?js
var mixins = self.find({kind: 'mixin', memberof: doc.longname});
if (!isGlobalPage && mixins && mixins.length) {
?>
Mixins
======

<?js mixins.forEach(function(m) { ?>
<?js= self.linkto(m.longname, m.name) ?>:
    <?js if (m.summary) { ?><?js= m.summary ?><?js } ?>

<?js }); ?>
<?js } ?>
<?js
var namespaces = self.find({kind: 'namespace', memberof: doc.longname});
if (!isGlobalPage && namespaces && namespaces.length) {
?>
Namespaces
==========

<?js namespaces.forEach(function(n) { ?>
<?js= self.linkto(n.longname, n.name) ?>:
    <?js if (n.summary) { ?><?js= n.summary ?><?js } ?>
<?js }); ?>
<?js } ?>
<?js
var members = self.find({kind: 'member', memberof: isGlobalPage ? {isUndefined: true} : doc.longname});
// symbols that are assigned to module.exports are not globals, even though they're not a memberof anything
if (isGlobalPage && members && members.length && members.forEach) {
members = members.filter(function(m) {
return m.longname && m.longname.indexOf('module:') !== 0;
});
}
if (members && members.length && members.forEach) {
?>
Member
======

<?js members.forEach(function(p) { ?>
<?js= self.partial('members.tmpl', p) ?>
<?js }); ?>
<?js } ?>
<?js
var methods = self.find({kind: 'function', memberof: isGlobalPage ? {isUndefined: true} : doc.longname});
if (methods && methods.length && methods.forEach) {
?>
Methods
=======

<?js methods.forEach(function(m) { ?>
<?js= self.partial('method.tmpl', m) ?>
<?js }); ?>
<?js } ?>
<?js
var typedefs = self.find({kind: 'typedef', memberof: isGlobalPage ? {isUndefined: true} : doc.longname});
if (typedefs && typedefs.length && typedefs.forEach) {
?>
Type Definitions
================
<?js typedefs.forEach(function(e) {
if (e.signature) {
?>
<?js= self.partial('method.tmpl', e) ?>
<?js
}
else {
?>
<?js= self.partial('members.tmpl', e) ?>
<?js
}
}); ?>
<?js } ?>
<?js
var events = self.find({kind: 'event', memberof: isGlobalPage ? {isUndefined: true} : doc.longname});
if (events && events.length && events.forEach) {
?>
Events
======
<?js events.forEach(function(e) { ?>
<?js= self.partial('method.tmpl', e) ?>
<?js }); ?>
<?js } ?>
<?js } ?>
<?js }); ?>
