<?js
    var params = obj;

    /* sort subparams under their parent params (like opts.classname) */
    var parentParam = null;
    params.forEach(function(param, i) {
        var paramRegExp;

        if (!param) {
            return;
        }

        if (parentParam && parentParam.name && param.name) {
            try {
                paramRegExp = new RegExp('^(?:' + parentParam.name + '(?:\\[\\])*)\\.(.+)$');
            }
            catch (e) {
                // there's probably a typo in the JSDoc comment that resulted in a weird
                // parameter name
                return;
            }

            if ( paramRegExp.test(param.name) ) {
                param.name = RegExp.$1;
                parentParam.subparams = parentParam.subparams || [];
                parentParam.subparams.push(param);
                params[i] = null;
            }
            else {
                parentParam = param;
            }
        }
        else {
            parentParam = param;
        }
    });

    /* determine if we need extra columns, "attributes" and "default" */
    params.hasAttributes = false;
    params.hasDefault = false;
    params.hasName = false;

    params.forEach(function(param) {
        if (!param) { return; }

        if (param.optional || param.nullable || param.variable) {
            params.hasAttributes = true;
        }

        if (param.name) {
            params.hasName = true;
        }

        if (typeof param.defaultvalue !== 'undefined') {
            params.hasDefault = true;
        }
    });
?>

.. csv-table::
:header: <?js= <?js if (params.hasName) {?>Name, <?js } ?>Type, <?js if (params.hasAttributes) {?>Attributes, <?js } ?><?js if (params.hasDefault) {?>Default, <?js } ?>Description
<?js
        var self = this;
        params.forEach(function(param) {
            if (!param) { return; }
    ?><?js if (params.hasName) {?>"`?js= param.name ?>`"<?js } ?><?js if (param.type && param.type.names) {?><?js= self.partial('type.tmpl', param.type.names) ?><?js } ?><?js if (params.hasAttributes) {?><?js if (param.optional) { ?>"<optional>"<?js } ?><?js if (param.nullable) { ?>"<nullable>",<?js } ?><?js if (param.variable) { ?>"<repeatable>",<?js } ?>
<?js } ?>
<?js if (params.hasDefault) {?>
                <td class="default">
                <?js if (typeof param.defaultvalue !== 'undefined') { ?>
                    <?js= self.htmlsafe(param.defaultvalue) ?>
                <?js } ?>
                </td>
            <?js } ?>

            <td class="description last"><?js= param.description ?><?js if (param.subparams) { ?>
                <h6>Properties</h6>
                <?js= self.partial('params.tmpl', param.subparams) ?>
            <?js } ?></td>
        </tr>

    <?js }); ?>
    </tbody>
</table>
