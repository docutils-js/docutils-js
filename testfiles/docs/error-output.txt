
StateMachine.run: input_lines (line_offset=-1):
| ==========================================
|  Docutils_ Project Documentation Overview
| ==========================================
| 
| :Author: David Goodger
| :Contact: docutils-develop@lists.sourceforge.net
| :Date: $Date: 2016-01-13 21:09:13 +0000 (Wed, 13 Jan 2016) $
| :Revision: $Revision: 7933 $
| :Copyright: This document has been placed in the public domain.
| 
| The latest working documents may be accessed individually below, or
| from the ``docs`` directory of the `Docutils distribution`_.
| 
| .. _Docutils: http://docutils.sourceforge.net/
| .. _Docutils distribution: http://docutils.sourceforge.net/#download
| 
| .. contents::
| 
| 
| Docutils Stakeholders
| =====================
| 
| Docutils stakeholders can be categorized in several groups:
| 
| 1. End-users: users of reStructuredText and the Docutils tools.
|    Although some are developers (e.g. Python developers utilizing
|    reStructuredText for docstrings in their source), many are not.
| 
| 2. Client-developers: developers using Docutils as a library,
|    programmers developing *with* Docutils.
| 
| 3. Component-developers: those who implement application-specific
|    components, directives, and/or roles, separately from Docutils.
| 
| 4. Core-developers: developers of the Docutils codebase and
|    participants in the Docutils project community.
| 
| 5. Re-implementers: developers of alternate implementations of
|    Docutils.
| 
| There's a lot of overlap between these groups.  Most (perhaps all)
| core-developers, component-developers, client-developers, and
| re-implementers are also end-users.  Core-developers are also
| client-developers, and may also be component-developers in other
| projects.  Component-developers are also client-developers.
| 
| 
| Project Fundamentals
| ====================
| 
| These files are for all Docutils stakeholders.  They are kept at the
| top level of the Docutils project directory.
| 
| :README.txt_: Project overview: quick-start, requirements,
|               installation, and usage.
| :COPYING.txt_: Conditions for Docutils redistribution, with links to
|                licenses.
| :FAQ.txt_: Docutils Frequently Asked Questions.  If you have a
|            question or issue, there's a good chance it's already
|            answered here.
| :BUGS.txt_: A list of known bugs, and how to report a bug.
| :RELEASE-NOTES.txt_: Summary of the major changes in recent releases.
| :HISTORY.txt_: Detailed change history log.
| :THANKS.txt_: Acknowledgements.
| 
| .. _README.txt: ../README.html
| .. _BUGS.txt: ../BUGS.html
| .. _COPYING.txt: ../COPYING.html
| .. _Docutils FAQ:
| .. _FAQ.txt: ../FAQ.html
| .. _RELEASE-NOTES.txt: ../RELEASE-NOTES.html
| .. _HISTORY.txt: ../HISTORY.html
| .. _THANKS.txt: ../THANKS.html
| 
| 
| .. _user:
| 
| ``user/``: Introductory & Tutorial Material for End-Users
| =========================================================
| 
| Docutils-general:
| 
| * `Docutils Front-End Tools <user/tools.html>`__
| * `Docutils Configuration <user/config.html>`__
| * `Docutils Mailing Lists <user/mailing-lists.html>`__
| * `Docutils Link List <user/links.html>`__
| 
| Writer-specific:
| 
| * `Docutils HTML writers <user/html.html>`__
| * `Easy Slide Shows With reStructuredText & S5 <user/slide-shows.html>`__
| * `Docutils LaTeX Writer <user/latex.html>`__
| * `Docutils ODF/OpenOffice/odt Writer <user/odt.html>`__
| 
| `reStructuredText <http://docutils.sourceforge.net/rst.html>`_:
| 
| * `A ReStructuredText Primer (HTML) <user/rst/quickstart.html>`__ (or
|   `text source <user/rst/quickstart.txt>`__)
| * `Quick reStructuredText <user/rst/quickref.html>`__ (user reference)
| * `reStructuredText Cheat Sheet <user/rst/cheatsheet.txt>`__ (text
|   only; 1 page for syntax, 1 page directive & role reference)
| * `reStructuredText Demonstration <user/rst/demo.html>`_ (a
|   demonstration of most reStructuredText features; you can also have a
|   look at the `text source <user/rst/demo.txt>`__)
| 
| Editor support:
| 
| * `Emacs support for reStructuredText <user/emacs.html>`_
| 
| 
| .. _ref:
| 
| ``ref/``: Reference Material for All Groups
| ===========================================
| 
| Many of these files began as developer specifications, but now that
| they're mature and used by end-users and client-developers, they have
| become reference material.  Successful specs evolve into refs.
| 
| Docutils-general:
| 
| * `The Docutils Document Tree <ref/doctree.html>`__ (incomplete)
| * `Docutils Transforms <ref/transforms.html>`__
| * `Docutils Generic DTD <ref/docutils.dtd>`__
| * `OASIS XML Exchange Table Model Declaration Module
|   <ref/soextblx.dtd>`__ (CALS tables DTD module)
| 
| Although not in the "ref" directory, `PEP 258`_ is a must-read
| reference for any Docutils developer.
| 
| reStructuredText_:
| 
| * `An Introduction to reStructuredText <ref/rst/introduction.html>`__
|   (includes the `Goals <ref/rst/introduction.html#goals>`__ and
|   `History <ref/rst/introduction.html#history>`__ of reStructuredText)
| * `reStructuredText Markup Specification <ref/rst/restructuredtext.html>`__
| * `reStructuredText Directives <ref/rst/directives.html>`__
| * `reStructuredText Interpreted Text Roles <ref/rst/roles.html>`__
| * `reStructuredText Standard Definition Files
|   <ref/rst/definitions.html>`_
| 
| Prehistoric:
| 
| * `Setext Documents Mirror
|   <http://docutils.sourceforge.net/mirror/setext.html>`__
| 
| 
| .. _peps:
| 
| ``peps/``: Python Enhancement Proposals
| =======================================
| 
| * `PEP 256: Docstring Processing System Framework`__ is a high-level
|   generic proposal.  [`PEP 256`__ in the `master repository`_]
| * `PEP 257: Docstring Conventions`__ addresses docstring style and
|   touches on content.  [`PEP 257`__ in the `master repository`_]
| * `PEP 258: Docutils Design Specification`__ is an overview of the
|   architecture of Docutils.  It documents design issues and
|   implementation details.  [`PEP 258`__ in the `master repository`_]
| * `PEP 287: reStructuredText Docstring Format`__ proposes a standard
|   markup syntax.  [`PEP 287`__ in the `master repository`_]
| 
| Please note that PEPs in the `master repository`_ may not be current,
| whereas the local versions are.
| 
| __ peps/pep-0256.html
| __ http://www.python.org/peps/pep-0256.html
| __ peps/pep-0257.html
| __ http://www.python.org/peps/pep-0257.html
| .. _PEP 258:
| __ peps/pep-0258.html
| __ http://www.python.org/peps/pep-0258.html
| __ peps/pep-0287.html
| __ http://www.python.org/peps/pep-0287.html
| .. _master repository: http://www.python.org/peps/
| 
| 
| .. _api:
| 
| ``api/``: API Reference Material for Client-Developers
| ======================================================
| 
| * `The Docutils Publisher <api/publisher.html>`__
| * `Inside A Docutils Command-Line Front-End Tool <api/cmdline-tool.html>`__
| * `Docutils Runtime Settings <api/runtime-settings.html>`__
| * (`Docutils Transforms <ref/transforms.html>`__ should be moved here)
| 
| `PEP 258`_ is an overview of the architecture of Docutils.
| 
| 
| .. _howto:
| 
| ``howto/``: Instructions for Developers
| =======================================
| 
| * **Security:** `Deploying Docutils Securely <howto/security.html>`__
| * `Writing HTML (CSS) Stylesheets for Docutils
|   <howto/html-stylesheets.html>`__
| * `Docutils Internationalization <howto/i18n.html>`__
| * `Creating reStructuredText Directives <howto/rst-directives.html>`__
| * `Creating reStructuredText Interpreted Text Roles
|   <howto/rst-roles.html>`__
| 
| 
| .. _dev:
| 
| ``dev/``: Development Notes and Plans for Core-Developers
| =========================================================
| 
| Docutils-general:
| 
| * `Docutils Hacker's Guide <dev/hacking.html>`__
| * `Docutils Distributor's Guide <dev/distributing.html>`__
| * `Docutils To Do List <dev/todo.html>`__
| * `Docutils Project Policies <dev/policies.html>`__
| * `Docutils Web Site <dev/website.html>`__
| * `Docutils Release Procedure <dev/release.html>`__
| * `The Docutils Subversion Repository <dev/repository.html>`__
| * `Docutils Testing <dev/testing.html>`__
| * `Docstring Semantics <dev/semantics.html>`__ (incomplete)
| * `Python Source Reader <dev/pysource.html>`_ (incomplete)
| * `Docutils Python DTD <dev/pysource.dtd>`_ (experimental)
| * `Plan for Enthought API Documentation Tool <dev/enthought-plan.html>`_
| * `Enthought API Documentation Tool RFP <dev/enthought-rfp.html>`_
| 
| reStructuredText_:
| 
| * `A Record of reStructuredText Syntax Alternatives
|   <dev/rst/alternatives.html>`__
| * `Problems With StructuredText <dev/rst/problems.html>`__
| 
| 
| ..
|    Local Variables:
|    mode: indented-text
|    indent-tabs-mode: nil
|    sentence-end-double-space: t
|    fill-column: 70
|    End:

StateMachine.run: bof transition

StateMachine.run: line (source='index.txt', offset=0):
| ==========================================

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "line" in state "Body".

StateMachine.get_state: Changing state from "Body" to "Line" (input line 1).

StateMachine.run: line (source='index.txt', offset=1):
|  Docutils_ Project Documentation Overview

StateMachine.check_line: state="Line", transitions=['blank', 'indent', 'underline', 'text'].

StateMachine.check_line: Matched transition "indent" in state "Line".

StateMachine.run: input_lines (line_offset=-1):
| 
| :Author: David Goodger
| :Contact: docutils-develop@lists.sourceforge.net
| :Date: $Date: 2016-01-13 21:09:13 +0000 (Wed, 13 Jan 2016) $
| :Revision: $Revision: 7933 $
| :Copyright: This document has been placed in the public domain.
| 
| The latest working documents may be accessed individually below, or
| from the ``docs`` directory of the `Docutils distribution`_.
| 
| .. _Docutils: http://docutils.sourceforge.net/
| .. _Docutils distribution: http://docutils.sourceforge.net/#download
| 
| .. contents::
| 
| 
| Docutils Stakeholders
| =====================
| 
| Docutils stakeholders can be categorized in several groups:
| 
| 1. End-users: users of reStructuredText and the Docutils tools.
|    Although some are developers (e.g. Python developers utilizing
|    reStructuredText for docstrings in their source), many are not.
| 
| 2. Client-developers: developers using Docutils as a library,
|    programmers developing *with* Docutils.
| 
| 3. Component-developers: those who implement application-specific
|    components, directives, and/or roles, separately from Docutils.
| 
| 4. Core-developers: developers of the Docutils codebase and
|    participants in the Docutils project community.
| 
| 5. Re-implementers: developers of alternate implementations of
|    Docutils.
| 
| There's a lot of overlap between these groups.  Most (perhaps all)
| core-developers, component-developers, client-developers, and
| re-implementers are also end-users.  Core-developers are also
| client-developers, and may also be component-developers in other
| projects.  Component-developers are also client-developers.
| 
| 
| Project Fundamentals
| ====================
| 
| These files are for all Docutils stakeholders.  They are kept at the
| top level of the Docutils project directory.
| 
| :README.txt_: Project overview: quick-start, requirements,
|               installation, and usage.
| :COPYING.txt_: Conditions for Docutils redistribution, with links to
|                licenses.
| :FAQ.txt_: Docutils Frequently Asked Questions.  If you have a
|            question or issue, there's a good chance it's already
|            answered here.
| :BUGS.txt_: A list of known bugs, and how to report a bug.
| :RELEASE-NOTES.txt_: Summary of the major changes in recent releases.
| :HISTORY.txt_: Detailed change history log.
| :THANKS.txt_: Acknowledgements.
| 
| .. _README.txt: ../README.html
| .. _BUGS.txt: ../BUGS.html
| .. _COPYING.txt: ../COPYING.html
| .. _Docutils FAQ:
| .. _FAQ.txt: ../FAQ.html
| .. _RELEASE-NOTES.txt: ../RELEASE-NOTES.html
| .. _HISTORY.txt: ../HISTORY.html
| .. _THANKS.txt: ../THANKS.html
| 
| 
| .. _user:
| 
| ``user/``: Introductory & Tutorial Material for End-Users
| =========================================================
| 
| Docutils-general:
| 
| * `Docutils Front-End Tools <user/tools.html>`__
| * `Docutils Configuration <user/config.html>`__
| * `Docutils Mailing Lists <user/mailing-lists.html>`__
| * `Docutils Link List <user/links.html>`__
| 
| Writer-specific:
| 
| * `Docutils HTML writers <user/html.html>`__
| * `Easy Slide Shows With reStructuredText & S5 <user/slide-shows.html>`__
| * `Docutils LaTeX Writer <user/latex.html>`__
| * `Docutils ODF/OpenOffice/odt Writer <user/odt.html>`__
| 
| `reStructuredText <http://docutils.sourceforge.net/rst.html>`_:
| 
| * `A ReStructuredText Primer (HTML) <user/rst/quickstart.html>`__ (or
|   `text source <user/rst/quickstart.txt>`__)
| * `Quick reStructuredText <user/rst/quickref.html>`__ (user reference)
| * `reStructuredText Cheat Sheet <user/rst/cheatsheet.txt>`__ (text
|   only; 1 page for syntax, 1 page directive & role reference)
| * `reStructuredText Demonstration <user/rst/demo.html>`_ (a
|   demonstration of most reStructuredText features; you can also have a
|   look at the `text source <user/rst/demo.txt>`__)
| 
| Editor support:
| 
| * `Emacs support for reStructuredText <user/emacs.html>`_
| 
| 
| .. _ref:
| 
| ``ref/``: Reference Material for All Groups
| ===========================================
| 
| Many of these files began as developer specifications, but now that
| they're mature and used by end-users and client-developers, they have
| become reference material.  Successful specs evolve into refs.
| 
| Docutils-general:
| 
| * `The Docutils Document Tree <ref/doctree.html>`__ (incomplete)
| * `Docutils Transforms <ref/transforms.html>`__
| * `Docutils Generic DTD <ref/docutils.dtd>`__
| * `OASIS XML Exchange Table Model Declaration Module
|   <ref/soextblx.dtd>`__ (CALS tables DTD module)
| 
| Although not in the "ref" directory, `PEP 258`_ is a must-read
| reference for any Docutils developer.
| 
| reStructuredText_:
| 
| * `An Introduction to reStructuredText <ref/rst/introduction.html>`__
|   (includes the `Goals <ref/rst/introduction.html#goals>`__ and
|   `History <ref/rst/introduction.html#history>`__ of reStructuredText)
| * `reStructuredText Markup Specification <ref/rst/restructuredtext.html>`__
| * `reStructuredText Directives <ref/rst/directives.html>`__
| * `reStructuredText Interpreted Text Roles <ref/rst/roles.html>`__
| * `reStructuredText Standard Definition Files
|   <ref/rst/definitions.html>`_
| 
| Prehistoric:
| 
| * `Setext Documents Mirror
|   <http://docutils.sourceforge.net/mirror/setext.html>`__
| 
| 
| .. _peps:
| 
| ``peps/``: Python Enhancement Proposals
| =======================================
| 
| * `PEP 256: Docstring Processing System Framework`__ is a high-level
|   generic proposal.  [`PEP 256`__ in the `master repository`_]
| * `PEP 257: Docstring Conventions`__ addresses docstring style and
|   touches on content.  [`PEP 257`__ in the `master repository`_]
| * `PEP 258: Docutils Design Specification`__ is an overview of the
|   architecture of Docutils.  It documents design issues and
|   implementation details.  [`PEP 258`__ in the `master repository`_]
| * `PEP 287: reStructuredText Docstring Format`__ proposes a standard
|   markup syntax.  [`PEP 287`__ in the `master repository`_]
| 
| Please note that PEPs in the `master repository`_ may not be current,
| whereas the local versions are.
| 
| __ peps/pep-0256.html
| __ http://www.python.org/peps/pep-0256.html
| __ peps/pep-0257.html
| __ http://www.python.org/peps/pep-0257.html
| .. _PEP 258:
| __ peps/pep-0258.html
| __ http://www.python.org/peps/pep-0258.html
| __ peps/pep-0287.html
| __ http://www.python.org/peps/pep-0287.html
| .. _master repository: http://www.python.org/peps/
| 
| 
| .. _api:
| 
| ``api/``: API Reference Material for Client-Developers
| ======================================================
| 
| * `The Docutils Publisher <api/publisher.html>`__
| * `Inside A Docutils Command-Line Front-End Tool <api/cmdline-tool.html>`__
| * `Docutils Runtime Settings <api/runtime-settings.html>`__
| * (`Docutils Transforms <ref/transforms.html>`__ should be moved here)
| 
| `PEP 258`_ is an overview of the architecture of Docutils.
| 
| 
| .. _howto:
| 
| ``howto/``: Instructions for Developers
| =======================================
| 
| * **Security:** `Deploying Docutils Securely <howto/security.html>`__
| * `Writing HTML (CSS) Stylesheets for Docutils
|   <howto/html-stylesheets.html>`__
| * `Docutils Internationalization <howto/i18n.html>`__
| * `Creating reStructuredText Directives <howto/rst-directives.html>`__
| * `Creating reStructuredText Interpreted Text Roles
|   <howto/rst-roles.html>`__
| 
| 
| .. _dev:
| 
| ``dev/``: Development Notes and Plans for Core-Developers
| =========================================================
| 
| Docutils-general:
| 
| * `Docutils Hacker's Guide <dev/hacking.html>`__
| * `Docutils Distributor's Guide <dev/distributing.html>`__
| * `Docutils To Do List <dev/todo.html>`__
| * `Docutils Project Policies <dev/policies.html>`__
| * `Docutils Web Site <dev/website.html>`__
| * `Docutils Release Procedure <dev/release.html>`__
| * `The Docutils Subversion Repository <dev/repository.html>`__
| * `Docutils Testing <dev/testing.html>`__
| * `Docstring Semantics <dev/semantics.html>`__ (incomplete)
| * `Python Source Reader <dev/pysource.html>`_ (incomplete)
| * `Docutils Python DTD <dev/pysource.dtd>`_ (experimental)
| * `Plan for Enthought API Documentation Tool <dev/enthought-plan.html>`_
| * `Enthought API Documentation Tool RFP <dev/enthought-rfp.html>`_
| 
| reStructuredText_:
| 
| * `A Record of reStructuredText Syntax Alternatives
|   <dev/rst/alternatives.html>`__
| * `Problems With StructuredText <dev/rst/problems.html>`__
| 
| 
| ..
|    Local Variables:
|    mode: indented-text
|    indent-tabs-mode: nil
|    sentence-end-double-space: t
|    fill-column: 70
|    End:

StateMachine.run: bof transition

StateMachine.run: line (source='index.txt', offset=3):
| 

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "blank" in state "Body".

StateMachine.run: line (source='index.txt', offset=4):
| :Author: David Goodger

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "field_marker" in state "Body".

StateMachine.run: input_lines (line_offset=-1):
| David Goodger

StateMachine.run: bof transition

StateMachine.run: line (source='index.txt', offset=4):
| David Goodger

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "Body".

StateMachine.get_state: Changing state from "Body" to "Text" (input line 5).

StateMachine.run: Text.eof transition

StateMachine.run: input_lines (line_offset=-1):
| :Contact: docutils-develop@lists.sourceforge.net
| :Date: $Date: 2016-01-13 21:09:13 +0000 (Wed, 13 Jan 2016) $
| :Revision: $Revision: 7933 $
| :Copyright: This document has been placed in the public domain.
| 
| The latest working documents may be accessed individually below, or
| from the ``docs`` directory of the `Docutils distribution`_.
| 
| .. _Docutils: http://docutils.sourceforge.net/
| .. _Docutils distribution: http://docutils.sourceforge.net/#download
| 
| .. contents::
| 
| 
| Docutils Stakeholders
| =====================
| 
| Docutils stakeholders can be categorized in several groups:
| 
| 1. End-users: users of reStructuredText and the Docutils tools.
|    Although some are developers (e.g. Python developers utilizing
|    reStructuredText for docstrings in their source), many are not.
| 
| 2. Client-developers: developers using Docutils as a library,
|    programmers developing *with* Docutils.
| 
| 3. Component-developers: those who implement application-specific
|    components, directives, and/or roles, separately from Docutils.
| 
| 4. Core-developers: developers of the Docutils codebase and
|    participants in the Docutils project community.
| 
| 5. Re-implementers: developers of alternate implementations of
|    Docutils.
| 
| There's a lot of overlap between these groups.  Most (perhaps all)
| core-developers, component-developers, client-developers, and
| re-implementers are also end-users.  Core-developers are also
| client-developers, and may also be component-developers in other
| projects.  Component-developers are also client-developers.
| 
| 
| Project Fundamentals
| ====================
| 
| These files are for all Docutils stakeholders.  They are kept at the
| top level of the Docutils project directory.
| 
| :README.txt_: Project overview: quick-start, requirements,
|               installation, and usage.
| :COPYING.txt_: Conditions for Docutils redistribution, with links to
|                licenses.
| :FAQ.txt_: Docutils Frequently Asked Questions.  If you have a
|            question or issue, there's a good chance it's already
|            answered here.
| :BUGS.txt_: A list of known bugs, and how to report a bug.
| :RELEASE-NOTES.txt_: Summary of the major changes in recent releases.
| :HISTORY.txt_: Detailed change history log.
| :THANKS.txt_: Acknowledgements.
| 
| .. _README.txt: ../README.html
| .. _BUGS.txt: ../BUGS.html
| .. _COPYING.txt: ../COPYING.html
| .. _Docutils FAQ:
| .. _FAQ.txt: ../FAQ.html
| .. _RELEASE-NOTES.txt: ../RELEASE-NOTES.html
| .. _HISTORY.txt: ../HISTORY.html
| .. _THANKS.txt: ../THANKS.html
| 
| 
| .. _user:
| 
| ``user/``: Introductory & Tutorial Material for End-Users
| =========================================================
| 
| Docutils-general:
| 
| * `Docutils Front-End Tools <user/tools.html>`__
| * `Docutils Configuration <user/config.html>`__
| * `Docutils Mailing Lists <user/mailing-lists.html>`__
| * `Docutils Link List <user/links.html>`__
| 
| Writer-specific:
| 
| * `Docutils HTML writers <user/html.html>`__
| * `Easy Slide Shows With reStructuredText & S5 <user/slide-shows.html>`__
| * `Docutils LaTeX Writer <user/latex.html>`__
| * `Docutils ODF/OpenOffice/odt Writer <user/odt.html>`__
| 
| `reStructuredText <http://docutils.sourceforge.net/rst.html>`_:
| 
| * `A ReStructuredText Primer (HTML) <user/rst/quickstart.html>`__ (or
|   `text source <user/rst/quickstart.txt>`__)
| * `Quick reStructuredText <user/rst/quickref.html>`__ (user reference)
| * `reStructuredText Cheat Sheet <user/rst/cheatsheet.txt>`__ (text
|   only; 1 page for syntax, 1 page directive & role reference)
| * `reStructuredText Demonstration <user/rst/demo.html>`_ (a
|   demonstration of most reStructuredText features; you can also have a
|   look at the `text source <user/rst/demo.txt>`__)
| 
| Editor support:
| 
| * `Emacs support for reStructuredText <user/emacs.html>`_
| 
| 
| .. _ref:
| 
| ``ref/``: Reference Material for All Groups
| ===========================================
| 
| Many of these files began as developer specifications, but now that
| they're mature and used by end-users and client-developers, they have
| become reference material.  Successful specs evolve into refs.
| 
| Docutils-general:
| 
| * `The Docutils Document Tree <ref/doctree.html>`__ (incomplete)
| * `Docutils Transforms <ref/transforms.html>`__
| * `Docutils Generic DTD <ref/docutils.dtd>`__
| * `OASIS XML Exchange Table Model Declaration Module
|   <ref/soextblx.dtd>`__ (CALS tables DTD module)
| 
| Although not in the "ref" directory, `PEP 258`_ is a must-read
| reference for any Docutils developer.
| 
| reStructuredText_:
| 
| * `An Introduction to reStructuredText <ref/rst/introduction.html>`__
|   (includes the `Goals <ref/rst/introduction.html#goals>`__ and
|   `History <ref/rst/introduction.html#history>`__ of reStructuredText)
| * `reStructuredText Markup Specification <ref/rst/restructuredtext.html>`__
| * `reStructuredText Directives <ref/rst/directives.html>`__
| * `reStructuredText Interpreted Text Roles <ref/rst/roles.html>`__
| * `reStructuredText Standard Definition Files
|   <ref/rst/definitions.html>`_
| 
| Prehistoric:
| 
| * `Setext Documents Mirror
|   <http://docutils.sourceforge.net/mirror/setext.html>`__
| 
| 
| .. _peps:
| 
| ``peps/``: Python Enhancement Proposals
| =======================================
| 
| * `PEP 256: Docstring Processing System Framework`__ is a high-level
|   generic proposal.  [`PEP 256`__ in the `master repository`_]
| * `PEP 257: Docstring Conventions`__ addresses docstring style and
|   touches on content.  [`PEP 257`__ in the `master repository`_]
| * `PEP 258: Docutils Design Specification`__ is an overview of the
|   architecture of Docutils.  It documents design issues and
|   implementation details.  [`PEP 258`__ in the `master repository`_]
| * `PEP 287: reStructuredText Docstring Format`__ proposes a standard
|   markup syntax.  [`PEP 287`__ in the `master repository`_]
| 
| Please note that PEPs in the `master repository`_ may not be current,
| whereas the local versions are.
| 
| __ peps/pep-0256.html
| __ http://www.python.org/peps/pep-0256.html
| __ peps/pep-0257.html
| __ http://www.python.org/peps/pep-0257.html
| .. _PEP 258:
| __ peps/pep-0258.html
| __ http://www.python.org/peps/pep-0258.html
| __ peps/pep-0287.html
| __ http://www.python.org/peps/pep-0287.html
| .. _master repository: http://www.python.org/peps/
| 
| 
| .. _api:
| 
| ``api/``: API Reference Material for Client-Developers
| ======================================================
| 
| * `The Docutils Publisher <api/publisher.html>`__
| * `Inside A Docutils Command-Line Front-End Tool <api/cmdline-tool.html>`__
| * `Docutils Runtime Settings <api/runtime-settings.html>`__
| * (`Docutils Transforms <ref/transforms.html>`__ should be moved here)
| 
| `PEP 258`_ is an overview of the architecture of Docutils.
| 
| 
| .. _howto:
| 
| ``howto/``: Instructions for Developers
| =======================================
| 
| * **Security:** `Deploying Docutils Securely <howto/security.html>`__
| * `Writing HTML (CSS) Stylesheets for Docutils
|   <howto/html-stylesheets.html>`__
| * `Docutils Internationalization <howto/i18n.html>`__
| * `Creating reStructuredText Directives <howto/rst-directives.html>`__
| * `Creating reStructuredText Interpreted Text Roles
|   <howto/rst-roles.html>`__
| 
| 
| .. _dev:
| 
| ``dev/``: Development Notes and Plans for Core-Developers
| =========================================================
| 
| Docutils-general:
| 
| * `Docutils Hacker's Guide <dev/hacking.html>`__
| * `Docutils Distributor's Guide <dev/distributing.html>`__
| * `Docutils To Do List <dev/todo.html>`__
| * `Docutils Project Policies <dev/policies.html>`__
| * `Docutils Web Site <dev/website.html>`__
| * `Docutils Release Procedure <dev/release.html>`__
| * `The Docutils Subversion Repository <dev/repository.html>`__
| * `Docutils Testing <dev/testing.html>`__
| * `Docstring Semantics <dev/semantics.html>`__ (incomplete)
| * `Python Source Reader <dev/pysource.html>`_ (incomplete)
| * `Docutils Python DTD <dev/pysource.dtd>`_ (experimental)
| * `Plan for Enthought API Documentation Tool <dev/enthought-plan.html>`_
| * `Enthought API Documentation Tool RFP <dev/enthought-rfp.html>`_
| 
| reStructuredText_:
| 
| * `A Record of reStructuredText Syntax Alternatives
|   <dev/rst/alternatives.html>`__
| * `Problems With StructuredText <dev/rst/problems.html>`__
| 
| 
| ..
|    Local Variables:
|    mode: indented-text
|    indent-tabs-mode: nil
|    sentence-end-double-space: t
|    fill-column: 70
|    End:

StateMachine.run: bof transition

StateMachine.run: line (source='index.txt', offset=5):
| :Contact: docutils-develop@lists.sourceforge.net

StateMachine.check_line: state="FieldList", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "field_marker" in state "FieldList".

StateMachine.run: input_lines (line_offset=-1):
| docutils-develop@lists.sourceforge.net

StateMachine.run: bof transition

StateMachine.run: line (source='index.txt', offset=5):
| docutils-develop@lists.sourceforge.net

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "Body".

StateMachine.get_state: Changing state from "Body" to "Text" (input line 6).

StateMachine.run: Text.eof transition

StateMachine.run: line (source='index.txt', offset=6):
| :Date: $Date: 2016-01-13 21:09:13 +0000 (Wed, 13 Jan 2016) $

StateMachine.check_line: state="FieldList", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "field_marker" in state "FieldList".

StateMachine.run: input_lines (line_offset=-1):
| $Date: 2016-01-13 21:09:13 +0000 (Wed, 13 Jan 2016) $

StateMachine.run: bof transition

StateMachine.run: line (source='index.txt', offset=6):
| $Date: 2016-01-13 21:09:13 +0000 (Wed, 13 Jan 2016) $

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "Body".

StateMachine.get_state: Changing state from "Body" to "Text" (input line 7).

StateMachine.run: Text.eof transition

StateMachine.run: line (source='index.txt', offset=7):
| :Revision: $Revision: 7933 $

StateMachine.check_line: state="FieldList", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "field_marker" in state "FieldList".

StateMachine.run: input_lines (line_offset=-1):
| $Revision: 7933 $

StateMachine.run: bof transition

StateMachine.run: line (source='index.txt', offset=7):
| $Revision: 7933 $

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "Body".

StateMachine.get_state: Changing state from "Body" to "Text" (input line 8).

StateMachine.run: Text.eof transition

StateMachine.run: line (source='index.txt', offset=8):
| :Copyright: This document has been placed in the public domain.

StateMachine.check_line: state="FieldList", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "field_marker" in state "FieldList".

StateMachine.run: input_lines (line_offset=-1):
| This document has been placed in the public domain.
| 

StateMachine.run: bof transition

StateMachine.run: line (source='index.txt', offset=8):
| This document has been placed in the public domain.

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "Body".

StateMachine.get_state: Changing state from "Body" to "Text" (input line 9).

StateMachine.run: line (source='index.txt', offset=9):
| 

StateMachine.check_line: state="Text", transitions=['blank', 'indent', 'underline', 'text'].

StateMachine.check_line: Matched transition "blank" in state "Text".

StateMachine.get_state: Changing state from "Text" to "Body" (input line 10).

StateMachine.run: Body.eof transition

StateMachine.run: line (source='index.txt', offset=10):
| The latest working documents may be accessed individually below, or

StateMachine.check_line: state="FieldList", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "FieldList".

StateMachine.run: FieldList.eof transition

StateMachine.run: line (source='index.txt', offset=10):
| The latest working documents may be accessed individually below, or

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "Body".

StateMachine.get_state: Changing state from "Body" to "Text" (input line 11).

StateMachine.run: line (source='index.txt', offset=11):
| from the ``docs`` directory of the `Docutils distribution`_.

StateMachine.check_line: state="Text", transitions=['blank', 'indent', 'underline', 'text'].

StateMachine.check_line: Matched transition "text" in state "Text".

StateMachine.get_state: Changing state from "Text" to "Body" (input line 12).

StateMachine.run: line (source='index.txt', offset=12):
| 

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "blank" in state "Body".

StateMachine.run: line (source='index.txt', offset=13):
| .. _Docutils: http://docutils.sourceforge.net/

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "explicit_markup" in state "Body".

StateMachine.run: input_lines (line_offset=-1):
| .. _Docutils distribution: http://docutils.sourceforge.net/#download
| 
| .. contents::
| 
| 
| Docutils Stakeholders
| =====================
| 
| Docutils stakeholders can be categorized in several groups:
| 
| 1. End-users: users of reStructuredText and the Docutils tools.
|    Although some are developers (e.g. Python developers utilizing
|    reStructuredText for docstrings in their source), many are not.
| 
| 2. Client-developers: developers using Docutils as a library,
|    programmers developing *with* Docutils.
| 
| 3. Component-developers: those who implement application-specific
|    components, directives, and/or roles, separately from Docutils.
| 
| 4. Core-developers: developers of the Docutils codebase and
|    participants in the Docutils project community.
| 
| 5. Re-implementers: developers of alternate implementations of
|    Docutils.
| 
| There's a lot of overlap between these groups.  Most (perhaps all)
| core-developers, component-developers, client-developers, and
| re-implementers are also end-users.  Core-developers are also
| client-developers, and may also be component-developers in other
| projects.  Component-developers are also client-developers.
| 
| 
| Project Fundamentals
| ====================
| 
| These files are for all Docutils stakeholders.  They are kept at the
| top level of the Docutils project directory.
| 
| :README.txt_: Project overview: quick-start, requirements,
|               installation, and usage.
| :COPYING.txt_: Conditions for Docutils redistribution, with links to
|                licenses.
| :FAQ.txt_: Docutils Frequently Asked Questions.  If you have a
|            question or issue, there's a good chance it's already
|            answered here.
| :BUGS.txt_: A list of known bugs, and how to report a bug.
| :RELEASE-NOTES.txt_: Summary of the major changes in recent releases.
| :HISTORY.txt_: Detailed change history log.
| :THANKS.txt_: Acknowledgements.
| 
| .. _README.txt: ../README.html
| .. _BUGS.txt: ../BUGS.html
| .. _COPYING.txt: ../COPYING.html
| .. _Docutils FAQ:
| .. _FAQ.txt: ../FAQ.html
| .. _RELEASE-NOTES.txt: ../RELEASE-NOTES.html
| .. _HISTORY.txt: ../HISTORY.html
| .. _THANKS.txt: ../THANKS.html
| 
| 
| .. _user:
| 
| ``user/``: Introductory & Tutorial Material for End-Users
| =========================================================
| 
| Docutils-general:
| 
| * `Docutils Front-End Tools <user/tools.html>`__
| * `Docutils Configuration <user/config.html>`__
| * `Docutils Mailing Lists <user/mailing-lists.html>`__
| * `Docutils Link List <user/links.html>`__
| 
| Writer-specific:
| 
| * `Docutils HTML writers <user/html.html>`__
| * `Easy Slide Shows With reStructuredText & S5 <user/slide-shows.html>`__
| * `Docutils LaTeX Writer <user/latex.html>`__
| * `Docutils ODF/OpenOffice/odt Writer <user/odt.html>`__
| 
| `reStructuredText <http://docutils.sourceforge.net/rst.html>`_:
| 
| * `A ReStructuredText Primer (HTML) <user/rst/quickstart.html>`__ (or
|   `text source <user/rst/quickstart.txt>`__)
| * `Quick reStructuredText <user/rst/quickref.html>`__ (user reference)
| * `reStructuredText Cheat Sheet <user/rst/cheatsheet.txt>`__ (text
|   only; 1 page for syntax, 1 page directive & role reference)
| * `reStructuredText Demonstration <user/rst/demo.html>`_ (a
|   demonstration of most reStructuredText features; you can also have a
|   look at the `text source <user/rst/demo.txt>`__)
| 
| Editor support:
| 
| * `Emacs support for reStructuredText <user/emacs.html>`_
| 
| 
| .. _ref:
| 
| ``ref/``: Reference Material for All Groups
| ===========================================
| 
| Many of these files began as developer specifications, but now that
| they're mature and used by end-users and client-developers, they have
| become reference material.  Successful specs evolve into refs.
| 
| Docutils-general:
| 
| * `The Docutils Document Tree <ref/doctree.html>`__ (incomplete)
| * `Docutils Transforms <ref/transforms.html>`__
| * `Docutils Generic DTD <ref/docutils.dtd>`__
| * `OASIS XML Exchange Table Model Declaration Module
|   <ref/soextblx.dtd>`__ (CALS tables DTD module)
| 
| Although not in the "ref" directory, `PEP 258`_ is a must-read
| reference for any Docutils developer.
| 
| reStructuredText_:
| 
| * `An Introduction to reStructuredText <ref/rst/introduction.html>`__
|   (includes the `Goals <ref/rst/introduction.html#goals>`__ and
|   `History <ref/rst/introduction.html#history>`__ of reStructuredText)
| * `reStructuredText Markup Specification <ref/rst/restructuredtext.html>`__
| * `reStructuredText Directives <ref/rst/directives.html>`__
| * `reStructuredText Interpreted Text Roles <ref/rst/roles.html>`__
| * `reStructuredText Standard Definition Files
|   <ref/rst/definitions.html>`_
| 
| Prehistoric:
| 
| * `Setext Documents Mirror
|   <http://docutils.sourceforge.net/mirror/setext.html>`__
| 
| 
| .. _peps:
| 
| ``peps/``: Python Enhancement Proposals
| =======================================
| 
| * `PEP 256: Docstring Processing System Framework`__ is a high-level
|   generic proposal.  [`PEP 256`__ in the `master repository`_]
| * `PEP 257: Docstring Conventions`__ addresses docstring style and
|   touches on content.  [`PEP 257`__ in the `master repository`_]
| * `PEP 258: Docutils Design Specification`__ is an overview of the
|   architecture of Docutils.  It documents design issues and
|   implementation details.  [`PEP 258`__ in the `master repository`_]
| * `PEP 287: reStructuredText Docstring Format`__ proposes a standard
|   markup syntax.  [`PEP 287`__ in the `master repository`_]
| 
| Please note that PEPs in the `master repository`_ may not be current,
| whereas the local versions are.
| 
| __ peps/pep-0256.html
| __ http://www.python.org/peps/pep-0256.html
| __ peps/pep-0257.html
| __ http://www.python.org/peps/pep-0257.html
| .. _PEP 258:
| __ peps/pep-0258.html
| __ http://www.python.org/peps/pep-0258.html
| __ peps/pep-0287.html
| __ http://www.python.org/peps/pep-0287.html
| .. _master repository: http://www.python.org/peps/
| 
| 
| .. _api:
| 
| ``api/``: API Reference Material for Client-Developers
| ======================================================
| 
| * `The Docutils Publisher <api/publisher.html>`__
| * `Inside A Docutils Command-Line Front-End Tool <api/cmdline-tool.html>`__
| * `Docutils Runtime Settings <api/runtime-settings.html>`__
| * (`Docutils Transforms <ref/transforms.html>`__ should be moved here)
| 
| `PEP 258`_ is an overview of the architecture of Docutils.
| 
| 
| .. _howto:
| 
| ``howto/``: Instructions for Developers
| =======================================
| 
| * **Security:** `Deploying Docutils Securely <howto/security.html>`__
| * `Writing HTML (CSS) Stylesheets for Docutils
|   <howto/html-stylesheets.html>`__
| * `Docutils Internationalization <howto/i18n.html>`__
| * `Creating reStructuredText Directives <howto/rst-directives.html>`__
| * `Creating reStructuredText Interpreted Text Roles
|   <howto/rst-roles.html>`__
| 
| 
| .. _dev:
| 
| ``dev/``: Development Notes and Plans for Core-Developers
| =========================================================
| 
| Docutils-general:
| 
| * `Docutils Hacker's Guide <dev/hacking.html>`__
| * `Docutils Distributor's Guide <dev/distributing.html>`__
| * `Docutils To Do List <dev/todo.html>`__
| * `Docutils Project Policies <dev/policies.html>`__
| * `Docutils Web Site <dev/website.html>`__
| * `Docutils Release Procedure <dev/release.html>`__
| * `The Docutils Subversion Repository <dev/repository.html>`__
| * `Docutils Testing <dev/testing.html>`__
| * `Docstring Semantics <dev/semantics.html>`__ (incomplete)
| * `Python Source Reader <dev/pysource.html>`_ (incomplete)
| * `Docutils Python DTD <dev/pysource.dtd>`_ (experimental)
| * `Plan for Enthought API Documentation Tool <dev/enthought-plan.html>`_
| * `Enthought API Documentation Tool RFP <dev/enthought-rfp.html>`_
| 
| reStructuredText_:
| 
| * `A Record of reStructuredText Syntax Alternatives
|   <dev/rst/alternatives.html>`__
| * `Problems With StructuredText <dev/rst/problems.html>`__
| 
| 
| ..
|    Local Variables:
|    mode: indented-text
|    indent-tabs-mode: nil
|    sentence-end-double-space: t
|    fill-column: 70
|    End:

StateMachine.run: bof transition

StateMachine.run: line (source='index.txt', offset=14):
| .. _Docutils distribution: http://docutils.sourceforge.net/#download

StateMachine.check_line: state="Explicit", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "explicit_markup" in state "Explicit".

StateMachine.run: line (source='index.txt', offset=15):
| 

StateMachine.check_line: state="Explicit", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "blank" in state "Explicit".

StateMachine.run: Explicit.eof transition

StateMachine.run: line (source='index.txt', offset=15):
| 

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "blank" in state "Body".

StateMachine.run: line (source='index.txt', offset=16):
| .. contents::

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "explicit_markup" in state "Body".

StateMachine.run: input_lines (line_offset=-1):
| Docutils Stakeholders
| =====================
| 
| Docutils stakeholders can be categorized in several groups:
| 
| 1. End-users: users of reStructuredText and the Docutils tools.
|    Although some are developers (e.g. Python developers utilizing
|    reStructuredText for docstrings in their source), many are not.
| 
| 2. Client-developers: developers using Docutils as a library,
|    programmers developing *with* Docutils.
| 
| 3. Component-developers: those who implement application-specific
|    components, directives, and/or roles, separately from Docutils.
| 
| 4. Core-developers: developers of the Docutils codebase and
|    participants in the Docutils project community.
| 
| 5. Re-implementers: developers of alternate implementations of
|    Docutils.
| 
| There's a lot of overlap between these groups.  Most (perhaps all)
| core-developers, component-developers, client-developers, and
| re-implementers are also end-users.  Core-developers are also
| client-developers, and may also be component-developers in other
| projects.  Component-developers are also client-developers.
| 
| 
| Project Fundamentals
| ====================
| 
| These files are for all Docutils stakeholders.  They are kept at the
| top level of the Docutils project directory.
| 
| :README.txt_: Project overview: quick-start, requirements,
|               installation, and usage.
| :COPYING.txt_: Conditions for Docutils redistribution, with links to
|                licenses.
| :FAQ.txt_: Docutils Frequently Asked Questions.  If you have a
|            question or issue, there's a good chance it's already
|            answered here.
| :BUGS.txt_: A list of known bugs, and how to report a bug.
| :RELEASE-NOTES.txt_: Summary of the major changes in recent releases.
| :HISTORY.txt_: Detailed change history log.
| :THANKS.txt_: Acknowledgements.
| 
| .. _README.txt: ../README.html
| .. _BUGS.txt: ../BUGS.html
| .. _COPYING.txt: ../COPYING.html
| .. _Docutils FAQ:
| .. _FAQ.txt: ../FAQ.html
| .. _RELEASE-NOTES.txt: ../RELEASE-NOTES.html
| .. _HISTORY.txt: ../HISTORY.html
| .. _THANKS.txt: ../THANKS.html
| 
| 
| .. _user:
| 
| ``user/``: Introductory & Tutorial Material for End-Users
| =========================================================
| 
| Docutils-general:
| 
| * `Docutils Front-End Tools <user/tools.html>`__
| * `Docutils Configuration <user/config.html>`__
| * `Docutils Mailing Lists <user/mailing-lists.html>`__
| * `Docutils Link List <user/links.html>`__
| 
| Writer-specific:
| 
| * `Docutils HTML writers <user/html.html>`__
| * `Easy Slide Shows With reStructuredText & S5 <user/slide-shows.html>`__
| * `Docutils LaTeX Writer <user/latex.html>`__
| * `Docutils ODF/OpenOffice/odt Writer <user/odt.html>`__
| 
| `reStructuredText <http://docutils.sourceforge.net/rst.html>`_:
| 
| * `A ReStructuredText Primer (HTML) <user/rst/quickstart.html>`__ (or
|   `text source <user/rst/quickstart.txt>`__)
| * `Quick reStructuredText <user/rst/quickref.html>`__ (user reference)
| * `reStructuredText Cheat Sheet <user/rst/cheatsheet.txt>`__ (text
|   only; 1 page for syntax, 1 page directive & role reference)
| * `reStructuredText Demonstration <user/rst/demo.html>`_ (a
|   demonstration of most reStructuredText features; you can also have a
|   look at the `text source <user/rst/demo.txt>`__)
| 
| Editor support:
| 
| * `Emacs support for reStructuredText <user/emacs.html>`_
| 
| 
| .. _ref:
| 
| ``ref/``: Reference Material for All Groups
| ===========================================
| 
| Many of these files began as developer specifications, but now that
| they're mature and used by end-users and client-developers, they have
| become reference material.  Successful specs evolve into refs.
| 
| Docutils-general:
| 
| * `The Docutils Document Tree <ref/doctree.html>`__ (incomplete)
| * `Docutils Transforms <ref/transforms.html>`__
| * `Docutils Generic DTD <ref/docutils.dtd>`__
| * `OASIS XML Exchange Table Model Declaration Module
|   <ref/soextblx.dtd>`__ (CALS tables DTD module)
| 
| Although not in the "ref" directory, `PEP 258`_ is a must-read
| reference for any Docutils developer.
| 
| reStructuredText_:
| 
| * `An Introduction to reStructuredText <ref/rst/introduction.html>`__
|   (includes the `Goals <ref/rst/introduction.html#goals>`__ and
|   `History <ref/rst/introduction.html#history>`__ of reStructuredText)
| * `reStructuredText Markup Specification <ref/rst/restructuredtext.html>`__
| * `reStructuredText Directives <ref/rst/directives.html>`__
| * `reStructuredText Interpreted Text Roles <ref/rst/roles.html>`__
| * `reStructuredText Standard Definition Files
|   <ref/rst/definitions.html>`_
| 
| Prehistoric:
| 
| * `Setext Documents Mirror
|   <http://docutils.sourceforge.net/mirror/setext.html>`__
| 
| 
| .. _peps:
| 
| ``peps/``: Python Enhancement Proposals
| =======================================
| 
| * `PEP 256: Docstring Processing System Framework`__ is a high-level
|   generic proposal.  [`PEP 256`__ in the `master repository`_]
| * `PEP 257: Docstring Conventions`__ addresses docstring style and
|   touches on content.  [`PEP 257`__ in the `master repository`_]
| * `PEP 258: Docutils Design Specification`__ is an overview of the
|   architecture of Docutils.  It documents design issues and
|   implementation details.  [`PEP 258`__ in the `master repository`_]
| * `PEP 287: reStructuredText Docstring Format`__ proposes a standard
|   markup syntax.  [`PEP 287`__ in the `master repository`_]
| 
| Please note that PEPs in the `master repository`_ may not be current,
| whereas the local versions are.
| 
| __ peps/pep-0256.html
| __ http://www.python.org/peps/pep-0256.html
| __ peps/pep-0257.html
| __ http://www.python.org/peps/pep-0257.html
| .. _PEP 258:
| __ peps/pep-0258.html
| __ http://www.python.org/peps/pep-0258.html
| __ peps/pep-0287.html
| __ http://www.python.org/peps/pep-0287.html
| .. _master repository: http://www.python.org/peps/
| 
| 
| .. _api:
| 
| ``api/``: API Reference Material for Client-Developers
| ======================================================
| 
| * `The Docutils Publisher <api/publisher.html>`__
| * `Inside A Docutils Command-Line Front-End Tool <api/cmdline-tool.html>`__
| * `Docutils Runtime Settings <api/runtime-settings.html>`__
| * (`Docutils Transforms <ref/transforms.html>`__ should be moved here)
| 
| `PEP 258`_ is an overview of the architecture of Docutils.
| 
| 
| .. _howto:
| 
| ``howto/``: Instructions for Developers
| =======================================
| 
| * **Security:** `Deploying Docutils Securely <howto/security.html>`__
| * `Writing HTML (CSS) Stylesheets for Docutils
|   <howto/html-stylesheets.html>`__
| * `Docutils Internationalization <howto/i18n.html>`__
| * `Creating reStructuredText Directives <howto/rst-directives.html>`__
| * `Creating reStructuredText Interpreted Text Roles
|   <howto/rst-roles.html>`__
| 
| 
| .. _dev:
| 
| ``dev/``: Development Notes and Plans for Core-Developers
| =========================================================
| 
| Docutils-general:
| 
| * `Docutils Hacker's Guide <dev/hacking.html>`__
| * `Docutils Distributor's Guide <dev/distributing.html>`__
| * `Docutils To Do List <dev/todo.html>`__
| * `Docutils Project Policies <dev/policies.html>`__
| * `Docutils Web Site <dev/website.html>`__
| * `Docutils Release Procedure <dev/release.html>`__
| * `The Docutils Subversion Repository <dev/repository.html>`__
| * `Docutils Testing <dev/testing.html>`__
| * `Docstring Semantics <dev/semantics.html>`__ (incomplete)
| * `Python Source Reader <dev/pysource.html>`_ (incomplete)
| * `Docutils Python DTD <dev/pysource.dtd>`_ (experimental)
| * `Plan for Enthought API Documentation Tool <dev/enthought-plan.html>`_
| * `Enthought API Documentation Tool RFP <dev/enthought-rfp.html>`_
| 
| reStructuredText_:
| 
| * `A Record of reStructuredText Syntax Alternatives
|   <dev/rst/alternatives.html>`__
| * `Problems With StructuredText <dev/rst/problems.html>`__
| 
| 
| ..
|    Local Variables:
|    mode: indented-text
|    indent-tabs-mode: nil
|    sentence-end-double-space: t
|    fill-column: 70
|    End:

StateMachine.run: bof transition

StateMachine.run: line (source='index.txt', offset=19):
| Docutils Stakeholders

StateMachine.check_line: state="Explicit", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "Explicit".

StateMachine.run: Explicit.eof transition

StateMachine.run: line (source='index.txt', offset=19):
| Docutils Stakeholders

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "Body".

StateMachine.get_state: Changing state from "Body" to "Text" (input line 20).

StateMachine.run: line (source='index.txt', offset=20):
| =====================

StateMachine.check_line: state="Text", transitions=['blank', 'indent', 'underline', 'text'].

StateMachine.check_line: Matched transition "underline" in state "Text".

StateMachine.run: input_lines (line_offset=-1):
| 
| Docutils stakeholders can be categorized in several groups:
| 
| 1. End-users: users of reStructuredText and the Docutils tools.
|    Although some are developers (e.g. Python developers utilizing
|    reStructuredText for docstrings in their source), many are not.
| 
| 2. Client-developers: developers using Docutils as a library,
|    programmers developing *with* Docutils.
| 
| 3. Component-developers: those who implement application-specific
|    components, directives, and/or roles, separately from Docutils.
| 
| 4. Core-developers: developers of the Docutils codebase and
|    participants in the Docutils project community.
| 
| 5. Re-implementers: developers of alternate implementations of
|    Docutils.
| 
| There's a lot of overlap between these groups.  Most (perhaps all)
| core-developers, component-developers, client-developers, and
| re-implementers are also end-users.  Core-developers are also
| client-developers, and may also be component-developers in other
| projects.  Component-developers are also client-developers.
| 
| 
| Project Fundamentals
| ====================
| 
| These files are for all Docutils stakeholders.  They are kept at the
| top level of the Docutils project directory.
| 
| :README.txt_: Project overview: quick-start, requirements,
|               installation, and usage.
| :COPYING.txt_: Conditions for Docutils redistribution, with links to
|                licenses.
| :FAQ.txt_: Docutils Frequently Asked Questions.  If you have a
|            question or issue, there's a good chance it's already
|            answered here.
| :BUGS.txt_: A list of known bugs, and how to report a bug.
| :RELEASE-NOTES.txt_: Summary of the major changes in recent releases.
| :HISTORY.txt_: Detailed change history log.
| :THANKS.txt_: Acknowledgements.
| 
| .. _README.txt: ../README.html
| .. _BUGS.txt: ../BUGS.html
| .. _COPYING.txt: ../COPYING.html
| .. _Docutils FAQ:
| .. _FAQ.txt: ../FAQ.html
| .. _RELEASE-NOTES.txt: ../RELEASE-NOTES.html
| .. _HISTORY.txt: ../HISTORY.html
| .. _THANKS.txt: ../THANKS.html
| 
| 
| .. _user:
| 
| ``user/``: Introductory & Tutorial Material for End-Users
| =========================================================
| 
| Docutils-general:
| 
| * `Docutils Front-End Tools <user/tools.html>`__
| * `Docutils Configuration <user/config.html>`__
| * `Docutils Mailing Lists <user/mailing-lists.html>`__
| * `Docutils Link List <user/links.html>`__
| 
| Writer-specific:
| 
| * `Docutils HTML writers <user/html.html>`__
| * `Easy Slide Shows With reStructuredText & S5 <user/slide-shows.html>`__
| * `Docutils LaTeX Writer <user/latex.html>`__
| * `Docutils ODF/OpenOffice/odt Writer <user/odt.html>`__
| 
| `reStructuredText <http://docutils.sourceforge.net/rst.html>`_:
| 
| * `A ReStructuredText Primer (HTML) <user/rst/quickstart.html>`__ (or
|   `text source <user/rst/quickstart.txt>`__)
| * `Quick reStructuredText <user/rst/quickref.html>`__ (user reference)
| * `reStructuredText Cheat Sheet <user/rst/cheatsheet.txt>`__ (text
|   only; 1 page for syntax, 1 page directive & role reference)
| * `reStructuredText Demonstration <user/rst/demo.html>`_ (a
|   demonstration of most reStructuredText features; you can also have a
|   look at the `text source <user/rst/demo.txt>`__)
| 
| Editor support:
| 
| * `Emacs support for reStructuredText <user/emacs.html>`_
| 
| 
| .. _ref:
| 
| ``ref/``: Reference Material for All Groups
| ===========================================
| 
| Many of these files began as developer specifications, but now that
| they're mature and used by end-users and client-developers, they have
| become reference material.  Successful specs evolve into refs.
| 
| Docutils-general:
| 
| * `The Docutils Document Tree <ref/doctree.html>`__ (incomplete)
| * `Docutils Transforms <ref/transforms.html>`__
| * `Docutils Generic DTD <ref/docutils.dtd>`__
| * `OASIS XML Exchange Table Model Declaration Module
|   <ref/soextblx.dtd>`__ (CALS tables DTD module)
| 
| Although not in the "ref" directory, `PEP 258`_ is a must-read
| reference for any Docutils developer.
| 
| reStructuredText_:
| 
| * `An Introduction to reStructuredText <ref/rst/introduction.html>`__
|   (includes the `Goals <ref/rst/introduction.html#goals>`__ and
|   `History <ref/rst/introduction.html#history>`__ of reStructuredText)
| * `reStructuredText Markup Specification <ref/rst/restructuredtext.html>`__
| * `reStructuredText Directives <ref/rst/directives.html>`__
| * `reStructuredText Interpreted Text Roles <ref/rst/roles.html>`__
| * `reStructuredText Standard Definition Files
|   <ref/rst/definitions.html>`_
| 
| Prehistoric:
| 
| * `Setext Documents Mirror
|   <http://docutils.sourceforge.net/mirror/setext.html>`__
| 
| 
| .. _peps:
| 
| ``peps/``: Python Enhancement Proposals
| =======================================
| 
| * `PEP 256: Docstring Processing System Framework`__ is a high-level
|   generic proposal.  [`PEP 256`__ in the `master repository`_]
| * `PEP 257: Docstring Conventions`__ addresses docstring style and
|   touches on content.  [`PEP 257`__ in the `master repository`_]
| * `PEP 258: Docutils Design Specification`__ is an overview of the
|   architecture of Docutils.  It documents design issues and
|   implementation details.  [`PEP 258`__ in the `master repository`_]
| * `PEP 287: reStructuredText Docstring Format`__ proposes a standard
|   markup syntax.  [`PEP 287`__ in the `master repository`_]
| 
| Please note that PEPs in the `master repository`_ may not be current,
| whereas the local versions are.
| 
| __ peps/pep-0256.html
| __ http://www.python.org/peps/pep-0256.html
| __ peps/pep-0257.html
| __ http://www.python.org/peps/pep-0257.html
| .. _PEP 258:
| __ peps/pep-0258.html
| __ http://www.python.org/peps/pep-0258.html
| __ peps/pep-0287.html
| __ http://www.python.org/peps/pep-0287.html
| .. _master repository: http://www.python.org/peps/
| 
| 
| .. _api:
| 
| ``api/``: API Reference Material for Client-Developers
| ======================================================
| 
| * `The Docutils Publisher <api/publisher.html>`__
| * `Inside A Docutils Command-Line Front-End Tool <api/cmdline-tool.html>`__
| * `Docutils Runtime Settings <api/runtime-settings.html>`__
| * (`Docutils Transforms <ref/transforms.html>`__ should be moved here)
| 
| `PEP 258`_ is an overview of the architecture of Docutils.
| 
| 
| .. _howto:
| 
| ``howto/``: Instructions for Developers
| =======================================
| 
| * **Security:** `Deploying Docutils Securely <howto/security.html>`__
| * `Writing HTML (CSS) Stylesheets for Docutils
|   <howto/html-stylesheets.html>`__
| * `Docutils Internationalization <howto/i18n.html>`__
| * `Creating reStructuredText Directives <howto/rst-directives.html>`__
| * `Creating reStructuredText Interpreted Text Roles
|   <howto/rst-roles.html>`__
| 
| 
| .. _dev:
| 
| ``dev/``: Development Notes and Plans for Core-Developers
| =========================================================
| 
| Docutils-general:
| 
| * `Docutils Hacker's Guide <dev/hacking.html>`__
| * `Docutils Distributor's Guide <dev/distributing.html>`__
| * `Docutils To Do List <dev/todo.html>`__
| * `Docutils Project Policies <dev/policies.html>`__
| * `Docutils Web Site <dev/website.html>`__
| * `Docutils Release Procedure <dev/release.html>`__
| * `The Docutils Subversion Repository <dev/repository.html>`__
| * `Docutils Testing <dev/testing.html>`__
| * `Docstring Semantics <dev/semantics.html>`__ (incomplete)
| * `Python Source Reader <dev/pysource.html>`_ (incomplete)
| * `Docutils Python DTD <dev/pysource.dtd>`_ (experimental)
| * `Plan for Enthought API Documentation Tool <dev/enthought-plan.html>`_
| * `Enthought API Documentation Tool RFP <dev/enthought-rfp.html>`_
| 
| reStructuredText_:
| 
| * `A Record of reStructuredText Syntax Alternatives
|   <dev/rst/alternatives.html>`__
| * `Problems With StructuredText <dev/rst/problems.html>`__
| 
| 
| ..
|    Local Variables:
|    mode: indented-text
|    indent-tabs-mode: nil
|    sentence-end-double-space: t
|    fill-column: 70
|    End:

StateMachine.run: bof transition

StateMachine.run: line (source='index.txt', offset=21):
| 

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "blank" in state "Body".

StateMachine.run: line (source='index.txt', offset=22):
| Docutils stakeholders can be categorized in several groups:

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "Body".

StateMachine.get_state: Changing state from "Body" to "Text" (input line 23).

StateMachine.run: line (source='index.txt', offset=23):
| 

StateMachine.check_line: state="Text", transitions=['blank', 'indent', 'underline', 'text'].

StateMachine.check_line: Matched transition "blank" in state "Text".

StateMachine.get_state: Changing state from "Text" to "Body" (input line 24).

StateMachine.run: line (source='index.txt', offset=24):
| 1. End-users: users of reStructuredText and the Docutils tools.

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "enumerator" in state "Body".

StateMachine.run: input_lines (line_offset=-1):
| End-users: users of reStructuredText and the Docutils tools.
| Although some are developers (e.g. Python developers utilizing
| reStructuredText for docstrings in their source), many are not.
| 

StateMachine.run: bof transition

StateMachine.run: line (source='index.txt', offset=24):
| End-users: users of reStructuredText and the Docutils tools.

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "Body".

StateMachine.get_state: Changing state from "Body" to "Text" (input line 25).

StateMachine.run: line (source='index.txt', offset=25):
| Although some are developers (e.g. Python developers utilizing

StateMachine.check_line: state="Text", transitions=['blank', 'indent', 'underline', 'text'].

StateMachine.check_line: Matched transition "text" in state "Text".

StateMachine.get_state: Changing state from "Text" to "Body" (input line 27).

StateMachine.run: line (source='index.txt', offset=27):
| 

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "blank" in state "Body".

StateMachine.run: Body.eof transition

StateMachine.run: input_lines (line_offset=-1):
| 2. Client-developers: developers using Docutils as a library,
|    programmers developing *with* Docutils.
| 
| 3. Component-developers: those who implement application-specific
|    components, directives, and/or roles, separately from Docutils.
| 
| 4. Core-developers: developers of the Docutils codebase and
|    participants in the Docutils project community.
| 
| 5. Re-implementers: developers of alternate implementations of
|    Docutils.
| 
| There's a lot of overlap between these groups.  Most (perhaps all)
| core-developers, component-developers, client-developers, and
| re-implementers are also end-users.  Core-developers are also
| client-developers, and may also be component-developers in other
| projects.  Component-developers are also client-developers.
| 
| 
| Project Fundamentals
| ====================
| 
| These files are for all Docutils stakeholders.  They are kept at the
| top level of the Docutils project directory.
| 
| :README.txt_: Project overview: quick-start, requirements,
|               installation, and usage.
| :COPYING.txt_: Conditions for Docutils redistribution, with links to
|                licenses.
| :FAQ.txt_: Docutils Frequently Asked Questions.  If you have a
|            question or issue, there's a good chance it's already
|            answered here.
| :BUGS.txt_: A list of known bugs, and how to report a bug.
| :RELEASE-NOTES.txt_: Summary of the major changes in recent releases.
| :HISTORY.txt_: Detailed change history log.
| :THANKS.txt_: Acknowledgements.
| 
| .. _README.txt: ../README.html
| .. _BUGS.txt: ../BUGS.html
| .. _COPYING.txt: ../COPYING.html
| .. _Docutils FAQ:
| .. _FAQ.txt: ../FAQ.html
| .. _RELEASE-NOTES.txt: ../RELEASE-NOTES.html
| .. _HISTORY.txt: ../HISTORY.html
| .. _THANKS.txt: ../THANKS.html
| 
| 
| .. _user:
| 
| ``user/``: Introductory & Tutorial Material for End-Users
| =========================================================
| 
| Docutils-general:
| 
| * `Docutils Front-End Tools <user/tools.html>`__
| * `Docutils Configuration <user/config.html>`__
| * `Docutils Mailing Lists <user/mailing-lists.html>`__
| * `Docutils Link List <user/links.html>`__
| 
| Writer-specific:
| 
| * `Docutils HTML writers <user/html.html>`__
| * `Easy Slide Shows With reStructuredText & S5 <user/slide-shows.html>`__
| * `Docutils LaTeX Writer <user/latex.html>`__
| * `Docutils ODF/OpenOffice/odt Writer <user/odt.html>`__
| 
| `reStructuredText <http://docutils.sourceforge.net/rst.html>`_:
| 
| * `A ReStructuredText Primer (HTML) <user/rst/quickstart.html>`__ (or
|   `text source <user/rst/quickstart.txt>`__)
| * `Quick reStructuredText <user/rst/quickref.html>`__ (user reference)
| * `reStructuredText Cheat Sheet <user/rst/cheatsheet.txt>`__ (text
|   only; 1 page for syntax, 1 page directive & role reference)
| * `reStructuredText Demonstration <user/rst/demo.html>`_ (a
|   demonstration of most reStructuredText features; you can also have a
|   look at the `text source <user/rst/demo.txt>`__)
| 
| Editor support:
| 
| * `Emacs support for reStructuredText <user/emacs.html>`_
| 
| 
| .. _ref:
| 
| ``ref/``: Reference Material for All Groups
| ===========================================
| 
| Many of these files began as developer specifications, but now that
| they're mature and used by end-users and client-developers, they have
| become reference material.  Successful specs evolve into refs.
| 
| Docutils-general:
| 
| * `The Docutils Document Tree <ref/doctree.html>`__ (incomplete)
| * `Docutils Transforms <ref/transforms.html>`__
| * `Docutils Generic DTD <ref/docutils.dtd>`__
| * `OASIS XML Exchange Table Model Declaration Module
|   <ref/soextblx.dtd>`__ (CALS tables DTD module)
| 
| Although not in the "ref" directory, `PEP 258`_ is a must-read
| reference for any Docutils developer.
| 
| reStructuredText_:
| 
| * `An Introduction to reStructuredText <ref/rst/introduction.html>`__
|   (includes the `Goals <ref/rst/introduction.html#goals>`__ and
|   `History <ref/rst/introduction.html#history>`__ of reStructuredText)
| * `reStructuredText Markup Specification <ref/rst/restructuredtext.html>`__
| * `reStructuredText Directives <ref/rst/directives.html>`__
| * `reStructuredText Interpreted Text Roles <ref/rst/roles.html>`__
| * `reStructuredText Standard Definition Files
|   <ref/rst/definitions.html>`_
| 
| Prehistoric:
| 
| * `Setext Documents Mirror
|   <http://docutils.sourceforge.net/mirror/setext.html>`__
| 
| 
| .. _peps:
| 
| ``peps/``: Python Enhancement Proposals
| =======================================
| 
| * `PEP 256: Docstring Processing System Framework`__ is a high-level
|   generic proposal.  [`PEP 256`__ in the `master repository`_]
| * `PEP 257: Docstring Conventions`__ addresses docstring style and
|   touches on content.  [`PEP 257`__ in the `master repository`_]
| * `PEP 258: Docutils Design Specification`__ is an overview of the
|   architecture of Docutils.  It documents design issues and
|   implementation details.  [`PEP 258`__ in the `master repository`_]
| * `PEP 287: reStructuredText Docstring Format`__ proposes a standard
|   markup syntax.  [`PEP 287`__ in the `master repository`_]
| 
| Please note that PEPs in the `master repository`_ may not be current,
| whereas the local versions are.
| 
| __ peps/pep-0256.html
| __ http://www.python.org/peps/pep-0256.html
| __ peps/pep-0257.html
| __ http://www.python.org/peps/pep-0257.html
| .. _PEP 258:
| __ peps/pep-0258.html
| __ http://www.python.org/peps/pep-0258.html
| __ peps/pep-0287.html
| __ http://www.python.org/peps/pep-0287.html
| .. _master repository: http://www.python.org/peps/
| 
| 
| .. _api:
| 
| ``api/``: API Reference Material for Client-Developers
| ======================================================
| 
| * `The Docutils Publisher <api/publisher.html>`__
| * `Inside A Docutils Command-Line Front-End Tool <api/cmdline-tool.html>`__
| * `Docutils Runtime Settings <api/runtime-settings.html>`__
| * (`Docutils Transforms <ref/transforms.html>`__ should be moved here)
| 
| `PEP 258`_ is an overview of the architecture of Docutils.
| 
| 
| .. _howto:
| 
| ``howto/``: Instructions for Developers
| =======================================
| 
| * **Security:** `Deploying Docutils Securely <howto/security.html>`__
| * `Writing HTML (CSS) Stylesheets for Docutils
|   <howto/html-stylesheets.html>`__
| * `Docutils Internationalization <howto/i18n.html>`__
| * `Creating reStructuredText Directives <howto/rst-directives.html>`__
| * `Creating reStructuredText Interpreted Text Roles
|   <howto/rst-roles.html>`__
| 
| 
| .. _dev:
| 
| ``dev/``: Development Notes and Plans for Core-Developers
| =========================================================
| 
| Docutils-general:
| 
| * `Docutils Hacker's Guide <dev/hacking.html>`__
| * `Docutils Distributor's Guide <dev/distributing.html>`__
| * `Docutils To Do List <dev/todo.html>`__
| * `Docutils Project Policies <dev/policies.html>`__
| * `Docutils Web Site <dev/website.html>`__
| * `Docutils Release Procedure <dev/release.html>`__
| * `The Docutils Subversion Repository <dev/repository.html>`__
| * `Docutils Testing <dev/testing.html>`__
| * `Docstring Semantics <dev/semantics.html>`__ (incomplete)
| * `Python Source Reader <dev/pysource.html>`_ (incomplete)
| * `Docutils Python DTD <dev/pysource.dtd>`_ (experimental)
| * `Plan for Enthought API Documentation Tool <dev/enthought-plan.html>`_
| * `Enthought API Documentation Tool RFP <dev/enthought-rfp.html>`_
| 
| reStructuredText_:
| 
| * `A Record of reStructuredText Syntax Alternatives
|   <dev/rst/alternatives.html>`__
| * `Problems With StructuredText <dev/rst/problems.html>`__
| 
| 
| ..
|    Local Variables:
|    mode: indented-text
|    indent-tabs-mode: nil
|    sentence-end-double-space: t
|    fill-column: 70
|    End:

StateMachine.run: bof transition

StateMachine.run: line (source='index.txt', offset=28):
| 2. Client-developers: developers using Docutils as a library,

StateMachine.check_line: state="EnumeratedList", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "enumerator" in state "EnumeratedList".

StateMachine.run: input_lines (line_offset=-1):
| Client-developers: developers using Docutils as a library,
| programmers developing *with* Docutils.
| 

StateMachine.run: bof transition

StateMachine.run: line (source='index.txt', offset=28):
| Client-developers: developers using Docutils as a library,

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "Body".

StateMachine.get_state: Changing state from "Body" to "Text" (input line 29).

StateMachine.run: line (source='index.txt', offset=29):
| programmers developing *with* Docutils.

StateMachine.check_line: state="Text", transitions=['blank', 'indent', 'underline', 'text'].

StateMachine.check_line: Matched transition "text" in state "Text".

StateMachine.get_state: Changing state from "Text" to "Body" (input line 30).

StateMachine.run: line (source='index.txt', offset=30):
| 

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "blank" in state "Body".

StateMachine.run: Body.eof transition

StateMachine.run: line (source='index.txt', offset=31):
| 3. Component-developers: those who implement application-specific

StateMachine.check_line: state="EnumeratedList", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "enumerator" in state "EnumeratedList".

StateMachine.run: input_lines (line_offset=-1):
| Component-developers: those who implement application-specific
| components, directives, and/or roles, separately from Docutils.
| 

StateMachine.run: bof transition

StateMachine.run: line (source='index.txt', offset=31):
| Component-developers: those who implement application-specific

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "Body".

StateMachine.get_state: Changing state from "Body" to "Text" (input line 32).

StateMachine.run: line (source='index.txt', offset=32):
| components, directives, and/or roles, separately from Docutils.

StateMachine.check_line: state="Text", transitions=['blank', 'indent', 'underline', 'text'].

StateMachine.check_line: Matched transition "text" in state "Text".

StateMachine.get_state: Changing state from "Text" to "Body" (input line 33).

StateMachine.run: line (source='index.txt', offset=33):
| 

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "blank" in state "Body".

StateMachine.run: Body.eof transition

StateMachine.run: line (source='index.txt', offset=34):
| 4. Core-developers: developers of the Docutils codebase and

StateMachine.check_line: state="EnumeratedList", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "enumerator" in state "EnumeratedList".

StateMachine.run: input_lines (line_offset=-1):
| Core-developers: developers of the Docutils codebase and
| participants in the Docutils project community.
| 

StateMachine.run: bof transition

StateMachine.run: line (source='index.txt', offset=34):
| Core-developers: developers of the Docutils codebase and

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "Body".

StateMachine.get_state: Changing state from "Body" to "Text" (input line 35).

StateMachine.run: line (source='index.txt', offset=35):
| participants in the Docutils project community.

StateMachine.check_line: state="Text", transitions=['blank', 'indent', 'underline', 'text'].

StateMachine.check_line: Matched transition "text" in state "Text".

StateMachine.get_state: Changing state from "Text" to "Body" (input line 36).

StateMachine.run: line (source='index.txt', offset=36):
| 

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "blank" in state "Body".

StateMachine.run: Body.eof transition

StateMachine.run: line (source='index.txt', offset=37):
| 5. Re-implementers: developers of alternate implementations of

StateMachine.check_line: state="EnumeratedList", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "enumerator" in state "EnumeratedList".

StateMachine.run: input_lines (line_offset=-1):
| Re-implementers: developers of alternate implementations of
| Docutils.
| 

StateMachine.run: bof transition

StateMachine.run: line (source='index.txt', offset=37):
| Re-implementers: developers of alternate implementations of

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "Body".

StateMachine.get_state: Changing state from "Body" to "Text" (input line 38).

StateMachine.run: line (source='index.txt', offset=38):
| Docutils.

StateMachine.check_line: state="Text", transitions=['blank', 'indent', 'underline', 'text'].

StateMachine.check_line: Matched transition "text" in state "Text".

StateMachine.get_state: Changing state from "Text" to "Body" (input line 39).

StateMachine.run: line (source='index.txt', offset=39):
| 

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "blank" in state "Body".

StateMachine.run: Body.eof transition

StateMachine.run: line (source='index.txt', offset=40):
| There's a lot of overlap between these groups.  Most (perhaps all)

StateMachine.check_line: state="EnumeratedList", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "EnumeratedList".

StateMachine.run: EnumeratedList.eof transition

StateMachine.run: line (source='index.txt', offset=40):
| There's a lot of overlap between these groups.  Most (perhaps all)

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "Body".

StateMachine.get_state: Changing state from "Body" to "Text" (input line 41).

StateMachine.run: line (source='index.txt', offset=41):
| core-developers, component-developers, client-developers, and

StateMachine.check_line: state="Text", transitions=['blank', 'indent', 'underline', 'text'].

StateMachine.check_line: Matched transition "text" in state "Text".

StateMachine.get_state: Changing state from "Text" to "Body" (input line 45).

StateMachine.run: line (source='index.txt', offset=45):
| 

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "blank" in state "Body".

StateMachine.run: line (source='index.txt', offset=46):
| 

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "blank" in state "Body".

StateMachine.run: line (source='index.txt', offset=47):
| Project Fundamentals

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "Body".

StateMachine.get_state: Changing state from "Body" to "Text" (input line 48).

StateMachine.run: line (source='index.txt', offset=48):
| ====================

StateMachine.check_line: state="Text", transitions=['blank', 'indent', 'underline', 'text'].

StateMachine.check_line: Matched transition "underline" in state "Text".

StateMachine.run: Text.eof transition

StateMachine.get_state: Changing state from "Text" to "Body" (input line 47).

StateMachine.run: line (source='index.txt', offset=47):
| Project Fundamentals

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "Body".

StateMachine.get_state: Changing state from "Body" to "Text" (input line 48).

StateMachine.run: line (source='index.txt', offset=48):
| ====================

StateMachine.check_line: state="Text", transitions=['blank', 'indent', 'underline', 'text'].

StateMachine.check_line: Matched transition "underline" in state "Text".

StateMachine.run: input_lines (line_offset=-1):
| 
| These files are for all Docutils stakeholders.  They are kept at the
| top level of the Docutils project directory.
| 
| :README.txt_: Project overview: quick-start, requirements,
|               installation, and usage.
| :COPYING.txt_: Conditions for Docutils redistribution, with links to
|                licenses.
| :FAQ.txt_: Docutils Frequently Asked Questions.  If you have a
|            question or issue, there's a good chance it's already
|            answered here.
| :BUGS.txt_: A list of known bugs, and how to report a bug.
| :RELEASE-NOTES.txt_: Summary of the major changes in recent releases.
| :HISTORY.txt_: Detailed change history log.
| :THANKS.txt_: Acknowledgements.
| 
| .. _README.txt: ../README.html
| .. _BUGS.txt: ../BUGS.html
| .. _COPYING.txt: ../COPYING.html
| .. _Docutils FAQ:
| .. _FAQ.txt: ../FAQ.html
| .. _RELEASE-NOTES.txt: ../RELEASE-NOTES.html
| .. _HISTORY.txt: ../HISTORY.html
| .. _THANKS.txt: ../THANKS.html
| 
| 
| .. _user:
| 
| ``user/``: Introductory & Tutorial Material for End-Users
| =========================================================
| 
| Docutils-general:
| 
| * `Docutils Front-End Tools <user/tools.html>`__
| * `Docutils Configuration <user/config.html>`__
| * `Docutils Mailing Lists <user/mailing-lists.html>`__
| * `Docutils Link List <user/links.html>`__
| 
| Writer-specific:
| 
| * `Docutils HTML writers <user/html.html>`__
| * `Easy Slide Shows With reStructuredText & S5 <user/slide-shows.html>`__
| * `Docutils LaTeX Writer <user/latex.html>`__
| * `Docutils ODF/OpenOffice/odt Writer <user/odt.html>`__
| 
| `reStructuredText <http://docutils.sourceforge.net/rst.html>`_:
| 
| * `A ReStructuredText Primer (HTML) <user/rst/quickstart.html>`__ (or
|   `text source <user/rst/quickstart.txt>`__)
| * `Quick reStructuredText <user/rst/quickref.html>`__ (user reference)
| * `reStructuredText Cheat Sheet <user/rst/cheatsheet.txt>`__ (text
|   only; 1 page for syntax, 1 page directive & role reference)
| * `reStructuredText Demonstration <user/rst/demo.html>`_ (a
|   demonstration of most reStructuredText features; you can also have a
|   look at the `text source <user/rst/demo.txt>`__)
| 
| Editor support:
| 
| * `Emacs support for reStructuredText <user/emacs.html>`_
| 
| 
| .. _ref:
| 
| ``ref/``: Reference Material for All Groups
| ===========================================
| 
| Many of these files began as developer specifications, but now that
| they're mature and used by end-users and client-developers, they have
| become reference material.  Successful specs evolve into refs.
| 
| Docutils-general:
| 
| * `The Docutils Document Tree <ref/doctree.html>`__ (incomplete)
| * `Docutils Transforms <ref/transforms.html>`__
| * `Docutils Generic DTD <ref/docutils.dtd>`__
| * `OASIS XML Exchange Table Model Declaration Module
|   <ref/soextblx.dtd>`__ (CALS tables DTD module)
| 
| Although not in the "ref" directory, `PEP 258`_ is a must-read
| reference for any Docutils developer.
| 
| reStructuredText_:
| 
| * `An Introduction to reStructuredText <ref/rst/introduction.html>`__
|   (includes the `Goals <ref/rst/introduction.html#goals>`__ and
|   `History <ref/rst/introduction.html#history>`__ of reStructuredText)
| * `reStructuredText Markup Specification <ref/rst/restructuredtext.html>`__
| * `reStructuredText Directives <ref/rst/directives.html>`__
| * `reStructuredText Interpreted Text Roles <ref/rst/roles.html>`__
| * `reStructuredText Standard Definition Files
|   <ref/rst/definitions.html>`_
| 
| Prehistoric:
| 
| * `Setext Documents Mirror
|   <http://docutils.sourceforge.net/mirror/setext.html>`__
| 
| 
| .. _peps:
| 
| ``peps/``: Python Enhancement Proposals
| =======================================
| 
| * `PEP 256: Docstring Processing System Framework`__ is a high-level
|   generic proposal.  [`PEP 256`__ in the `master repository`_]
| * `PEP 257: Docstring Conventions`__ addresses docstring style and
|   touches on content.  [`PEP 257`__ in the `master repository`_]
| * `PEP 258: Docutils Design Specification`__ is an overview of the
|   architecture of Docutils.  It documents design issues and
|   implementation details.  [`PEP 258`__ in the `master repository`_]
| * `PEP 287: reStructuredText Docstring Format`__ proposes a standard
|   markup syntax.  [`PEP 287`__ in the `master repository`_]
| 
| Please note that PEPs in the `master repository`_ may not be current,
| whereas the local versions are.
| 
| __ peps/pep-0256.html
| __ http://www.python.org/peps/pep-0256.html
| __ peps/pep-0257.html
| __ http://www.python.org/peps/pep-0257.html
| .. _PEP 258:
| __ peps/pep-0258.html
| __ http://www.python.org/peps/pep-0258.html
| __ peps/pep-0287.html
| __ http://www.python.org/peps/pep-0287.html
| .. _master repository: http://www.python.org/peps/
| 
| 
| .. _api:
| 
| ``api/``: API Reference Material for Client-Developers
| ======================================================
| 
| * `The Docutils Publisher <api/publisher.html>`__
| * `Inside A Docutils Command-Line Front-End Tool <api/cmdline-tool.html>`__
| * `Docutils Runtime Settings <api/runtime-settings.html>`__
| * (`Docutils Transforms <ref/transforms.html>`__ should be moved here)
| 
| `PEP 258`_ is an overview of the architecture of Docutils.
| 
| 
| .. _howto:
| 
| ``howto/``: Instructions for Developers
| =======================================
| 
| * **Security:** `Deploying Docutils Securely <howto/security.html>`__
| * `Writing HTML (CSS) Stylesheets for Docutils
|   <howto/html-stylesheets.html>`__
| * `Docutils Internationalization <howto/i18n.html>`__
| * `Creating reStructuredText Directives <howto/rst-directives.html>`__
| * `Creating reStructuredText Interpreted Text Roles
|   <howto/rst-roles.html>`__
| 
| 
| .. _dev:
| 
| ``dev/``: Development Notes and Plans for Core-Developers
| =========================================================
| 
| Docutils-general:
| 
| * `Docutils Hacker's Guide <dev/hacking.html>`__
| * `Docutils Distributor's Guide <dev/distributing.html>`__
| * `Docutils To Do List <dev/todo.html>`__
| * `Docutils Project Policies <dev/policies.html>`__
| * `Docutils Web Site <dev/website.html>`__
| * `Docutils Release Procedure <dev/release.html>`__
| * `The Docutils Subversion Repository <dev/repository.html>`__
| * `Docutils Testing <dev/testing.html>`__
| * `Docstring Semantics <dev/semantics.html>`__ (incomplete)
| * `Python Source Reader <dev/pysource.html>`_ (incomplete)
| * `Docutils Python DTD <dev/pysource.dtd>`_ (experimental)
| * `Plan for Enthought API Documentation Tool <dev/enthought-plan.html>`_
| * `Enthought API Documentation Tool RFP <dev/enthought-rfp.html>`_
| 
| reStructuredText_:
| 
| * `A Record of reStructuredText Syntax Alternatives
|   <dev/rst/alternatives.html>`__
| * `Problems With StructuredText <dev/rst/problems.html>`__
| 
| 
| ..
|    Local Variables:
|    mode: indented-text
|    indent-tabs-mode: nil
|    sentence-end-double-space: t
|    fill-column: 70
|    End:

StateMachine.run: bof transition

StateMachine.run: line (source='index.txt', offset=49):
| 

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "blank" in state "Body".

StateMachine.run: line (source='index.txt', offset=50):
| These files are for all Docutils stakeholders.  They are kept at the

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "Body".

StateMachine.get_state: Changing state from "Body" to "Text" (input line 51).

StateMachine.run: line (source='index.txt', offset=51):
| top level of the Docutils project directory.

StateMachine.check_line: state="Text", transitions=['blank', 'indent', 'underline', 'text'].

StateMachine.check_line: Matched transition "text" in state "Text".

StateMachine.get_state: Changing state from "Text" to "Body" (input line 52).

StateMachine.run: line (source='index.txt', offset=52):
| 

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "blank" in state "Body".

StateMachine.run: line (source='index.txt', offset=53):
| :README.txt_: Project overview: quick-start, requirements,

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "field_marker" in state "Body".

StateMachine.run: input_lines (line_offset=-1):
| Project overview: quick-start, requirements,
| installation, and usage.

StateMachine.run: bof transition

StateMachine.run: line (source='index.txt', offset=53):
| Project overview: quick-start, requirements,

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "Body".

StateMachine.get_state: Changing state from "Body" to "Text" (input line 54).

StateMachine.run: line (source='index.txt', offset=54):
| installation, and usage.

StateMachine.check_line: state="Text", transitions=['blank', 'indent', 'underline', 'text'].

StateMachine.check_line: Matched transition "text" in state "Text".

StateMachine.get_state: Changing state from "Text" to "Body" (input line 55).

StateMachine.run: Body.eof transition

StateMachine.run: input_lines (line_offset=-1):
| :COPYING.txt_: Conditions for Docutils redistribution, with links to
|                licenses.
| :FAQ.txt_: Docutils Frequently Asked Questions.  If you have a
|            question or issue, there's a good chance it's already
|            answered here.
| :BUGS.txt_: A list of known bugs, and how to report a bug.
| :RELEASE-NOTES.txt_: Summary of the major changes in recent releases.
| :HISTORY.txt_: Detailed change history log.
| :THANKS.txt_: Acknowledgements.
| 
| .. _README.txt: ../README.html
| .. _BUGS.txt: ../BUGS.html
| .. _COPYING.txt: ../COPYING.html
| .. _Docutils FAQ:
| .. _FAQ.txt: ../FAQ.html
| .. _RELEASE-NOTES.txt: ../RELEASE-NOTES.html
| .. _HISTORY.txt: ../HISTORY.html
| .. _THANKS.txt: ../THANKS.html
| 
| 
| .. _user:
| 
| ``user/``: Introductory & Tutorial Material for End-Users
| =========================================================
| 
| Docutils-general:
| 
| * `Docutils Front-End Tools <user/tools.html>`__
| * `Docutils Configuration <user/config.html>`__
| * `Docutils Mailing Lists <user/mailing-lists.html>`__
| * `Docutils Link List <user/links.html>`__
| 
| Writer-specific:
| 
| * `Docutils HTML writers <user/html.html>`__
| * `Easy Slide Shows With reStructuredText & S5 <user/slide-shows.html>`__
| * `Docutils LaTeX Writer <user/latex.html>`__
| * `Docutils ODF/OpenOffice/odt Writer <user/odt.html>`__
| 
| `reStructuredText <http://docutils.sourceforge.net/rst.html>`_:
| 
| * `A ReStructuredText Primer (HTML) <user/rst/quickstart.html>`__ (or
|   `text source <user/rst/quickstart.txt>`__)
| * `Quick reStructuredText <user/rst/quickref.html>`__ (user reference)
| * `reStructuredText Cheat Sheet <user/rst/cheatsheet.txt>`__ (text
|   only; 1 page for syntax, 1 page directive & role reference)
| * `reStructuredText Demonstration <user/rst/demo.html>`_ (a
|   demonstration of most reStructuredText features; you can also have a
|   look at the `text source <user/rst/demo.txt>`__)
| 
| Editor support:
| 
| * `Emacs support for reStructuredText <user/emacs.html>`_
| 
| 
| .. _ref:
| 
| ``ref/``: Reference Material for All Groups
| ===========================================
| 
| Many of these files began as developer specifications, but now that
| they're mature and used by end-users and client-developers, they have
| become reference material.  Successful specs evolve into refs.
| 
| Docutils-general:
| 
| * `The Docutils Document Tree <ref/doctree.html>`__ (incomplete)
| * `Docutils Transforms <ref/transforms.html>`__
| * `Docutils Generic DTD <ref/docutils.dtd>`__
| * `OASIS XML Exchange Table Model Declaration Module
|   <ref/soextblx.dtd>`__ (CALS tables DTD module)
| 
| Although not in the "ref" directory, `PEP 258`_ is a must-read
| reference for any Docutils developer.
| 
| reStructuredText_:
| 
| * `An Introduction to reStructuredText <ref/rst/introduction.html>`__
|   (includes the `Goals <ref/rst/introduction.html#goals>`__ and
|   `History <ref/rst/introduction.html#history>`__ of reStructuredText)
| * `reStructuredText Markup Specification <ref/rst/restructuredtext.html>`__
| * `reStructuredText Directives <ref/rst/directives.html>`__
| * `reStructuredText Interpreted Text Roles <ref/rst/roles.html>`__
| * `reStructuredText Standard Definition Files
|   <ref/rst/definitions.html>`_
| 
| Prehistoric:
| 
| * `Setext Documents Mirror
|   <http://docutils.sourceforge.net/mirror/setext.html>`__
| 
| 
| .. _peps:
| 
| ``peps/``: Python Enhancement Proposals
| =======================================
| 
| * `PEP 256: Docstring Processing System Framework`__ is a high-level
|   generic proposal.  [`PEP 256`__ in the `master repository`_]
| * `PEP 257: Docstring Conventions`__ addresses docstring style and
|   touches on content.  [`PEP 257`__ in the `master repository`_]
| * `PEP 258: Docutils Design Specification`__ is an overview of the
|   architecture of Docutils.  It documents design issues and
|   implementation details.  [`PEP 258`__ in the `master repository`_]
| * `PEP 287: reStructuredText Docstring Format`__ proposes a standard
|   markup syntax.  [`PEP 287`__ in the `master repository`_]
| 
| Please note that PEPs in the `master repository`_ may not be current,
| whereas the local versions are.
| 
| __ peps/pep-0256.html
| __ http://www.python.org/peps/pep-0256.html
| __ peps/pep-0257.html
| __ http://www.python.org/peps/pep-0257.html
| .. _PEP 258:
| __ peps/pep-0258.html
| __ http://www.python.org/peps/pep-0258.html
| __ peps/pep-0287.html
| __ http://www.python.org/peps/pep-0287.html
| .. _master repository: http://www.python.org/peps/
| 
| 
| .. _api:
| 
| ``api/``: API Reference Material for Client-Developers
| ======================================================
| 
| * `The Docutils Publisher <api/publisher.html>`__
| * `Inside A Docutils Command-Line Front-End Tool <api/cmdline-tool.html>`__
| * `Docutils Runtime Settings <api/runtime-settings.html>`__
| * (`Docutils Transforms <ref/transforms.html>`__ should be moved here)
| 
| `PEP 258`_ is an overview of the architecture of Docutils.
| 
| 
| .. _howto:
| 
| ``howto/``: Instructions for Developers
| =======================================
| 
| * **Security:** `Deploying Docutils Securely <howto/security.html>`__
| * `Writing HTML (CSS) Stylesheets for Docutils
|   <howto/html-stylesheets.html>`__
| * `Docutils Internationalization <howto/i18n.html>`__
| * `Creating reStructuredText Directives <howto/rst-directives.html>`__
| * `Creating reStructuredText Interpreted Text Roles
|   <howto/rst-roles.html>`__
| 
| 
| .. _dev:
| 
| ``dev/``: Development Notes and Plans for Core-Developers
| =========================================================
| 
| Docutils-general:
| 
| * `Docutils Hacker's Guide <dev/hacking.html>`__
| * `Docutils Distributor's Guide <dev/distributing.html>`__
| * `Docutils To Do List <dev/todo.html>`__
| * `Docutils Project Policies <dev/policies.html>`__
| * `Docutils Web Site <dev/website.html>`__
| * `Docutils Release Procedure <dev/release.html>`__
| * `The Docutils Subversion Repository <dev/repository.html>`__
| * `Docutils Testing <dev/testing.html>`__
| * `Docstring Semantics <dev/semantics.html>`__ (incomplete)
| * `Python Source Reader <dev/pysource.html>`_ (incomplete)
| * `Docutils Python DTD <dev/pysource.dtd>`_ (experimental)
| * `Plan for Enthought API Documentation Tool <dev/enthought-plan.html>`_
| * `Enthought API Documentation Tool RFP <dev/enthought-rfp.html>`_
| 
| reStructuredText_:
| 
| * `A Record of reStructuredText Syntax Alternatives
|   <dev/rst/alternatives.html>`__
| * `Problems With StructuredText <dev/rst/problems.html>`__
| 
| 
| ..
|    Local Variables:
|    mode: indented-text
|    indent-tabs-mode: nil
|    sentence-end-double-space: t
|    fill-column: 70
|    End:

StateMachine.run: bof transition

StateMachine.run: line (source='index.txt', offset=55):
| :COPYING.txt_: Conditions for Docutils redistribution, with links to

StateMachine.check_line: state="FieldList", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "field_marker" in state "FieldList".

StateMachine.run: input_lines (line_offset=-1):
| Conditions for Docutils redistribution, with links to
| licenses.

StateMachine.run: bof transition

StateMachine.run: line (source='index.txt', offset=55):
| Conditions for Docutils redistribution, with links to

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "Body".

StateMachine.get_state: Changing state from "Body" to "Text" (input line 56).

StateMachine.run: line (source='index.txt', offset=56):
| licenses.

StateMachine.check_line: state="Text", transitions=['blank', 'indent', 'underline', 'text'].

StateMachine.check_line: Matched transition "text" in state "Text".

StateMachine.get_state: Changing state from "Text" to "Body" (input line 57).

StateMachine.run: Body.eof transition

StateMachine.run: line (source='index.txt', offset=57):
| :FAQ.txt_: Docutils Frequently Asked Questions.  If you have a

StateMachine.check_line: state="FieldList", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "field_marker" in state "FieldList".

StateMachine.run: input_lines (line_offset=-1):
| Docutils Frequently Asked Questions.  If you have a
| question or issue, there's a good chance it's already
| answered here.

StateMachine.run: bof transition

StateMachine.run: line (source='index.txt', offset=57):
| Docutils Frequently Asked Questions.  If you have a

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "Body".

StateMachine.get_state: Changing state from "Body" to "Text" (input line 58).

StateMachine.run: line (source='index.txt', offset=58):
| question or issue, there's a good chance it's already

StateMachine.check_line: state="Text", transitions=['blank', 'indent', 'underline', 'text'].

StateMachine.check_line: Matched transition "text" in state "Text".

StateMachine.get_state: Changing state from "Text" to "Body" (input line 60).

StateMachine.run: Body.eof transition

StateMachine.run: line (source='index.txt', offset=60):
| :BUGS.txt_: A list of known bugs, and how to report a bug.

StateMachine.check_line: state="FieldList", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "field_marker" in state "FieldList".

StateMachine.run: input_lines (line_offset=-1):
| A list of known bugs, and how to report a bug.

StateMachine.run: bof transition

StateMachine.run: line (source='index.txt', offset=60):
| A list of known bugs, and how to report a bug.

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "Body".

StateMachine.get_state: Changing state from "Body" to "Text" (input line 61).

StateMachine.run: Text.eof transition

StateMachine.run: line (source='index.txt', offset=61):
| :RELEASE-NOTES.txt_: Summary of the major changes in recent releases.

StateMachine.check_line: state="FieldList", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "field_marker" in state "FieldList".

StateMachine.run: input_lines (line_offset=-1):
| Summary of the major changes in recent releases.

StateMachine.run: bof transition

StateMachine.run: line (source='index.txt', offset=61):
| Summary of the major changes in recent releases.

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "Body".

StateMachine.get_state: Changing state from "Body" to "Text" (input line 62).

StateMachine.run: Text.eof transition

StateMachine.run: line (source='index.txt', offset=62):
| :HISTORY.txt_: Detailed change history log.

StateMachine.check_line: state="FieldList", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "field_marker" in state "FieldList".

StateMachine.run: input_lines (line_offset=-1):
| Detailed change history log.

StateMachine.run: bof transition

StateMachine.run: line (source='index.txt', offset=62):
| Detailed change history log.

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "Body".

StateMachine.get_state: Changing state from "Body" to "Text" (input line 63).

StateMachine.run: Text.eof transition

StateMachine.run: line (source='index.txt', offset=63):
| :THANKS.txt_: Acknowledgements.

StateMachine.check_line: state="FieldList", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "field_marker" in state "FieldList".

StateMachine.run: input_lines (line_offset=-1):
| Acknowledgements.
| 

StateMachine.run: bof transition

StateMachine.run: line (source='index.txt', offset=63):
| Acknowledgements.

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "Body".

StateMachine.get_state: Changing state from "Body" to "Text" (input line 64).

StateMachine.run: line (source='index.txt', offset=64):
| 

StateMachine.check_line: state="Text", transitions=['blank', 'indent', 'underline', 'text'].

StateMachine.check_line: Matched transition "blank" in state "Text".

StateMachine.get_state: Changing state from "Text" to "Body" (input line 65).

StateMachine.run: Body.eof transition

StateMachine.run: line (source='index.txt', offset=65):
| .. _README.txt: ../README.html

StateMachine.check_line: state="FieldList", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "explicit_markup" in state "FieldList".

StateMachine.run: FieldList.eof transition

StateMachine.run: line (source='index.txt', offset=65):
| .. _README.txt: ../README.html

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "explicit_markup" in state "Body".

StateMachine.run: input_lines (line_offset=-1):
| .. _BUGS.txt: ../BUGS.html
| .. _COPYING.txt: ../COPYING.html
| .. _Docutils FAQ:
| .. _FAQ.txt: ../FAQ.html
| .. _RELEASE-NOTES.txt: ../RELEASE-NOTES.html
| .. _HISTORY.txt: ../HISTORY.html
| .. _THANKS.txt: ../THANKS.html
| 
| 
| .. _user:
| 
| ``user/``: Introductory & Tutorial Material for End-Users
| =========================================================
| 
| Docutils-general:
| 
| * `Docutils Front-End Tools <user/tools.html>`__
| * `Docutils Configuration <user/config.html>`__
| * `Docutils Mailing Lists <user/mailing-lists.html>`__
| * `Docutils Link List <user/links.html>`__
| 
| Writer-specific:
| 
| * `Docutils HTML writers <user/html.html>`__
| * `Easy Slide Shows With reStructuredText & S5 <user/slide-shows.html>`__
| * `Docutils LaTeX Writer <user/latex.html>`__
| * `Docutils ODF/OpenOffice/odt Writer <user/odt.html>`__
| 
| `reStructuredText <http://docutils.sourceforge.net/rst.html>`_:
| 
| * `A ReStructuredText Primer (HTML) <user/rst/quickstart.html>`__ (or
|   `text source <user/rst/quickstart.txt>`__)
| * `Quick reStructuredText <user/rst/quickref.html>`__ (user reference)
| * `reStructuredText Cheat Sheet <user/rst/cheatsheet.txt>`__ (text
|   only; 1 page for syntax, 1 page directive & role reference)
| * `reStructuredText Demonstration <user/rst/demo.html>`_ (a
|   demonstration of most reStructuredText features; you can also have a
|   look at the `text source <user/rst/demo.txt>`__)
| 
| Editor support:
| 
| * `Emacs support for reStructuredText <user/emacs.html>`_
| 
| 
| .. _ref:
| 
| ``ref/``: Reference Material for All Groups
| ===========================================
| 
| Many of these files began as developer specifications, but now that
| they're mature and used by end-users and client-developers, they have
| become reference material.  Successful specs evolve into refs.
| 
| Docutils-general:
| 
| * `The Docutils Document Tree <ref/doctree.html>`__ (incomplete)
| * `Docutils Transforms <ref/transforms.html>`__
| * `Docutils Generic DTD <ref/docutils.dtd>`__
| * `OASIS XML Exchange Table Model Declaration Module
|   <ref/soextblx.dtd>`__ (CALS tables DTD module)
| 
| Although not in the "ref" directory, `PEP 258`_ is a must-read
| reference for any Docutils developer.
| 
| reStructuredText_:
| 
| * `An Introduction to reStructuredText <ref/rst/introduction.html>`__
|   (includes the `Goals <ref/rst/introduction.html#goals>`__ and
|   `History <ref/rst/introduction.html#history>`__ of reStructuredText)
| * `reStructuredText Markup Specification <ref/rst/restructuredtext.html>`__
| * `reStructuredText Directives <ref/rst/directives.html>`__
| * `reStructuredText Interpreted Text Roles <ref/rst/roles.html>`__
| * `reStructuredText Standard Definition Files
|   <ref/rst/definitions.html>`_
| 
| Prehistoric:
| 
| * `Setext Documents Mirror
|   <http://docutils.sourceforge.net/mirror/setext.html>`__
| 
| 
| .. _peps:
| 
| ``peps/``: Python Enhancement Proposals
| =======================================
| 
| * `PEP 256: Docstring Processing System Framework`__ is a high-level
|   generic proposal.  [`PEP 256`__ in the `master repository`_]
| * `PEP 257: Docstring Conventions`__ addresses docstring style and
|   touches on content.  [`PEP 257`__ in the `master repository`_]
| * `PEP 258: Docutils Design Specification`__ is an overview of the
|   architecture of Docutils.  It documents design issues and
|   implementation details.  [`PEP 258`__ in the `master repository`_]
| * `PEP 287: reStructuredText Docstring Format`__ proposes a standard
|   markup syntax.  [`PEP 287`__ in the `master repository`_]
| 
| Please note that PEPs in the `master repository`_ may not be current,
| whereas the local versions are.
| 
| __ peps/pep-0256.html
| __ http://www.python.org/peps/pep-0256.html
| __ peps/pep-0257.html
| __ http://www.python.org/peps/pep-0257.html
| .. _PEP 258:
| __ peps/pep-0258.html
| __ http://www.python.org/peps/pep-0258.html
| __ peps/pep-0287.html
| __ http://www.python.org/peps/pep-0287.html
| .. _master repository: http://www.python.org/peps/
| 
| 
| .. _api:
| 
| ``api/``: API Reference Material for Client-Developers
| ======================================================
| 
| * `The Docutils Publisher <api/publisher.html>`__
| * `Inside A Docutils Command-Line Front-End Tool <api/cmdline-tool.html>`__
| * `Docutils Runtime Settings <api/runtime-settings.html>`__
| * (`Docutils Transforms <ref/transforms.html>`__ should be moved here)
| 
| `PEP 258`_ is an overview of the architecture of Docutils.
| 
| 
| .. _howto:
| 
| ``howto/``: Instructions for Developers
| =======================================
| 
| * **Security:** `Deploying Docutils Securely <howto/security.html>`__
| * `Writing HTML (CSS) Stylesheets for Docutils
|   <howto/html-stylesheets.html>`__
| * `Docutils Internationalization <howto/i18n.html>`__
| * `Creating reStructuredText Directives <howto/rst-directives.html>`__
| * `Creating reStructuredText Interpreted Text Roles
|   <howto/rst-roles.html>`__
| 
| 
| .. _dev:
| 
| ``dev/``: Development Notes and Plans for Core-Developers
| =========================================================
| 
| Docutils-general:
| 
| * `Docutils Hacker's Guide <dev/hacking.html>`__
| * `Docutils Distributor's Guide <dev/distributing.html>`__
| * `Docutils To Do List <dev/todo.html>`__
| * `Docutils Project Policies <dev/policies.html>`__
| * `Docutils Web Site <dev/website.html>`__
| * `Docutils Release Procedure <dev/release.html>`__
| * `The Docutils Subversion Repository <dev/repository.html>`__
| * `Docutils Testing <dev/testing.html>`__
| * `Docstring Semantics <dev/semantics.html>`__ (incomplete)
| * `Python Source Reader <dev/pysource.html>`_ (incomplete)
| * `Docutils Python DTD <dev/pysource.dtd>`_ (experimental)
| * `Plan for Enthought API Documentation Tool <dev/enthought-plan.html>`_
| * `Enthought API Documentation Tool RFP <dev/enthought-rfp.html>`_
| 
| reStructuredText_:
| 
| * `A Record of reStructuredText Syntax Alternatives
|   <dev/rst/alternatives.html>`__
| * `Problems With StructuredText <dev/rst/problems.html>`__
| 
| 
| ..
|    Local Variables:
|    mode: indented-text
|    indent-tabs-mode: nil
|    sentence-end-double-space: t
|    fill-column: 70
|    End:

StateMachine.run: bof transition

StateMachine.run: line (source='index.txt', offset=66):
| .. _BUGS.txt: ../BUGS.html

StateMachine.check_line: state="Explicit", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "explicit_markup" in state "Explicit".

StateMachine.run: line (source='index.txt', offset=67):
| .. _COPYING.txt: ../COPYING.html

StateMachine.check_line: state="Explicit", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "explicit_markup" in state "Explicit".

StateMachine.run: line (source='index.txt', offset=68):
| .. _Docutils FAQ:

StateMachine.check_line: state="Explicit", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "explicit_markup" in state "Explicit".

StateMachine.run: line (source='index.txt', offset=69):
| .. _FAQ.txt: ../FAQ.html

StateMachine.check_line: state="Explicit", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "explicit_markup" in state "Explicit".

StateMachine.run: line (source='index.txt', offset=70):
| .. _RELEASE-NOTES.txt: ../RELEASE-NOTES.html

StateMachine.check_line: state="Explicit", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "explicit_markup" in state "Explicit".

StateMachine.run: line (source='index.txt', offset=71):
| .. _HISTORY.txt: ../HISTORY.html

StateMachine.check_line: state="Explicit", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "explicit_markup" in state "Explicit".

StateMachine.run: line (source='index.txt', offset=72):
| .. _THANKS.txt: ../THANKS.html

StateMachine.check_line: state="Explicit", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "explicit_markup" in state "Explicit".

StateMachine.run: line (source='index.txt', offset=73):
| 

StateMachine.check_line: state="Explicit", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "blank" in state "Explicit".

StateMachine.run: Explicit.eof transition

StateMachine.run: line (source='index.txt', offset=73):
| 

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "blank" in state "Body".

StateMachine.run: line (source='index.txt', offset=74):
| 

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "blank" in state "Body".

StateMachine.run: line (source='index.txt', offset=75):
| .. _user:

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "explicit_markup" in state "Body".

StateMachine.run: input_lines (line_offset=-1):
| 
| ``user/``: Introductory & Tutorial Material for End-Users
| =========================================================
| 
| Docutils-general:
| 
| * `Docutils Front-End Tools <user/tools.html>`__
| * `Docutils Configuration <user/config.html>`__
| * `Docutils Mailing Lists <user/mailing-lists.html>`__
| * `Docutils Link List <user/links.html>`__
| 
| Writer-specific:
| 
| * `Docutils HTML writers <user/html.html>`__
| * `Easy Slide Shows With reStructuredText & S5 <user/slide-shows.html>`__
| * `Docutils LaTeX Writer <user/latex.html>`__
| * `Docutils ODF/OpenOffice/odt Writer <user/odt.html>`__
| 
| `reStructuredText <http://docutils.sourceforge.net/rst.html>`_:
| 
| * `A ReStructuredText Primer (HTML) <user/rst/quickstart.html>`__ (or
|   `text source <user/rst/quickstart.txt>`__)
| * `Quick reStructuredText <user/rst/quickref.html>`__ (user reference)
| * `reStructuredText Cheat Sheet <user/rst/cheatsheet.txt>`__ (text
|   only; 1 page for syntax, 1 page directive & role reference)
| * `reStructuredText Demonstration <user/rst/demo.html>`_ (a
|   demonstration of most reStructuredText features; you can also have a
|   look at the `text source <user/rst/demo.txt>`__)
| 
| Editor support:
| 
| * `Emacs support for reStructuredText <user/emacs.html>`_
| 
| 
| .. _ref:
| 
| ``ref/``: Reference Material for All Groups
| ===========================================
| 
| Many of these files began as developer specifications, but now that
| they're mature and used by end-users and client-developers, they have
| become reference material.  Successful specs evolve into refs.
| 
| Docutils-general:
| 
| * `The Docutils Document Tree <ref/doctree.html>`__ (incomplete)
| * `Docutils Transforms <ref/transforms.html>`__
| * `Docutils Generic DTD <ref/docutils.dtd>`__
| * `OASIS XML Exchange Table Model Declaration Module
|   <ref/soextblx.dtd>`__ (CALS tables DTD module)
| 
| Although not in the "ref" directory, `PEP 258`_ is a must-read
| reference for any Docutils developer.
| 
| reStructuredText_:
| 
| * `An Introduction to reStructuredText <ref/rst/introduction.html>`__
|   (includes the `Goals <ref/rst/introduction.html#goals>`__ and
|   `History <ref/rst/introduction.html#history>`__ of reStructuredText)
| * `reStructuredText Markup Specification <ref/rst/restructuredtext.html>`__
| * `reStructuredText Directives <ref/rst/directives.html>`__
| * `reStructuredText Interpreted Text Roles <ref/rst/roles.html>`__
| * `reStructuredText Standard Definition Files
|   <ref/rst/definitions.html>`_
| 
| Prehistoric:
| 
| * `Setext Documents Mirror
|   <http://docutils.sourceforge.net/mirror/setext.html>`__
| 
| 
| .. _peps:
| 
| ``peps/``: Python Enhancement Proposals
| =======================================
| 
| * `PEP 256: Docstring Processing System Framework`__ is a high-level
|   generic proposal.  [`PEP 256`__ in the `master repository`_]
| * `PEP 257: Docstring Conventions`__ addresses docstring style and
|   touches on content.  [`PEP 257`__ in the `master repository`_]
| * `PEP 258: Docutils Design Specification`__ is an overview of the
|   architecture of Docutils.  It documents design issues and
|   implementation details.  [`PEP 258`__ in the `master repository`_]
| * `PEP 287: reStructuredText Docstring Format`__ proposes a standard
|   markup syntax.  [`PEP 287`__ in the `master repository`_]
| 
| Please note that PEPs in the `master repository`_ may not be current,
| whereas the local versions are.
| 
| __ peps/pep-0256.html
| __ http://www.python.org/peps/pep-0256.html
| __ peps/pep-0257.html
| __ http://www.python.org/peps/pep-0257.html
| .. _PEP 258:
| __ peps/pep-0258.html
| __ http://www.python.org/peps/pep-0258.html
| __ peps/pep-0287.html
| __ http://www.python.org/peps/pep-0287.html
| .. _master repository: http://www.python.org/peps/
| 
| 
| .. _api:
| 
| ``api/``: API Reference Material for Client-Developers
| ======================================================
| 
| * `The Docutils Publisher <api/publisher.html>`__
| * `Inside A Docutils Command-Line Front-End Tool <api/cmdline-tool.html>`__
| * `Docutils Runtime Settings <api/runtime-settings.html>`__
| * (`Docutils Transforms <ref/transforms.html>`__ should be moved here)
| 
| `PEP 258`_ is an overview of the architecture of Docutils.
| 
| 
| .. _howto:
| 
| ``howto/``: Instructions for Developers
| =======================================
| 
| * **Security:** `Deploying Docutils Securely <howto/security.html>`__
| * `Writing HTML (CSS) Stylesheets for Docutils
|   <howto/html-stylesheets.html>`__
| * `Docutils Internationalization <howto/i18n.html>`__
| * `Creating reStructuredText Directives <howto/rst-directives.html>`__
| * `Creating reStructuredText Interpreted Text Roles
|   <howto/rst-roles.html>`__
| 
| 
| .. _dev:
| 
| ``dev/``: Development Notes and Plans for Core-Developers
| =========================================================
| 
| Docutils-general:
| 
| * `Docutils Hacker's Guide <dev/hacking.html>`__
| * `Docutils Distributor's Guide <dev/distributing.html>`__
| * `Docutils To Do List <dev/todo.html>`__
| * `Docutils Project Policies <dev/policies.html>`__
| * `Docutils Web Site <dev/website.html>`__
| * `Docutils Release Procedure <dev/release.html>`__
| * `The Docutils Subversion Repository <dev/repository.html>`__
| * `Docutils Testing <dev/testing.html>`__
| * `Docstring Semantics <dev/semantics.html>`__ (incomplete)
| * `Python Source Reader <dev/pysource.html>`_ (incomplete)
| * `Docutils Python DTD <dev/pysource.dtd>`_ (experimental)
| * `Plan for Enthought API Documentation Tool <dev/enthought-plan.html>`_
| * `Enthought API Documentation Tool RFP <dev/enthought-rfp.html>`_
| 
| reStructuredText_:
| 
| * `A Record of reStructuredText Syntax Alternatives
|   <dev/rst/alternatives.html>`__
| * `Problems With StructuredText <dev/rst/problems.html>`__
| 
| 
| ..
|    Local Variables:
|    mode: indented-text
|    indent-tabs-mode: nil
|    sentence-end-double-space: t
|    fill-column: 70
|    End:

StateMachine.run: bof transition

StateMachine.run: line (source='index.txt', offset=76):
| 

StateMachine.check_line: state="Explicit", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "blank" in state "Explicit".

StateMachine.run: Explicit.eof transition

StateMachine.run: line (source='index.txt', offset=76):
| 

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "blank" in state "Body".

StateMachine.run: line (source='index.txt', offset=77):
| ``user/``: Introductory & Tutorial Material for End-Users

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "Body".

StateMachine.get_state: Changing state from "Body" to "Text" (input line 78).

StateMachine.run: line (source='index.txt', offset=78):
| =========================================================

StateMachine.check_line: state="Text", transitions=['blank', 'indent', 'underline', 'text'].

StateMachine.check_line: Matched transition "underline" in state "Text".

StateMachine.run: Text.eof transition

StateMachine.get_state: Changing state from "Text" to "Body" (input line 77).

StateMachine.run: line (source='index.txt', offset=77):
| ``user/``: Introductory & Tutorial Material for End-Users

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "Body".

StateMachine.get_state: Changing state from "Body" to "Text" (input line 78).

StateMachine.run: line (source='index.txt', offset=78):
| =========================================================

StateMachine.check_line: state="Text", transitions=['blank', 'indent', 'underline', 'text'].

StateMachine.check_line: Matched transition "underline" in state "Text".

StateMachine.run: input_lines (line_offset=-1):
| 
| Docutils-general:
| 
| * `Docutils Front-End Tools <user/tools.html>`__
| * `Docutils Configuration <user/config.html>`__
| * `Docutils Mailing Lists <user/mailing-lists.html>`__
| * `Docutils Link List <user/links.html>`__
| 
| Writer-specific:
| 
| * `Docutils HTML writers <user/html.html>`__
| * `Easy Slide Shows With reStructuredText & S5 <user/slide-shows.html>`__
| * `Docutils LaTeX Writer <user/latex.html>`__
| * `Docutils ODF/OpenOffice/odt Writer <user/odt.html>`__
| 
| `reStructuredText <http://docutils.sourceforge.net/rst.html>`_:
| 
| * `A ReStructuredText Primer (HTML) <user/rst/quickstart.html>`__ (or
|   `text source <user/rst/quickstart.txt>`__)
| * `Quick reStructuredText <user/rst/quickref.html>`__ (user reference)
| * `reStructuredText Cheat Sheet <user/rst/cheatsheet.txt>`__ (text
|   only; 1 page for syntax, 1 page directive & role reference)
| * `reStructuredText Demonstration <user/rst/demo.html>`_ (a
|   demonstration of most reStructuredText features; you can also have a
|   look at the `text source <user/rst/demo.txt>`__)
| 
| Editor support:
| 
| * `Emacs support for reStructuredText <user/emacs.html>`_
| 
| 
| .. _ref:
| 
| ``ref/``: Reference Material for All Groups
| ===========================================
| 
| Many of these files began as developer specifications, but now that
| they're mature and used by end-users and client-developers, they have
| become reference material.  Successful specs evolve into refs.
| 
| Docutils-general:
| 
| * `The Docutils Document Tree <ref/doctree.html>`__ (incomplete)
| * `Docutils Transforms <ref/transforms.html>`__
| * `Docutils Generic DTD <ref/docutils.dtd>`__
| * `OASIS XML Exchange Table Model Declaration Module
|   <ref/soextblx.dtd>`__ (CALS tables DTD module)
| 
| Although not in the "ref" directory, `PEP 258`_ is a must-read
| reference for any Docutils developer.
| 
| reStructuredText_:
| 
| * `An Introduction to reStructuredText <ref/rst/introduction.html>`__
|   (includes the `Goals <ref/rst/introduction.html#goals>`__ and
|   `History <ref/rst/introduction.html#history>`__ of reStructuredText)
| * `reStructuredText Markup Specification <ref/rst/restructuredtext.html>`__
| * `reStructuredText Directives <ref/rst/directives.html>`__
| * `reStructuredText Interpreted Text Roles <ref/rst/roles.html>`__
| * `reStructuredText Standard Definition Files
|   <ref/rst/definitions.html>`_
| 
| Prehistoric:
| 
| * `Setext Documents Mirror
|   <http://docutils.sourceforge.net/mirror/setext.html>`__
| 
| 
| .. _peps:
| 
| ``peps/``: Python Enhancement Proposals
| =======================================
| 
| * `PEP 256: Docstring Processing System Framework`__ is a high-level
|   generic proposal.  [`PEP 256`__ in the `master repository`_]
| * `PEP 257: Docstring Conventions`__ addresses docstring style and
|   touches on content.  [`PEP 257`__ in the `master repository`_]
| * `PEP 258: Docutils Design Specification`__ is an overview of the
|   architecture of Docutils.  It documents design issues and
|   implementation details.  [`PEP 258`__ in the `master repository`_]
| * `PEP 287: reStructuredText Docstring Format`__ proposes a standard
|   markup syntax.  [`PEP 287`__ in the `master repository`_]
| 
| Please note that PEPs in the `master repository`_ may not be current,
| whereas the local versions are.
| 
| __ peps/pep-0256.html
| __ http://www.python.org/peps/pep-0256.html
| __ peps/pep-0257.html
| __ http://www.python.org/peps/pep-0257.html
| .. _PEP 258:
| __ peps/pep-0258.html
| __ http://www.python.org/peps/pep-0258.html
| __ peps/pep-0287.html
| __ http://www.python.org/peps/pep-0287.html
| .. _master repository: http://www.python.org/peps/
| 
| 
| .. _api:
| 
| ``api/``: API Reference Material for Client-Developers
| ======================================================
| 
| * `The Docutils Publisher <api/publisher.html>`__
| * `Inside A Docutils Command-Line Front-End Tool <api/cmdline-tool.html>`__
| * `Docutils Runtime Settings <api/runtime-settings.html>`__
| * (`Docutils Transforms <ref/transforms.html>`__ should be moved here)
| 
| `PEP 258`_ is an overview of the architecture of Docutils.
| 
| 
| .. _howto:
| 
| ``howto/``: Instructions for Developers
| =======================================
| 
| * **Security:** `Deploying Docutils Securely <howto/security.html>`__
| * `Writing HTML (CSS) Stylesheets for Docutils
|   <howto/html-stylesheets.html>`__
| * `Docutils Internationalization <howto/i18n.html>`__
| * `Creating reStructuredText Directives <howto/rst-directives.html>`__
| * `Creating reStructuredText Interpreted Text Roles
|   <howto/rst-roles.html>`__
| 
| 
| .. _dev:
| 
| ``dev/``: Development Notes and Plans for Core-Developers
| =========================================================
| 
| Docutils-general:
| 
| * `Docutils Hacker's Guide <dev/hacking.html>`__
| * `Docutils Distributor's Guide <dev/distributing.html>`__
| * `Docutils To Do List <dev/todo.html>`__
| * `Docutils Project Policies <dev/policies.html>`__
| * `Docutils Web Site <dev/website.html>`__
| * `Docutils Release Procedure <dev/release.html>`__
| * `The Docutils Subversion Repository <dev/repository.html>`__
| * `Docutils Testing <dev/testing.html>`__
| * `Docstring Semantics <dev/semantics.html>`__ (incomplete)
| * `Python Source Reader <dev/pysource.html>`_ (incomplete)
| * `Docutils Python DTD <dev/pysource.dtd>`_ (experimental)
| * `Plan for Enthought API Documentation Tool <dev/enthought-plan.html>`_
| * `Enthought API Documentation Tool RFP <dev/enthought-rfp.html>`_
| 
| reStructuredText_:
| 
| * `A Record of reStructuredText Syntax Alternatives
|   <dev/rst/alternatives.html>`__
| * `Problems With StructuredText <dev/rst/problems.html>`__
| 
| 
| ..
|    Local Variables:
|    mode: indented-text
|    indent-tabs-mode: nil
|    sentence-end-double-space: t
|    fill-column: 70
|    End:

StateMachine.run: bof transition

StateMachine.run: line (source='index.txt', offset=79):
| 

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "blank" in state "Body".

StateMachine.run: line (source='index.txt', offset=80):
| Docutils-general:

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "Body".

StateMachine.get_state: Changing state from "Body" to "Text" (input line 81).

StateMachine.run: line (source='index.txt', offset=81):
| 

StateMachine.check_line: state="Text", transitions=['blank', 'indent', 'underline', 'text'].

StateMachine.check_line: Matched transition "blank" in state "Text".

StateMachine.get_state: Changing state from "Text" to "Body" (input line 82).

StateMachine.run: line (source='index.txt', offset=82):
| * `Docutils Front-End Tools <user/tools.html>`__

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "bullet" in state "Body".

StateMachine.run: input_lines (line_offset=-1):
| `Docutils Front-End Tools <user/tools.html>`__

StateMachine.run: bof transition

StateMachine.run: line (source='index.txt', offset=82):
| `Docutils Front-End Tools <user/tools.html>`__

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "Body".

StateMachine.get_state: Changing state from "Body" to "Text" (input line 83).

StateMachine.run: Text.eof transition

StateMachine.run: input_lines (line_offset=-1):
| * `Docutils Configuration <user/config.html>`__
| * `Docutils Mailing Lists <user/mailing-lists.html>`__
| * `Docutils Link List <user/links.html>`__
| 
| Writer-specific:
| 
| * `Docutils HTML writers <user/html.html>`__
| * `Easy Slide Shows With reStructuredText & S5 <user/slide-shows.html>`__
| * `Docutils LaTeX Writer <user/latex.html>`__
| * `Docutils ODF/OpenOffice/odt Writer <user/odt.html>`__
| 
| `reStructuredText <http://docutils.sourceforge.net/rst.html>`_:
| 
| * `A ReStructuredText Primer (HTML) <user/rst/quickstart.html>`__ (or
|   `text source <user/rst/quickstart.txt>`__)
| * `Quick reStructuredText <user/rst/quickref.html>`__ (user reference)
| * `reStructuredText Cheat Sheet <user/rst/cheatsheet.txt>`__ (text
|   only; 1 page for syntax, 1 page directive & role reference)
| * `reStructuredText Demonstration <user/rst/demo.html>`_ (a
|   demonstration of most reStructuredText features; you can also have a
|   look at the `text source <user/rst/demo.txt>`__)
| 
| Editor support:
| 
| * `Emacs support for reStructuredText <user/emacs.html>`_
| 
| 
| .. _ref:
| 
| ``ref/``: Reference Material for All Groups
| ===========================================
| 
| Many of these files began as developer specifications, but now that
| they're mature and used by end-users and client-developers, they have
| become reference material.  Successful specs evolve into refs.
| 
| Docutils-general:
| 
| * `The Docutils Document Tree <ref/doctree.html>`__ (incomplete)
| * `Docutils Transforms <ref/transforms.html>`__
| * `Docutils Generic DTD <ref/docutils.dtd>`__
| * `OASIS XML Exchange Table Model Declaration Module
|   <ref/soextblx.dtd>`__ (CALS tables DTD module)
| 
| Although not in the "ref" directory, `PEP 258`_ is a must-read
| reference for any Docutils developer.
| 
| reStructuredText_:
| 
| * `An Introduction to reStructuredText <ref/rst/introduction.html>`__
|   (includes the `Goals <ref/rst/introduction.html#goals>`__ and
|   `History <ref/rst/introduction.html#history>`__ of reStructuredText)
| * `reStructuredText Markup Specification <ref/rst/restructuredtext.html>`__
| * `reStructuredText Directives <ref/rst/directives.html>`__
| * `reStructuredText Interpreted Text Roles <ref/rst/roles.html>`__
| * `reStructuredText Standard Definition Files
|   <ref/rst/definitions.html>`_
| 
| Prehistoric:
| 
| * `Setext Documents Mirror
|   <http://docutils.sourceforge.net/mirror/setext.html>`__
| 
| 
| .. _peps:
| 
| ``peps/``: Python Enhancement Proposals
| =======================================
| 
| * `PEP 256: Docstring Processing System Framework`__ is a high-level
|   generic proposal.  [`PEP 256`__ in the `master repository`_]
| * `PEP 257: Docstring Conventions`__ addresses docstring style and
|   touches on content.  [`PEP 257`__ in the `master repository`_]
| * `PEP 258: Docutils Design Specification`__ is an overview of the
|   architecture of Docutils.  It documents design issues and
|   implementation details.  [`PEP 258`__ in the `master repository`_]
| * `PEP 287: reStructuredText Docstring Format`__ proposes a standard
|   markup syntax.  [`PEP 287`__ in the `master repository`_]
| 
| Please note that PEPs in the `master repository`_ may not be current,
| whereas the local versions are.
| 
| __ peps/pep-0256.html
| __ http://www.python.org/peps/pep-0256.html
| __ peps/pep-0257.html
| __ http://www.python.org/peps/pep-0257.html
| .. _PEP 258:
| __ peps/pep-0258.html
| __ http://www.python.org/peps/pep-0258.html
| __ peps/pep-0287.html
| __ http://www.python.org/peps/pep-0287.html
| .. _master repository: http://www.python.org/peps/
| 
| 
| .. _api:
| 
| ``api/``: API Reference Material for Client-Developers
| ======================================================
| 
| * `The Docutils Publisher <api/publisher.html>`__
| * `Inside A Docutils Command-Line Front-End Tool <api/cmdline-tool.html>`__
| * `Docutils Runtime Settings <api/runtime-settings.html>`__
| * (`Docutils Transforms <ref/transforms.html>`__ should be moved here)
| 
| `PEP 258`_ is an overview of the architecture of Docutils.
| 
| 
| .. _howto:
| 
| ``howto/``: Instructions for Developers
| =======================================
| 
| * **Security:** `Deploying Docutils Securely <howto/security.html>`__
| * `Writing HTML (CSS) Stylesheets for Docutils
|   <howto/html-stylesheets.html>`__
| * `Docutils Internationalization <howto/i18n.html>`__
| * `Creating reStructuredText Directives <howto/rst-directives.html>`__
| * `Creating reStructuredText Interpreted Text Roles
|   <howto/rst-roles.html>`__
| 
| 
| .. _dev:
| 
| ``dev/``: Development Notes and Plans for Core-Developers
| =========================================================
| 
| Docutils-general:
| 
| * `Docutils Hacker's Guide <dev/hacking.html>`__
| * `Docutils Distributor's Guide <dev/distributing.html>`__
| * `Docutils To Do List <dev/todo.html>`__
| * `Docutils Project Policies <dev/policies.html>`__
| * `Docutils Web Site <dev/website.html>`__
| * `Docutils Release Procedure <dev/release.html>`__
| * `The Docutils Subversion Repository <dev/repository.html>`__
| * `Docutils Testing <dev/testing.html>`__
| * `Docstring Semantics <dev/semantics.html>`__ (incomplete)
| * `Python Source Reader <dev/pysource.html>`_ (incomplete)
| * `Docutils Python DTD <dev/pysource.dtd>`_ (experimental)
| * `Plan for Enthought API Documentation Tool <dev/enthought-plan.html>`_
| * `Enthought API Documentation Tool RFP <dev/enthought-rfp.html>`_
| 
| reStructuredText_:
| 
| * `A Record of reStructuredText Syntax Alternatives
|   <dev/rst/alternatives.html>`__
| * `Problems With StructuredText <dev/rst/problems.html>`__
| 
| 
| ..
|    Local Variables:
|    mode: indented-text
|    indent-tabs-mode: nil
|    sentence-end-double-space: t
|    fill-column: 70
|    End:

StateMachine.run: bof transition

StateMachine.run: line (source='index.txt', offset=83):
| * `Docutils Configuration <user/config.html>`__

StateMachine.check_line: state="BulletList", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "bullet" in state "BulletList".

StateMachine.run: input_lines (line_offset=-1):
| `Docutils Configuration <user/config.html>`__

StateMachine.run: bof transition

StateMachine.run: line (source='index.txt', offset=83):
| `Docutils Configuration <user/config.html>`__

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "Body".

StateMachine.get_state: Changing state from "Body" to "Text" (input line 84).

StateMachine.run: Text.eof transition

StateMachine.run: line (source='index.txt', offset=84):
| * `Docutils Mailing Lists <user/mailing-lists.html>`__

StateMachine.check_line: state="BulletList", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "bullet" in state "BulletList".

StateMachine.run: input_lines (line_offset=-1):
| `Docutils Mailing Lists <user/mailing-lists.html>`__

StateMachine.run: bof transition

StateMachine.run: line (source='index.txt', offset=84):
| `Docutils Mailing Lists <user/mailing-lists.html>`__

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "Body".

StateMachine.get_state: Changing state from "Body" to "Text" (input line 85).

StateMachine.run: Text.eof transition

StateMachine.run: line (source='index.txt', offset=85):
| * `Docutils Link List <user/links.html>`__

StateMachine.check_line: state="BulletList", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "bullet" in state "BulletList".

StateMachine.run: input_lines (line_offset=-1):
| `Docutils Link List <user/links.html>`__
| 

StateMachine.run: bof transition

StateMachine.run: line (source='index.txt', offset=85):
| `Docutils Link List <user/links.html>`__

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "Body".

StateMachine.get_state: Changing state from "Body" to "Text" (input line 86).

StateMachine.run: line (source='index.txt', offset=86):
| 

StateMachine.check_line: state="Text", transitions=['blank', 'indent', 'underline', 'text'].

StateMachine.check_line: Matched transition "blank" in state "Text".

StateMachine.get_state: Changing state from "Text" to "Body" (input line 87).

StateMachine.run: Body.eof transition

StateMachine.run: line (source='index.txt', offset=87):
| Writer-specific:

StateMachine.check_line: state="BulletList", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "BulletList".

StateMachine.run: BulletList.eof transition

StateMachine.run: line (source='index.txt', offset=87):
| Writer-specific:

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "Body".

StateMachine.get_state: Changing state from "Body" to "Text" (input line 88).

StateMachine.run: line (source='index.txt', offset=88):
| 

StateMachine.check_line: state="Text", transitions=['blank', 'indent', 'underline', 'text'].

StateMachine.check_line: Matched transition "blank" in state "Text".

StateMachine.get_state: Changing state from "Text" to "Body" (input line 89).

StateMachine.run: line (source='index.txt', offset=89):
| * `Docutils HTML writers <user/html.html>`__

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "bullet" in state "Body".

StateMachine.run: input_lines (line_offset=-1):
| `Docutils HTML writers <user/html.html>`__

StateMachine.run: bof transition

StateMachine.run: line (source='index.txt', offset=89):
| `Docutils HTML writers <user/html.html>`__

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "Body".

StateMachine.get_state: Changing state from "Body" to "Text" (input line 90).

StateMachine.run: Text.eof transition

StateMachine.run: input_lines (line_offset=-1):
| * `Easy Slide Shows With reStructuredText & S5 <user/slide-shows.html>`__
| * `Docutils LaTeX Writer <user/latex.html>`__
| * `Docutils ODF/OpenOffice/odt Writer <user/odt.html>`__
| 
| `reStructuredText <http://docutils.sourceforge.net/rst.html>`_:
| 
| * `A ReStructuredText Primer (HTML) <user/rst/quickstart.html>`__ (or
|   `text source <user/rst/quickstart.txt>`__)
| * `Quick reStructuredText <user/rst/quickref.html>`__ (user reference)
| * `reStructuredText Cheat Sheet <user/rst/cheatsheet.txt>`__ (text
|   only; 1 page for syntax, 1 page directive & role reference)
| * `reStructuredText Demonstration <user/rst/demo.html>`_ (a
|   demonstration of most reStructuredText features; you can also have a
|   look at the `text source <user/rst/demo.txt>`__)
| 
| Editor support:
| 
| * `Emacs support for reStructuredText <user/emacs.html>`_
| 
| 
| .. _ref:
| 
| ``ref/``: Reference Material for All Groups
| ===========================================
| 
| Many of these files began as developer specifications, but now that
| they're mature and used by end-users and client-developers, they have
| become reference material.  Successful specs evolve into refs.
| 
| Docutils-general:
| 
| * `The Docutils Document Tree <ref/doctree.html>`__ (incomplete)
| * `Docutils Transforms <ref/transforms.html>`__
| * `Docutils Generic DTD <ref/docutils.dtd>`__
| * `OASIS XML Exchange Table Model Declaration Module
|   <ref/soextblx.dtd>`__ (CALS tables DTD module)
| 
| Although not in the "ref" directory, `PEP 258`_ is a must-read
| reference for any Docutils developer.
| 
| reStructuredText_:
| 
| * `An Introduction to reStructuredText <ref/rst/introduction.html>`__
|   (includes the `Goals <ref/rst/introduction.html#goals>`__ and
|   `History <ref/rst/introduction.html#history>`__ of reStructuredText)
| * `reStructuredText Markup Specification <ref/rst/restructuredtext.html>`__
| * `reStructuredText Directives <ref/rst/directives.html>`__
| * `reStructuredText Interpreted Text Roles <ref/rst/roles.html>`__
| * `reStructuredText Standard Definition Files
|   <ref/rst/definitions.html>`_
| 
| Prehistoric:
| 
| * `Setext Documents Mirror
|   <http://docutils.sourceforge.net/mirror/setext.html>`__
| 
| 
| .. _peps:
| 
| ``peps/``: Python Enhancement Proposals
| =======================================
| 
| * `PEP 256: Docstring Processing System Framework`__ is a high-level
|   generic proposal.  [`PEP 256`__ in the `master repository`_]
| * `PEP 257: Docstring Conventions`__ addresses docstring style and
|   touches on content.  [`PEP 257`__ in the `master repository`_]
| * `PEP 258: Docutils Design Specification`__ is an overview of the
|   architecture of Docutils.  It documents design issues and
|   implementation details.  [`PEP 258`__ in the `master repository`_]
| * `PEP 287: reStructuredText Docstring Format`__ proposes a standard
|   markup syntax.  [`PEP 287`__ in the `master repository`_]
| 
| Please note that PEPs in the `master repository`_ may not be current,
| whereas the local versions are.
| 
| __ peps/pep-0256.html
| __ http://www.python.org/peps/pep-0256.html
| __ peps/pep-0257.html
| __ http://www.python.org/peps/pep-0257.html
| .. _PEP 258:
| __ peps/pep-0258.html
| __ http://www.python.org/peps/pep-0258.html
| __ peps/pep-0287.html
| __ http://www.python.org/peps/pep-0287.html
| .. _master repository: http://www.python.org/peps/
| 
| 
| .. _api:
| 
| ``api/``: API Reference Material for Client-Developers
| ======================================================
| 
| * `The Docutils Publisher <api/publisher.html>`__
| * `Inside A Docutils Command-Line Front-End Tool <api/cmdline-tool.html>`__
| * `Docutils Runtime Settings <api/runtime-settings.html>`__
| * (`Docutils Transforms <ref/transforms.html>`__ should be moved here)
| 
| `PEP 258`_ is an overview of the architecture of Docutils.
| 
| 
| .. _howto:
| 
| ``howto/``: Instructions for Developers
| =======================================
| 
| * **Security:** `Deploying Docutils Securely <howto/security.html>`__
| * `Writing HTML (CSS) Stylesheets for Docutils
|   <howto/html-stylesheets.html>`__
| * `Docutils Internationalization <howto/i18n.html>`__
| * `Creating reStructuredText Directives <howto/rst-directives.html>`__
| * `Creating reStructuredText Interpreted Text Roles
|   <howto/rst-roles.html>`__
| 
| 
| .. _dev:
| 
| ``dev/``: Development Notes and Plans for Core-Developers
| =========================================================
| 
| Docutils-general:
| 
| * `Docutils Hacker's Guide <dev/hacking.html>`__
| * `Docutils Distributor's Guide <dev/distributing.html>`__
| * `Docutils To Do List <dev/todo.html>`__
| * `Docutils Project Policies <dev/policies.html>`__
| * `Docutils Web Site <dev/website.html>`__
| * `Docutils Release Procedure <dev/release.html>`__
| * `The Docutils Subversion Repository <dev/repository.html>`__
| * `Docutils Testing <dev/testing.html>`__
| * `Docstring Semantics <dev/semantics.html>`__ (incomplete)
| * `Python Source Reader <dev/pysource.html>`_ (incomplete)
| * `Docutils Python DTD <dev/pysource.dtd>`_ (experimental)
| * `Plan for Enthought API Documentation Tool <dev/enthought-plan.html>`_
| * `Enthought API Documentation Tool RFP <dev/enthought-rfp.html>`_
| 
| reStructuredText_:
| 
| * `A Record of reStructuredText Syntax Alternatives
|   <dev/rst/alternatives.html>`__
| * `Problems With StructuredText <dev/rst/problems.html>`__
| 
| 
| ..
|    Local Variables:
|    mode: indented-text
|    indent-tabs-mode: nil
|    sentence-end-double-space: t
|    fill-column: 70
|    End:

StateMachine.run: bof transition

StateMachine.run: line (source='index.txt', offset=90):
| * `Easy Slide Shows With reStructuredText & S5 <user/slide-shows.html>`__

StateMachine.check_line: state="BulletList", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "bullet" in state "BulletList".

StateMachine.run: input_lines (line_offset=-1):
| `Easy Slide Shows With reStructuredText & S5 <user/slide-shows.html>`__

StateMachine.run: bof transition

StateMachine.run: line (source='index.txt', offset=90):
| `Easy Slide Shows With reStructuredText & S5 <user/slide-shows.html>`__

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "Body".

StateMachine.get_state: Changing state from "Body" to "Text" (input line 91).

StateMachine.run: Text.eof transition

StateMachine.run: line (source='index.txt', offset=91):
| * `Docutils LaTeX Writer <user/latex.html>`__

StateMachine.check_line: state="BulletList", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "bullet" in state "BulletList".

StateMachine.run: input_lines (line_offset=-1):
| `Docutils LaTeX Writer <user/latex.html>`__

StateMachine.run: bof transition

StateMachine.run: line (source='index.txt', offset=91):
| `Docutils LaTeX Writer <user/latex.html>`__

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "Body".

StateMachine.get_state: Changing state from "Body" to "Text" (input line 92).

StateMachine.run: Text.eof transition

StateMachine.run: line (source='index.txt', offset=92):
| * `Docutils ODF/OpenOffice/odt Writer <user/odt.html>`__

StateMachine.check_line: state="BulletList", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "bullet" in state "BulletList".

StateMachine.run: input_lines (line_offset=-1):
| `Docutils ODF/OpenOffice/odt Writer <user/odt.html>`__
| 

StateMachine.run: bof transition

StateMachine.run: line (source='index.txt', offset=92):
| `Docutils ODF/OpenOffice/odt Writer <user/odt.html>`__

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "Body".

StateMachine.get_state: Changing state from "Body" to "Text" (input line 93).

StateMachine.run: line (source='index.txt', offset=93):
| 

StateMachine.check_line: state="Text", transitions=['blank', 'indent', 'underline', 'text'].

StateMachine.check_line: Matched transition "blank" in state "Text".

StateMachine.get_state: Changing state from "Text" to "Body" (input line 94).

StateMachine.run: Body.eof transition

StateMachine.run: line (source='index.txt', offset=94):
| `reStructuredText <http://docutils.sourceforge.net/rst.html>`_:

StateMachine.check_line: state="BulletList", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "BulletList".

StateMachine.run: BulletList.eof transition

StateMachine.run: line (source='index.txt', offset=94):
| `reStructuredText <http://docutils.sourceforge.net/rst.html>`_:

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "Body".

StateMachine.get_state: Changing state from "Body" to "Text" (input line 95).

StateMachine.run: line (source='index.txt', offset=95):
| 

StateMachine.check_line: state="Text", transitions=['blank', 'indent', 'underline', 'text'].

StateMachine.check_line: Matched transition "blank" in state "Text".

StateMachine.get_state: Changing state from "Text" to "Body" (input line 96).

StateMachine.run: line (source='index.txt', offset=96):
| * `A ReStructuredText Primer (HTML) <user/rst/quickstart.html>`__ (or

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "bullet" in state "Body".

StateMachine.run: input_lines (line_offset=-1):
| `A ReStructuredText Primer (HTML) <user/rst/quickstart.html>`__ (or
| `text source <user/rst/quickstart.txt>`__)

StateMachine.run: bof transition

StateMachine.run: line (source='index.txt', offset=96):
| `A ReStructuredText Primer (HTML) <user/rst/quickstart.html>`__ (or

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "Body".

StateMachine.get_state: Changing state from "Body" to "Text" (input line 97).

StateMachine.run: line (source='index.txt', offset=97):
| `text source <user/rst/quickstart.txt>`__)

StateMachine.check_line: state="Text", transitions=['blank', 'indent', 'underline', 'text'].

StateMachine.check_line: Matched transition "text" in state "Text".

StateMachine.get_state: Changing state from "Text" to "Body" (input line 98).

StateMachine.run: Body.eof transition

StateMachine.run: input_lines (line_offset=-1):
| * `Quick reStructuredText <user/rst/quickref.html>`__ (user reference)
| * `reStructuredText Cheat Sheet <user/rst/cheatsheet.txt>`__ (text
|   only; 1 page for syntax, 1 page directive & role reference)
| * `reStructuredText Demonstration <user/rst/demo.html>`_ (a
|   demonstration of most reStructuredText features; you can also have a
|   look at the `text source <user/rst/demo.txt>`__)
| 
| Editor support:
| 
| * `Emacs support for reStructuredText <user/emacs.html>`_
| 
| 
| .. _ref:
| 
| ``ref/``: Reference Material for All Groups
| ===========================================
| 
| Many of these files began as developer specifications, but now that
| they're mature and used by end-users and client-developers, they have
| become reference material.  Successful specs evolve into refs.
| 
| Docutils-general:
| 
| * `The Docutils Document Tree <ref/doctree.html>`__ (incomplete)
| * `Docutils Transforms <ref/transforms.html>`__
| * `Docutils Generic DTD <ref/docutils.dtd>`__
| * `OASIS XML Exchange Table Model Declaration Module
|   <ref/soextblx.dtd>`__ (CALS tables DTD module)
| 
| Although not in the "ref" directory, `PEP 258`_ is a must-read
| reference for any Docutils developer.
| 
| reStructuredText_:
| 
| * `An Introduction to reStructuredText <ref/rst/introduction.html>`__
|   (includes the `Goals <ref/rst/introduction.html#goals>`__ and
|   `History <ref/rst/introduction.html#history>`__ of reStructuredText)
| * `reStructuredText Markup Specification <ref/rst/restructuredtext.html>`__
| * `reStructuredText Directives <ref/rst/directives.html>`__
| * `reStructuredText Interpreted Text Roles <ref/rst/roles.html>`__
| * `reStructuredText Standard Definition Files
|   <ref/rst/definitions.html>`_
| 
| Prehistoric:
| 
| * `Setext Documents Mirror
|   <http://docutils.sourceforge.net/mirror/setext.html>`__
| 
| 
| .. _peps:
| 
| ``peps/``: Python Enhancement Proposals
| =======================================
| 
| * `PEP 256: Docstring Processing System Framework`__ is a high-level
|   generic proposal.  [`PEP 256`__ in the `master repository`_]
| * `PEP 257: Docstring Conventions`__ addresses docstring style and
|   touches on content.  [`PEP 257`__ in the `master repository`_]
| * `PEP 258: Docutils Design Specification`__ is an overview of the
|   architecture of Docutils.  It documents design issues and
|   implementation details.  [`PEP 258`__ in the `master repository`_]
| * `PEP 287: reStructuredText Docstring Format`__ proposes a standard
|   markup syntax.  [`PEP 287`__ in the `master repository`_]
| 
| Please note that PEPs in the `master repository`_ may not be current,
| whereas the local versions are.
| 
| __ peps/pep-0256.html
| __ http://www.python.org/peps/pep-0256.html
| __ peps/pep-0257.html
| __ http://www.python.org/peps/pep-0257.html
| .. _PEP 258:
| __ peps/pep-0258.html
| __ http://www.python.org/peps/pep-0258.html
| __ peps/pep-0287.html
| __ http://www.python.org/peps/pep-0287.html
| .. _master repository: http://www.python.org/peps/
| 
| 
| .. _api:
| 
| ``api/``: API Reference Material for Client-Developers
| ======================================================
| 
| * `The Docutils Publisher <api/publisher.html>`__
| * `Inside A Docutils Command-Line Front-End Tool <api/cmdline-tool.html>`__
| * `Docutils Runtime Settings <api/runtime-settings.html>`__
| * (`Docutils Transforms <ref/transforms.html>`__ should be moved here)
| 
| `PEP 258`_ is an overview of the architecture of Docutils.
| 
| 
| .. _howto:
| 
| ``howto/``: Instructions for Developers
| =======================================
| 
| * **Security:** `Deploying Docutils Securely <howto/security.html>`__
| * `Writing HTML (CSS) Stylesheets for Docutils
|   <howto/html-stylesheets.html>`__
| * `Docutils Internationalization <howto/i18n.html>`__
| * `Creating reStructuredText Directives <howto/rst-directives.html>`__
| * `Creating reStructuredText Interpreted Text Roles
|   <howto/rst-roles.html>`__
| 
| 
| .. _dev:
| 
| ``dev/``: Development Notes and Plans for Core-Developers
| =========================================================
| 
| Docutils-general:
| 
| * `Docutils Hacker's Guide <dev/hacking.html>`__
| * `Docutils Distributor's Guide <dev/distributing.html>`__
| * `Docutils To Do List <dev/todo.html>`__
| * `Docutils Project Policies <dev/policies.html>`__
| * `Docutils Web Site <dev/website.html>`__
| * `Docutils Release Procedure <dev/release.html>`__
| * `The Docutils Subversion Repository <dev/repository.html>`__
| * `Docutils Testing <dev/testing.html>`__
| * `Docstring Semantics <dev/semantics.html>`__ (incomplete)
| * `Python Source Reader <dev/pysource.html>`_ (incomplete)
| * `Docutils Python DTD <dev/pysource.dtd>`_ (experimental)
| * `Plan for Enthought API Documentation Tool <dev/enthought-plan.html>`_
| * `Enthought API Documentation Tool RFP <dev/enthought-rfp.html>`_
| 
| reStructuredText_:
| 
| * `A Record of reStructuredText Syntax Alternatives
|   <dev/rst/alternatives.html>`__
| * `Problems With StructuredText <dev/rst/problems.html>`__
| 
| 
| ..
|    Local Variables:
|    mode: indented-text
|    indent-tabs-mode: nil
|    sentence-end-double-space: t
|    fill-column: 70
|    End:

StateMachine.run: bof transition

StateMachine.run: line (source='index.txt', offset=98):
| * `Quick reStructuredText <user/rst/quickref.html>`__ (user reference)

StateMachine.check_line: state="BulletList", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "bullet" in state "BulletList".

StateMachine.run: input_lines (line_offset=-1):
| `Quick reStructuredText <user/rst/quickref.html>`__ (user reference)

StateMachine.run: bof transition

StateMachine.run: line (source='index.txt', offset=98):
| `Quick reStructuredText <user/rst/quickref.html>`__ (user reference)

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "Body".

StateMachine.get_state: Changing state from "Body" to "Text" (input line 99).

StateMachine.run: Text.eof transition

StateMachine.run: line (source='index.txt', offset=99):
| * `reStructuredText Cheat Sheet <user/rst/cheatsheet.txt>`__ (text

StateMachine.check_line: state="BulletList", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "bullet" in state "BulletList".

StateMachine.run: input_lines (line_offset=-1):
| `reStructuredText Cheat Sheet <user/rst/cheatsheet.txt>`__ (text
| only; 1 page for syntax, 1 page directive & role reference)

StateMachine.run: bof transition

StateMachine.run: line (source='index.txt', offset=99):
| `reStructuredText Cheat Sheet <user/rst/cheatsheet.txt>`__ (text

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "Body".

StateMachine.get_state: Changing state from "Body" to "Text" (input line 100).

StateMachine.run: line (source='index.txt', offset=100):
| only; 1 page for syntax, 1 page directive & role reference)

StateMachine.check_line: state="Text", transitions=['blank', 'indent', 'underline', 'text'].

StateMachine.check_line: Matched transition "text" in state "Text".

StateMachine.get_state: Changing state from "Text" to "Body" (input line 101).

StateMachine.run: Body.eof transition

StateMachine.run: line (source='index.txt', offset=101):
| * `reStructuredText Demonstration <user/rst/demo.html>`_ (a

StateMachine.check_line: state="BulletList", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "bullet" in state "BulletList".

StateMachine.run: input_lines (line_offset=-1):
| `reStructuredText Demonstration <user/rst/demo.html>`_ (a
| demonstration of most reStructuredText features; you can also have a
| look at the `text source <user/rst/demo.txt>`__)
| 

StateMachine.run: bof transition

StateMachine.run: line (source='index.txt', offset=101):
| `reStructuredText Demonstration <user/rst/demo.html>`_ (a

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "Body".

StateMachine.get_state: Changing state from "Body" to "Text" (input line 102).

StateMachine.run: line (source='index.txt', offset=102):
| demonstration of most reStructuredText features; you can also have a

StateMachine.check_line: state="Text", transitions=['blank', 'indent', 'underline', 'text'].

StateMachine.check_line: Matched transition "text" in state "Text".

StateMachine.get_state: Changing state from "Text" to "Body" (input line 104).

StateMachine.run: line (source='index.txt', offset=104):
| 

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "blank" in state "Body".

StateMachine.run: Body.eof transition

StateMachine.run: line (source='index.txt', offset=105):
| Editor support:

StateMachine.check_line: state="BulletList", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "BulletList".

StateMachine.run: BulletList.eof transition

StateMachine.run: line (source='index.txt', offset=105):
| Editor support:

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "Body".

StateMachine.get_state: Changing state from "Body" to "Text" (input line 106).

StateMachine.run: line (source='index.txt', offset=106):
| 

StateMachine.check_line: state="Text", transitions=['blank', 'indent', 'underline', 'text'].

StateMachine.check_line: Matched transition "blank" in state "Text".

StateMachine.get_state: Changing state from "Text" to "Body" (input line 107).

StateMachine.run: line (source='index.txt', offset=107):
| * `Emacs support for reStructuredText <user/emacs.html>`_

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "bullet" in state "Body".

StateMachine.run: input_lines (line_offset=-1):
| `Emacs support for reStructuredText <user/emacs.html>`_
| 
| 

StateMachine.run: bof transition

StateMachine.run: line (source='index.txt', offset=107):
| `Emacs support for reStructuredText <user/emacs.html>`_

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "Body".

StateMachine.get_state: Changing state from "Body" to "Text" (input line 108).

StateMachine.run: line (source='index.txt', offset=108):
| 

StateMachine.check_line: state="Text", transitions=['blank', 'indent', 'underline', 'text'].

StateMachine.check_line: Matched transition "blank" in state "Text".

StateMachine.get_state: Changing state from "Text" to "Body" (input line 109).

StateMachine.run: line (source='index.txt', offset=109):
| 

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "blank" in state "Body".

StateMachine.run: Body.eof transition

StateMachine.run: input_lines (line_offset=-1):
| .. _ref:
| 
| ``ref/``: Reference Material for All Groups
| ===========================================
| 
| Many of these files began as developer specifications, but now that
| they're mature and used by end-users and client-developers, they have
| become reference material.  Successful specs evolve into refs.
| 
| Docutils-general:
| 
| * `The Docutils Document Tree <ref/doctree.html>`__ (incomplete)
| * `Docutils Transforms <ref/transforms.html>`__
| * `Docutils Generic DTD <ref/docutils.dtd>`__
| * `OASIS XML Exchange Table Model Declaration Module
|   <ref/soextblx.dtd>`__ (CALS tables DTD module)
| 
| Although not in the "ref" directory, `PEP 258`_ is a must-read
| reference for any Docutils developer.
| 
| reStructuredText_:
| 
| * `An Introduction to reStructuredText <ref/rst/introduction.html>`__
|   (includes the `Goals <ref/rst/introduction.html#goals>`__ and
|   `History <ref/rst/introduction.html#history>`__ of reStructuredText)
| * `reStructuredText Markup Specification <ref/rst/restructuredtext.html>`__
| * `reStructuredText Directives <ref/rst/directives.html>`__
| * `reStructuredText Interpreted Text Roles <ref/rst/roles.html>`__
| * `reStructuredText Standard Definition Files
|   <ref/rst/definitions.html>`_
| 
| Prehistoric:
| 
| * `Setext Documents Mirror
|   <http://docutils.sourceforge.net/mirror/setext.html>`__
| 
| 
| .. _peps:
| 
| ``peps/``: Python Enhancement Proposals
| =======================================
| 
| * `PEP 256: Docstring Processing System Framework`__ is a high-level
|   generic proposal.  [`PEP 256`__ in the `master repository`_]
| * `PEP 257: Docstring Conventions`__ addresses docstring style and
|   touches on content.  [`PEP 257`__ in the `master repository`_]
| * `PEP 258: Docutils Design Specification`__ is an overview of the
|   architecture of Docutils.  It documents design issues and
|   implementation details.  [`PEP 258`__ in the `master repository`_]
| * `PEP 287: reStructuredText Docstring Format`__ proposes a standard
|   markup syntax.  [`PEP 287`__ in the `master repository`_]
| 
| Please note that PEPs in the `master repository`_ may not be current,
| whereas the local versions are.
| 
| __ peps/pep-0256.html
| __ http://www.python.org/peps/pep-0256.html
| __ peps/pep-0257.html
| __ http://www.python.org/peps/pep-0257.html
| .. _PEP 258:
| __ peps/pep-0258.html
| __ http://www.python.org/peps/pep-0258.html
| __ peps/pep-0287.html
| __ http://www.python.org/peps/pep-0287.html
| .. _master repository: http://www.python.org/peps/
| 
| 
| .. _api:
| 
| ``api/``: API Reference Material for Client-Developers
| ======================================================
| 
| * `The Docutils Publisher <api/publisher.html>`__
| * `Inside A Docutils Command-Line Front-End Tool <api/cmdline-tool.html>`__
| * `Docutils Runtime Settings <api/runtime-settings.html>`__
| * (`Docutils Transforms <ref/transforms.html>`__ should be moved here)
| 
| `PEP 258`_ is an overview of the architecture of Docutils.
| 
| 
| .. _howto:
| 
| ``howto/``: Instructions for Developers
| =======================================
| 
| * **Security:** `Deploying Docutils Securely <howto/security.html>`__
| * `Writing HTML (CSS) Stylesheets for Docutils
|   <howto/html-stylesheets.html>`__
| * `Docutils Internationalization <howto/i18n.html>`__
| * `Creating reStructuredText Directives <howto/rst-directives.html>`__
| * `Creating reStructuredText Interpreted Text Roles
|   <howto/rst-roles.html>`__
| 
| 
| .. _dev:
| 
| ``dev/``: Development Notes and Plans for Core-Developers
| =========================================================
| 
| Docutils-general:
| 
| * `Docutils Hacker's Guide <dev/hacking.html>`__
| * `Docutils Distributor's Guide <dev/distributing.html>`__
| * `Docutils To Do List <dev/todo.html>`__
| * `Docutils Project Policies <dev/policies.html>`__
| * `Docutils Web Site <dev/website.html>`__
| * `Docutils Release Procedure <dev/release.html>`__
| * `The Docutils Subversion Repository <dev/repository.html>`__
| * `Docutils Testing <dev/testing.html>`__
| * `Docstring Semantics <dev/semantics.html>`__ (incomplete)
| * `Python Source Reader <dev/pysource.html>`_ (incomplete)
| * `Docutils Python DTD <dev/pysource.dtd>`_ (experimental)
| * `Plan for Enthought API Documentation Tool <dev/enthought-plan.html>`_
| * `Enthought API Documentation Tool RFP <dev/enthought-rfp.html>`_
| 
| reStructuredText_:
| 
| * `A Record of reStructuredText Syntax Alternatives
|   <dev/rst/alternatives.html>`__
| * `Problems With StructuredText <dev/rst/problems.html>`__
| 
| 
| ..
|    Local Variables:
|    mode: indented-text
|    indent-tabs-mode: nil
|    sentence-end-double-space: t
|    fill-column: 70
|    End:

StateMachine.run: bof transition

StateMachine.run: line (source='index.txt', offset=110):
| .. _ref:

StateMachine.check_line: state="BulletList", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "explicit_markup" in state "BulletList".

StateMachine.run: BulletList.eof transition

StateMachine.run: line (source='index.txt', offset=110):
| .. _ref:

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "explicit_markup" in state "Body".

StateMachine.run: input_lines (line_offset=-1):
| 
| ``ref/``: Reference Material for All Groups
| ===========================================
| 
| Many of these files began as developer specifications, but now that
| they're mature and used by end-users and client-developers, they have
| become reference material.  Successful specs evolve into refs.
| 
| Docutils-general:
| 
| * `The Docutils Document Tree <ref/doctree.html>`__ (incomplete)
| * `Docutils Transforms <ref/transforms.html>`__
| * `Docutils Generic DTD <ref/docutils.dtd>`__
| * `OASIS XML Exchange Table Model Declaration Module
|   <ref/soextblx.dtd>`__ (CALS tables DTD module)
| 
| Although not in the "ref" directory, `PEP 258`_ is a must-read
| reference for any Docutils developer.
| 
| reStructuredText_:
| 
| * `An Introduction to reStructuredText <ref/rst/introduction.html>`__
|   (includes the `Goals <ref/rst/introduction.html#goals>`__ and
|   `History <ref/rst/introduction.html#history>`__ of reStructuredText)
| * `reStructuredText Markup Specification <ref/rst/restructuredtext.html>`__
| * `reStructuredText Directives <ref/rst/directives.html>`__
| * `reStructuredText Interpreted Text Roles <ref/rst/roles.html>`__
| * `reStructuredText Standard Definition Files
|   <ref/rst/definitions.html>`_
| 
| Prehistoric:
| 
| * `Setext Documents Mirror
|   <http://docutils.sourceforge.net/mirror/setext.html>`__
| 
| 
| .. _peps:
| 
| ``peps/``: Python Enhancement Proposals
| =======================================
| 
| * `PEP 256: Docstring Processing System Framework`__ is a high-level
|   generic proposal.  [`PEP 256`__ in the `master repository`_]
| * `PEP 257: Docstring Conventions`__ addresses docstring style and
|   touches on content.  [`PEP 257`__ in the `master repository`_]
| * `PEP 258: Docutils Design Specification`__ is an overview of the
|   architecture of Docutils.  It documents design issues and
|   implementation details.  [`PEP 258`__ in the `master repository`_]
| * `PEP 287: reStructuredText Docstring Format`__ proposes a standard
|   markup syntax.  [`PEP 287`__ in the `master repository`_]
| 
| Please note that PEPs in the `master repository`_ may not be current,
| whereas the local versions are.
| 
| __ peps/pep-0256.html
| __ http://www.python.org/peps/pep-0256.html
| __ peps/pep-0257.html
| __ http://www.python.org/peps/pep-0257.html
| .. _PEP 258:
| __ peps/pep-0258.html
| __ http://www.python.org/peps/pep-0258.html
| __ peps/pep-0287.html
| __ http://www.python.org/peps/pep-0287.html
| .. _master repository: http://www.python.org/peps/
| 
| 
| .. _api:
| 
| ``api/``: API Reference Material for Client-Developers
| ======================================================
| 
| * `The Docutils Publisher <api/publisher.html>`__
| * `Inside A Docutils Command-Line Front-End Tool <api/cmdline-tool.html>`__
| * `Docutils Runtime Settings <api/runtime-settings.html>`__
| * (`Docutils Transforms <ref/transforms.html>`__ should be moved here)
| 
| `PEP 258`_ is an overview of the architecture of Docutils.
| 
| 
| .. _howto:
| 
| ``howto/``: Instructions for Developers
| =======================================
| 
| * **Security:** `Deploying Docutils Securely <howto/security.html>`__
| * `Writing HTML (CSS) Stylesheets for Docutils
|   <howto/html-stylesheets.html>`__
| * `Docutils Internationalization <howto/i18n.html>`__
| * `Creating reStructuredText Directives <howto/rst-directives.html>`__
| * `Creating reStructuredText Interpreted Text Roles
|   <howto/rst-roles.html>`__
| 
| 
| .. _dev:
| 
| ``dev/``: Development Notes and Plans for Core-Developers
| =========================================================
| 
| Docutils-general:
| 
| * `Docutils Hacker's Guide <dev/hacking.html>`__
| * `Docutils Distributor's Guide <dev/distributing.html>`__
| * `Docutils To Do List <dev/todo.html>`__
| * `Docutils Project Policies <dev/policies.html>`__
| * `Docutils Web Site <dev/website.html>`__
| * `Docutils Release Procedure <dev/release.html>`__
| * `The Docutils Subversion Repository <dev/repository.html>`__
| * `Docutils Testing <dev/testing.html>`__
| * `Docstring Semantics <dev/semantics.html>`__ (incomplete)
| * `Python Source Reader <dev/pysource.html>`_ (incomplete)
| * `Docutils Python DTD <dev/pysource.dtd>`_ (experimental)
| * `Plan for Enthought API Documentation Tool <dev/enthought-plan.html>`_
| * `Enthought API Documentation Tool RFP <dev/enthought-rfp.html>`_
| 
| reStructuredText_:
| 
| * `A Record of reStructuredText Syntax Alternatives
|   <dev/rst/alternatives.html>`__
| * `Problems With StructuredText <dev/rst/problems.html>`__
| 
| 
| ..
|    Local Variables:
|    mode: indented-text
|    indent-tabs-mode: nil
|    sentence-end-double-space: t
|    fill-column: 70
|    End:

StateMachine.run: bof transition

StateMachine.run: line (source='index.txt', offset=111):
| 

StateMachine.check_line: state="Explicit", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "blank" in state "Explicit".

StateMachine.run: Explicit.eof transition

StateMachine.run: line (source='index.txt', offset=111):
| 

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "blank" in state "Body".

StateMachine.run: line (source='index.txt', offset=112):
| ``ref/``: Reference Material for All Groups

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "Body".

StateMachine.get_state: Changing state from "Body" to "Text" (input line 113).

StateMachine.run: line (source='index.txt', offset=113):
| ===========================================

StateMachine.check_line: state="Text", transitions=['blank', 'indent', 'underline', 'text'].

StateMachine.check_line: Matched transition "underline" in state "Text".

StateMachine.run: Text.eof transition

StateMachine.get_state: Changing state from "Text" to "Body" (input line 112).

StateMachine.run: line (source='index.txt', offset=112):
| ``ref/``: Reference Material for All Groups

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "Body".

StateMachine.get_state: Changing state from "Body" to "Text" (input line 113).

StateMachine.run: line (source='index.txt', offset=113):
| ===========================================

StateMachine.check_line: state="Text", transitions=['blank', 'indent', 'underline', 'text'].

StateMachine.check_line: Matched transition "underline" in state "Text".

StateMachine.run: input_lines (line_offset=-1):
| 
| Many of these files began as developer specifications, but now that
| they're mature and used by end-users and client-developers, they have
| become reference material.  Successful specs evolve into refs.
| 
| Docutils-general:
| 
| * `The Docutils Document Tree <ref/doctree.html>`__ (incomplete)
| * `Docutils Transforms <ref/transforms.html>`__
| * `Docutils Generic DTD <ref/docutils.dtd>`__
| * `OASIS XML Exchange Table Model Declaration Module
|   <ref/soextblx.dtd>`__ (CALS tables DTD module)
| 
| Although not in the "ref" directory, `PEP 258`_ is a must-read
| reference for any Docutils developer.
| 
| reStructuredText_:
| 
| * `An Introduction to reStructuredText <ref/rst/introduction.html>`__
|   (includes the `Goals <ref/rst/introduction.html#goals>`__ and
|   `History <ref/rst/introduction.html#history>`__ of reStructuredText)
| * `reStructuredText Markup Specification <ref/rst/restructuredtext.html>`__
| * `reStructuredText Directives <ref/rst/directives.html>`__
| * `reStructuredText Interpreted Text Roles <ref/rst/roles.html>`__
| * `reStructuredText Standard Definition Files
|   <ref/rst/definitions.html>`_
| 
| Prehistoric:
| 
| * `Setext Documents Mirror
|   <http://docutils.sourceforge.net/mirror/setext.html>`__
| 
| 
| .. _peps:
| 
| ``peps/``: Python Enhancement Proposals
| =======================================
| 
| * `PEP 256: Docstring Processing System Framework`__ is a high-level
|   generic proposal.  [`PEP 256`__ in the `master repository`_]
| * `PEP 257: Docstring Conventions`__ addresses docstring style and
|   touches on content.  [`PEP 257`__ in the `master repository`_]
| * `PEP 258: Docutils Design Specification`__ is an overview of the
|   architecture of Docutils.  It documents design issues and
|   implementation details.  [`PEP 258`__ in the `master repository`_]
| * `PEP 287: reStructuredText Docstring Format`__ proposes a standard
|   markup syntax.  [`PEP 287`__ in the `master repository`_]
| 
| Please note that PEPs in the `master repository`_ may not be current,
| whereas the local versions are.
| 
| __ peps/pep-0256.html
| __ http://www.python.org/peps/pep-0256.html
| __ peps/pep-0257.html
| __ http://www.python.org/peps/pep-0257.html
| .. _PEP 258:
| __ peps/pep-0258.html
| __ http://www.python.org/peps/pep-0258.html
| __ peps/pep-0287.html
| __ http://www.python.org/peps/pep-0287.html
| .. _master repository: http://www.python.org/peps/
| 
| 
| .. _api:
| 
| ``api/``: API Reference Material for Client-Developers
| ======================================================
| 
| * `The Docutils Publisher <api/publisher.html>`__
| * `Inside A Docutils Command-Line Front-End Tool <api/cmdline-tool.html>`__
| * `Docutils Runtime Settings <api/runtime-settings.html>`__
| * (`Docutils Transforms <ref/transforms.html>`__ should be moved here)
| 
| `PEP 258`_ is an overview of the architecture of Docutils.
| 
| 
| .. _howto:
| 
| ``howto/``: Instructions for Developers
| =======================================
| 
| * **Security:** `Deploying Docutils Securely <howto/security.html>`__
| * `Writing HTML (CSS) Stylesheets for Docutils
|   <howto/html-stylesheets.html>`__
| * `Docutils Internationalization <howto/i18n.html>`__
| * `Creating reStructuredText Directives <howto/rst-directives.html>`__
| * `Creating reStructuredText Interpreted Text Roles
|   <howto/rst-roles.html>`__
| 
| 
| .. _dev:
| 
| ``dev/``: Development Notes and Plans for Core-Developers
| =========================================================
| 
| Docutils-general:
| 
| * `Docutils Hacker's Guide <dev/hacking.html>`__
| * `Docutils Distributor's Guide <dev/distributing.html>`__
| * `Docutils To Do List <dev/todo.html>`__
| * `Docutils Project Policies <dev/policies.html>`__
| * `Docutils Web Site <dev/website.html>`__
| * `Docutils Release Procedure <dev/release.html>`__
| * `The Docutils Subversion Repository <dev/repository.html>`__
| * `Docutils Testing <dev/testing.html>`__
| * `Docstring Semantics <dev/semantics.html>`__ (incomplete)
| * `Python Source Reader <dev/pysource.html>`_ (incomplete)
| * `Docutils Python DTD <dev/pysource.dtd>`_ (experimental)
| * `Plan for Enthought API Documentation Tool <dev/enthought-plan.html>`_
| * `Enthought API Documentation Tool RFP <dev/enthought-rfp.html>`_
| 
| reStructuredText_:
| 
| * `A Record of reStructuredText Syntax Alternatives
|   <dev/rst/alternatives.html>`__
| * `Problems With StructuredText <dev/rst/problems.html>`__
| 
| 
| ..
|    Local Variables:
|    mode: indented-text
|    indent-tabs-mode: nil
|    sentence-end-double-space: t
|    fill-column: 70
|    End:

StateMachine.run: bof transition

StateMachine.run: line (source='index.txt', offset=114):
| 

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "blank" in state "Body".

StateMachine.run: line (source='index.txt', offset=115):
| Many of these files began as developer specifications, but now that

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "Body".

StateMachine.get_state: Changing state from "Body" to "Text" (input line 116).

StateMachine.run: line (source='index.txt', offset=116):
| they're mature and used by end-users and client-developers, they have

StateMachine.check_line: state="Text", transitions=['blank', 'indent', 'underline', 'text'].

StateMachine.check_line: Matched transition "text" in state "Text".

StateMachine.get_state: Changing state from "Text" to "Body" (input line 118).

StateMachine.run: line (source='index.txt', offset=118):
| 

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "blank" in state "Body".

StateMachine.run: line (source='index.txt', offset=119):
| Docutils-general:

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "Body".

StateMachine.get_state: Changing state from "Body" to "Text" (input line 120).

StateMachine.run: line (source='index.txt', offset=120):
| 

StateMachine.check_line: state="Text", transitions=['blank', 'indent', 'underline', 'text'].

StateMachine.check_line: Matched transition "blank" in state "Text".

StateMachine.get_state: Changing state from "Text" to "Body" (input line 121).

StateMachine.run: line (source='index.txt', offset=121):
| * `The Docutils Document Tree <ref/doctree.html>`__ (incomplete)

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "bullet" in state "Body".

StateMachine.run: input_lines (line_offset=-1):
| `The Docutils Document Tree <ref/doctree.html>`__ (incomplete)

StateMachine.run: bof transition

StateMachine.run: line (source='index.txt', offset=121):
| `The Docutils Document Tree <ref/doctree.html>`__ (incomplete)

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "Body".

StateMachine.get_state: Changing state from "Body" to "Text" (input line 122).

StateMachine.run: Text.eof transition

StateMachine.run: input_lines (line_offset=-1):
| * `Docutils Transforms <ref/transforms.html>`__
| * `Docutils Generic DTD <ref/docutils.dtd>`__
| * `OASIS XML Exchange Table Model Declaration Module
|   <ref/soextblx.dtd>`__ (CALS tables DTD module)
| 
| Although not in the "ref" directory, `PEP 258`_ is a must-read
| reference for any Docutils developer.
| 
| reStructuredText_:
| 
| * `An Introduction to reStructuredText <ref/rst/introduction.html>`__
|   (includes the `Goals <ref/rst/introduction.html#goals>`__ and
|   `History <ref/rst/introduction.html#history>`__ of reStructuredText)
| * `reStructuredText Markup Specification <ref/rst/restructuredtext.html>`__
| * `reStructuredText Directives <ref/rst/directives.html>`__
| * `reStructuredText Interpreted Text Roles <ref/rst/roles.html>`__
| * `reStructuredText Standard Definition Files
|   <ref/rst/definitions.html>`_
| 
| Prehistoric:
| 
| * `Setext Documents Mirror
|   <http://docutils.sourceforge.net/mirror/setext.html>`__
| 
| 
| .. _peps:
| 
| ``peps/``: Python Enhancement Proposals
| =======================================
| 
| * `PEP 256: Docstring Processing System Framework`__ is a high-level
|   generic proposal.  [`PEP 256`__ in the `master repository`_]
| * `PEP 257: Docstring Conventions`__ addresses docstring style and
|   touches on content.  [`PEP 257`__ in the `master repository`_]
| * `PEP 258: Docutils Design Specification`__ is an overview of the
|   architecture of Docutils.  It documents design issues and
|   implementation details.  [`PEP 258`__ in the `master repository`_]
| * `PEP 287: reStructuredText Docstring Format`__ proposes a standard
|   markup syntax.  [`PEP 287`__ in the `master repository`_]
| 
| Please note that PEPs in the `master repository`_ may not be current,
| whereas the local versions are.
| 
| __ peps/pep-0256.html
| __ http://www.python.org/peps/pep-0256.html
| __ peps/pep-0257.html
| __ http://www.python.org/peps/pep-0257.html
| .. _PEP 258:
| __ peps/pep-0258.html
| __ http://www.python.org/peps/pep-0258.html
| __ peps/pep-0287.html
| __ http://www.python.org/peps/pep-0287.html
| .. _master repository: http://www.python.org/peps/
| 
| 
| .. _api:
| 
| ``api/``: API Reference Material for Client-Developers
| ======================================================
| 
| * `The Docutils Publisher <api/publisher.html>`__
| * `Inside A Docutils Command-Line Front-End Tool <api/cmdline-tool.html>`__
| * `Docutils Runtime Settings <api/runtime-settings.html>`__
| * (`Docutils Transforms <ref/transforms.html>`__ should be moved here)
| 
| `PEP 258`_ is an overview of the architecture of Docutils.
| 
| 
| .. _howto:
| 
| ``howto/``: Instructions for Developers
| =======================================
| 
| * **Security:** `Deploying Docutils Securely <howto/security.html>`__
| * `Writing HTML (CSS) Stylesheets for Docutils
|   <howto/html-stylesheets.html>`__
| * `Docutils Internationalization <howto/i18n.html>`__
| * `Creating reStructuredText Directives <howto/rst-directives.html>`__
| * `Creating reStructuredText Interpreted Text Roles
|   <howto/rst-roles.html>`__
| 
| 
| .. _dev:
| 
| ``dev/``: Development Notes and Plans for Core-Developers
| =========================================================
| 
| Docutils-general:
| 
| * `Docutils Hacker's Guide <dev/hacking.html>`__
| * `Docutils Distributor's Guide <dev/distributing.html>`__
| * `Docutils To Do List <dev/todo.html>`__
| * `Docutils Project Policies <dev/policies.html>`__
| * `Docutils Web Site <dev/website.html>`__
| * `Docutils Release Procedure <dev/release.html>`__
| * `The Docutils Subversion Repository <dev/repository.html>`__
| * `Docutils Testing <dev/testing.html>`__
| * `Docstring Semantics <dev/semantics.html>`__ (incomplete)
| * `Python Source Reader <dev/pysource.html>`_ (incomplete)
| * `Docutils Python DTD <dev/pysource.dtd>`_ (experimental)
| * `Plan for Enthought API Documentation Tool <dev/enthought-plan.html>`_
| * `Enthought API Documentation Tool RFP <dev/enthought-rfp.html>`_
| 
| reStructuredText_:
| 
| * `A Record of reStructuredText Syntax Alternatives
|   <dev/rst/alternatives.html>`__
| * `Problems With StructuredText <dev/rst/problems.html>`__
| 
| 
| ..
|    Local Variables:
|    mode: indented-text
|    indent-tabs-mode: nil
|    sentence-end-double-space: t
|    fill-column: 70
|    End:

StateMachine.run: bof transition

StateMachine.run: line (source='index.txt', offset=122):
| * `Docutils Transforms <ref/transforms.html>`__

StateMachine.check_line: state="BulletList", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "bullet" in state "BulletList".

StateMachine.run: input_lines (line_offset=-1):
| `Docutils Transforms <ref/transforms.html>`__

StateMachine.run: bof transition

StateMachine.run: line (source='index.txt', offset=122):
| `Docutils Transforms <ref/transforms.html>`__

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "Body".

StateMachine.get_state: Changing state from "Body" to "Text" (input line 123).

StateMachine.run: Text.eof transition

StateMachine.run: line (source='index.txt', offset=123):
| * `Docutils Generic DTD <ref/docutils.dtd>`__

StateMachine.check_line: state="BulletList", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "bullet" in state "BulletList".

StateMachine.run: input_lines (line_offset=-1):
| `Docutils Generic DTD <ref/docutils.dtd>`__

StateMachine.run: bof transition

StateMachine.run: line (source='index.txt', offset=123):
| `Docutils Generic DTD <ref/docutils.dtd>`__

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "Body".

StateMachine.get_state: Changing state from "Body" to "Text" (input line 124).

StateMachine.run: Text.eof transition

StateMachine.run: line (source='index.txt', offset=124):
| * `OASIS XML Exchange Table Model Declaration Module

StateMachine.check_line: state="BulletList", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "bullet" in state "BulletList".

StateMachine.run: input_lines (line_offset=-1):
| `OASIS XML Exchange Table Model Declaration Module
| <ref/soextblx.dtd>`__ (CALS tables DTD module)
| 

StateMachine.run: bof transition

StateMachine.run: line (source='index.txt', offset=124):
| `OASIS XML Exchange Table Model Declaration Module

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "Body".

StateMachine.get_state: Changing state from "Body" to "Text" (input line 125).

StateMachine.run: line (source='index.txt', offset=125):
| <ref/soextblx.dtd>`__ (CALS tables DTD module)

StateMachine.check_line: state="Text", transitions=['blank', 'indent', 'underline', 'text'].

StateMachine.check_line: Matched transition "text" in state "Text".

StateMachine.get_state: Changing state from "Text" to "Body" (input line 126).

StateMachine.run: line (source='index.txt', offset=126):
| 

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "blank" in state "Body".

StateMachine.run: Body.eof transition

StateMachine.run: line (source='index.txt', offset=127):
| Although not in the "ref" directory, `PEP 258`_ is a must-read

StateMachine.check_line: state="BulletList", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "BulletList".

StateMachine.run: BulletList.eof transition

StateMachine.run: line (source='index.txt', offset=127):
| Although not in the "ref" directory, `PEP 258`_ is a must-read

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "Body".

StateMachine.get_state: Changing state from "Body" to "Text" (input line 128).

StateMachine.run: line (source='index.txt', offset=128):
| reference for any Docutils developer.

StateMachine.check_line: state="Text", transitions=['blank', 'indent', 'underline', 'text'].

StateMachine.check_line: Matched transition "text" in state "Text".

StateMachine.get_state: Changing state from "Text" to "Body" (input line 129).

StateMachine.run: line (source='index.txt', offset=129):
| 

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "blank" in state "Body".

StateMachine.run: line (source='index.txt', offset=130):
| reStructuredText_:

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "Body".

StateMachine.get_state: Changing state from "Body" to "Text" (input line 131).

StateMachine.run: line (source='index.txt', offset=131):
| 

StateMachine.check_line: state="Text", transitions=['blank', 'indent', 'underline', 'text'].

StateMachine.check_line: Matched transition "blank" in state "Text".

StateMachine.get_state: Changing state from "Text" to "Body" (input line 132).

StateMachine.run: line (source='index.txt', offset=132):
| * `An Introduction to reStructuredText <ref/rst/introduction.html>`__

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "bullet" in state "Body".

StateMachine.run: input_lines (line_offset=-1):
| `An Introduction to reStructuredText <ref/rst/introduction.html>`__
| (includes the `Goals <ref/rst/introduction.html#goals>`__ and
| `History <ref/rst/introduction.html#history>`__ of reStructuredText)

StateMachine.run: bof transition

StateMachine.run: line (source='index.txt', offset=132):
| `An Introduction to reStructuredText <ref/rst/introduction.html>`__

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "Body".

StateMachine.get_state: Changing state from "Body" to "Text" (input line 133).

StateMachine.run: line (source='index.txt', offset=133):
| (includes the `Goals <ref/rst/introduction.html#goals>`__ and

StateMachine.check_line: state="Text", transitions=['blank', 'indent', 'underline', 'text'].

StateMachine.check_line: Matched transition "text" in state "Text".

StateMachine.get_state: Changing state from "Text" to "Body" (input line 135).

StateMachine.run: Body.eof transition

StateMachine.run: input_lines (line_offset=-1):
| * `reStructuredText Markup Specification <ref/rst/restructuredtext.html>`__
| * `reStructuredText Directives <ref/rst/directives.html>`__
| * `reStructuredText Interpreted Text Roles <ref/rst/roles.html>`__
| * `reStructuredText Standard Definition Files
|   <ref/rst/definitions.html>`_
| 
| Prehistoric:
| 
| * `Setext Documents Mirror
|   <http://docutils.sourceforge.net/mirror/setext.html>`__
| 
| 
| .. _peps:
| 
| ``peps/``: Python Enhancement Proposals
| =======================================
| 
| * `PEP 256: Docstring Processing System Framework`__ is a high-level
|   generic proposal.  [`PEP 256`__ in the `master repository`_]
| * `PEP 257: Docstring Conventions`__ addresses docstring style and
|   touches on content.  [`PEP 257`__ in the `master repository`_]
| * `PEP 258: Docutils Design Specification`__ is an overview of the
|   architecture of Docutils.  It documents design issues and
|   implementation details.  [`PEP 258`__ in the `master repository`_]
| * `PEP 287: reStructuredText Docstring Format`__ proposes a standard
|   markup syntax.  [`PEP 287`__ in the `master repository`_]
| 
| Please note that PEPs in the `master repository`_ may not be current,
| whereas the local versions are.
| 
| __ peps/pep-0256.html
| __ http://www.python.org/peps/pep-0256.html
| __ peps/pep-0257.html
| __ http://www.python.org/peps/pep-0257.html
| .. _PEP 258:
| __ peps/pep-0258.html
| __ http://www.python.org/peps/pep-0258.html
| __ peps/pep-0287.html
| __ http://www.python.org/peps/pep-0287.html
| .. _master repository: http://www.python.org/peps/
| 
| 
| .. _api:
| 
| ``api/``: API Reference Material for Client-Developers
| ======================================================
| 
| * `The Docutils Publisher <api/publisher.html>`__
| * `Inside A Docutils Command-Line Front-End Tool <api/cmdline-tool.html>`__
| * `Docutils Runtime Settings <api/runtime-settings.html>`__
| * (`Docutils Transforms <ref/transforms.html>`__ should be moved here)
| 
| `PEP 258`_ is an overview of the architecture of Docutils.
| 
| 
| .. _howto:
| 
| ``howto/``: Instructions for Developers
| =======================================
| 
| * **Security:** `Deploying Docutils Securely <howto/security.html>`__
| * `Writing HTML (CSS) Stylesheets for Docutils
|   <howto/html-stylesheets.html>`__
| * `Docutils Internationalization <howto/i18n.html>`__
| * `Creating reStructuredText Directives <howto/rst-directives.html>`__
| * `Creating reStructuredText Interpreted Text Roles
|   <howto/rst-roles.html>`__
| 
| 
| .. _dev:
| 
| ``dev/``: Development Notes and Plans for Core-Developers
| =========================================================
| 
| Docutils-general:
| 
| * `Docutils Hacker's Guide <dev/hacking.html>`__
| * `Docutils Distributor's Guide <dev/distributing.html>`__
| * `Docutils To Do List <dev/todo.html>`__
| * `Docutils Project Policies <dev/policies.html>`__
| * `Docutils Web Site <dev/website.html>`__
| * `Docutils Release Procedure <dev/release.html>`__
| * `The Docutils Subversion Repository <dev/repository.html>`__
| * `Docutils Testing <dev/testing.html>`__
| * `Docstring Semantics <dev/semantics.html>`__ (incomplete)
| * `Python Source Reader <dev/pysource.html>`_ (incomplete)
| * `Docutils Python DTD <dev/pysource.dtd>`_ (experimental)
| * `Plan for Enthought API Documentation Tool <dev/enthought-plan.html>`_
| * `Enthought API Documentation Tool RFP <dev/enthought-rfp.html>`_
| 
| reStructuredText_:
| 
| * `A Record of reStructuredText Syntax Alternatives
|   <dev/rst/alternatives.html>`__
| * `Problems With StructuredText <dev/rst/problems.html>`__
| 
| 
| ..
|    Local Variables:
|    mode: indented-text
|    indent-tabs-mode: nil
|    sentence-end-double-space: t
|    fill-column: 70
|    End:

StateMachine.run: bof transition

StateMachine.run: line (source='index.txt', offset=135):
| * `reStructuredText Markup Specification <ref/rst/restructuredtext.html>`__

StateMachine.check_line: state="BulletList", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "bullet" in state "BulletList".

StateMachine.run: input_lines (line_offset=-1):
| `reStructuredText Markup Specification <ref/rst/restructuredtext.html>`__

StateMachine.run: bof transition

StateMachine.run: line (source='index.txt', offset=135):
| `reStructuredText Markup Specification <ref/rst/restructuredtext.html>`__

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "Body".

StateMachine.get_state: Changing state from "Body" to "Text" (input line 136).

StateMachine.run: Text.eof transition

StateMachine.run: line (source='index.txt', offset=136):
| * `reStructuredText Directives <ref/rst/directives.html>`__

StateMachine.check_line: state="BulletList", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "bullet" in state "BulletList".

StateMachine.run: input_lines (line_offset=-1):
| `reStructuredText Directives <ref/rst/directives.html>`__

StateMachine.run: bof transition

StateMachine.run: line (source='index.txt', offset=136):
| `reStructuredText Directives <ref/rst/directives.html>`__

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "Body".

StateMachine.get_state: Changing state from "Body" to "Text" (input line 137).

StateMachine.run: Text.eof transition

StateMachine.run: line (source='index.txt', offset=137):
| * `reStructuredText Interpreted Text Roles <ref/rst/roles.html>`__

StateMachine.check_line: state="BulletList", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "bullet" in state "BulletList".

StateMachine.run: input_lines (line_offset=-1):
| `reStructuredText Interpreted Text Roles <ref/rst/roles.html>`__

StateMachine.run: bof transition

StateMachine.run: line (source='index.txt', offset=137):
| `reStructuredText Interpreted Text Roles <ref/rst/roles.html>`__

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "Body".

StateMachine.get_state: Changing state from "Body" to "Text" (input line 138).

StateMachine.run: Text.eof transition

StateMachine.run: line (source='index.txt', offset=138):
| * `reStructuredText Standard Definition Files

StateMachine.check_line: state="BulletList", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "bullet" in state "BulletList".

StateMachine.run: input_lines (line_offset=-1):
| `reStructuredText Standard Definition Files
| <ref/rst/definitions.html>`_
| 

StateMachine.run: bof transition

StateMachine.run: line (source='index.txt', offset=138):
| `reStructuredText Standard Definition Files

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "Body".

StateMachine.get_state: Changing state from "Body" to "Text" (input line 139).

StateMachine.run: line (source='index.txt', offset=139):
| <ref/rst/definitions.html>`_

StateMachine.check_line: state="Text", transitions=['blank', 'indent', 'underline', 'text'].

StateMachine.check_line: Matched transition "text" in state "Text".

StateMachine.get_state: Changing state from "Text" to "Body" (input line 140).

StateMachine.run: line (source='index.txt', offset=140):
| 

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "blank" in state "Body".

StateMachine.run: Body.eof transition

StateMachine.run: line (source='index.txt', offset=141):
| Prehistoric:

StateMachine.check_line: state="BulletList", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "BulletList".

StateMachine.run: BulletList.eof transition

StateMachine.run: line (source='index.txt', offset=141):
| Prehistoric:

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "Body".

StateMachine.get_state: Changing state from "Body" to "Text" (input line 142).

StateMachine.run: line (source='index.txt', offset=142):
| 

StateMachine.check_line: state="Text", transitions=['blank', 'indent', 'underline', 'text'].

StateMachine.check_line: Matched transition "blank" in state "Text".

StateMachine.get_state: Changing state from "Text" to "Body" (input line 143).

StateMachine.run: line (source='index.txt', offset=143):
| * `Setext Documents Mirror

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "bullet" in state "Body".

StateMachine.run: input_lines (line_offset=-1):
| `Setext Documents Mirror
| <http://docutils.sourceforge.net/mirror/setext.html>`__
| 
| 

StateMachine.run: bof transition

StateMachine.run: line (source='index.txt', offset=143):
| `Setext Documents Mirror

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "Body".

StateMachine.get_state: Changing state from "Body" to "Text" (input line 144).

StateMachine.run: line (source='index.txt', offset=144):
| <http://docutils.sourceforge.net/mirror/setext.html>`__

StateMachine.check_line: state="Text", transitions=['blank', 'indent', 'underline', 'text'].

StateMachine.check_line: Matched transition "text" in state "Text".

StateMachine.get_state: Changing state from "Text" to "Body" (input line 145).

StateMachine.run: line (source='index.txt', offset=145):
| 

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "blank" in state "Body".

StateMachine.run: line (source='index.txt', offset=146):
| 

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "blank" in state "Body".

StateMachine.run: Body.eof transition

StateMachine.run: input_lines (line_offset=-1):
| .. _peps:
| 
| ``peps/``: Python Enhancement Proposals
| =======================================
| 
| * `PEP 256: Docstring Processing System Framework`__ is a high-level
|   generic proposal.  [`PEP 256`__ in the `master repository`_]
| * `PEP 257: Docstring Conventions`__ addresses docstring style and
|   touches on content.  [`PEP 257`__ in the `master repository`_]
| * `PEP 258: Docutils Design Specification`__ is an overview of the
|   architecture of Docutils.  It documents design issues and
|   implementation details.  [`PEP 258`__ in the `master repository`_]
| * `PEP 287: reStructuredText Docstring Format`__ proposes a standard
|   markup syntax.  [`PEP 287`__ in the `master repository`_]
| 
| Please note that PEPs in the `master repository`_ may not be current,
| whereas the local versions are.
| 
| __ peps/pep-0256.html
| __ http://www.python.org/peps/pep-0256.html
| __ peps/pep-0257.html
| __ http://www.python.org/peps/pep-0257.html
| .. _PEP 258:
| __ peps/pep-0258.html
| __ http://www.python.org/peps/pep-0258.html
| __ peps/pep-0287.html
| __ http://www.python.org/peps/pep-0287.html
| .. _master repository: http://www.python.org/peps/
| 
| 
| .. _api:
| 
| ``api/``: API Reference Material for Client-Developers
| ======================================================
| 
| * `The Docutils Publisher <api/publisher.html>`__
| * `Inside A Docutils Command-Line Front-End Tool <api/cmdline-tool.html>`__
| * `Docutils Runtime Settings <api/runtime-settings.html>`__
| * (`Docutils Transforms <ref/transforms.html>`__ should be moved here)
| 
| `PEP 258`_ is an overview of the architecture of Docutils.
| 
| 
| .. _howto:
| 
| ``howto/``: Instructions for Developers
| =======================================
| 
| * **Security:** `Deploying Docutils Securely <howto/security.html>`__
| * `Writing HTML (CSS) Stylesheets for Docutils
|   <howto/html-stylesheets.html>`__
| * `Docutils Internationalization <howto/i18n.html>`__
| * `Creating reStructuredText Directives <howto/rst-directives.html>`__
| * `Creating reStructuredText Interpreted Text Roles
|   <howto/rst-roles.html>`__
| 
| 
| .. _dev:
| 
| ``dev/``: Development Notes and Plans for Core-Developers
| =========================================================
| 
| Docutils-general:
| 
| * `Docutils Hacker's Guide <dev/hacking.html>`__
| * `Docutils Distributor's Guide <dev/distributing.html>`__
| * `Docutils To Do List <dev/todo.html>`__
| * `Docutils Project Policies <dev/policies.html>`__
| * `Docutils Web Site <dev/website.html>`__
| * `Docutils Release Procedure <dev/release.html>`__
| * `The Docutils Subversion Repository <dev/repository.html>`__
| * `Docutils Testing <dev/testing.html>`__
| * `Docstring Semantics <dev/semantics.html>`__ (incomplete)
| * `Python Source Reader <dev/pysource.html>`_ (incomplete)
| * `Docutils Python DTD <dev/pysource.dtd>`_ (experimental)
| * `Plan for Enthought API Documentation Tool <dev/enthought-plan.html>`_
| * `Enthought API Documentation Tool RFP <dev/enthought-rfp.html>`_
| 
| reStructuredText_:
| 
| * `A Record of reStructuredText Syntax Alternatives
|   <dev/rst/alternatives.html>`__
| * `Problems With StructuredText <dev/rst/problems.html>`__
| 
| 
| ..
|    Local Variables:
|    mode: indented-text
|    indent-tabs-mode: nil
|    sentence-end-double-space: t
|    fill-column: 70
|    End:

StateMachine.run: bof transition

StateMachine.run: line (source='index.txt', offset=147):
| .. _peps:

StateMachine.check_line: state="BulletList", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "explicit_markup" in state "BulletList".

StateMachine.run: BulletList.eof transition

StateMachine.run: line (source='index.txt', offset=147):
| .. _peps:

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "explicit_markup" in state "Body".

StateMachine.run: input_lines (line_offset=-1):
| 
| ``peps/``: Python Enhancement Proposals
| =======================================
| 
| * `PEP 256: Docstring Processing System Framework`__ is a high-level
|   generic proposal.  [`PEP 256`__ in the `master repository`_]
| * `PEP 257: Docstring Conventions`__ addresses docstring style and
|   touches on content.  [`PEP 257`__ in the `master repository`_]
| * `PEP 258: Docutils Design Specification`__ is an overview of the
|   architecture of Docutils.  It documents design issues and
|   implementation details.  [`PEP 258`__ in the `master repository`_]
| * `PEP 287: reStructuredText Docstring Format`__ proposes a standard
|   markup syntax.  [`PEP 287`__ in the `master repository`_]
| 
| Please note that PEPs in the `master repository`_ may not be current,
| whereas the local versions are.
| 
| __ peps/pep-0256.html
| __ http://www.python.org/peps/pep-0256.html
| __ peps/pep-0257.html
| __ http://www.python.org/peps/pep-0257.html
| .. _PEP 258:
| __ peps/pep-0258.html
| __ http://www.python.org/peps/pep-0258.html
| __ peps/pep-0287.html
| __ http://www.python.org/peps/pep-0287.html
| .. _master repository: http://www.python.org/peps/
| 
| 
| .. _api:
| 
| ``api/``: API Reference Material for Client-Developers
| ======================================================
| 
| * `The Docutils Publisher <api/publisher.html>`__
| * `Inside A Docutils Command-Line Front-End Tool <api/cmdline-tool.html>`__
| * `Docutils Runtime Settings <api/runtime-settings.html>`__
| * (`Docutils Transforms <ref/transforms.html>`__ should be moved here)
| 
| `PEP 258`_ is an overview of the architecture of Docutils.
| 
| 
| .. _howto:
| 
| ``howto/``: Instructions for Developers
| =======================================
| 
| * **Security:** `Deploying Docutils Securely <howto/security.html>`__
| * `Writing HTML (CSS) Stylesheets for Docutils
|   <howto/html-stylesheets.html>`__
| * `Docutils Internationalization <howto/i18n.html>`__
| * `Creating reStructuredText Directives <howto/rst-directives.html>`__
| * `Creating reStructuredText Interpreted Text Roles
|   <howto/rst-roles.html>`__
| 
| 
| .. _dev:
| 
| ``dev/``: Development Notes and Plans for Core-Developers
| =========================================================
| 
| Docutils-general:
| 
| * `Docutils Hacker's Guide <dev/hacking.html>`__
| * `Docutils Distributor's Guide <dev/distributing.html>`__
| * `Docutils To Do List <dev/todo.html>`__
| * `Docutils Project Policies <dev/policies.html>`__
| * `Docutils Web Site <dev/website.html>`__
| * `Docutils Release Procedure <dev/release.html>`__
| * `The Docutils Subversion Repository <dev/repository.html>`__
| * `Docutils Testing <dev/testing.html>`__
| * `Docstring Semantics <dev/semantics.html>`__ (incomplete)
| * `Python Source Reader <dev/pysource.html>`_ (incomplete)
| * `Docutils Python DTD <dev/pysource.dtd>`_ (experimental)
| * `Plan for Enthought API Documentation Tool <dev/enthought-plan.html>`_
| * `Enthought API Documentation Tool RFP <dev/enthought-rfp.html>`_
| 
| reStructuredText_:
| 
| * `A Record of reStructuredText Syntax Alternatives
|   <dev/rst/alternatives.html>`__
| * `Problems With StructuredText <dev/rst/problems.html>`__
| 
| 
| ..
|    Local Variables:
|    mode: indented-text
|    indent-tabs-mode: nil
|    sentence-end-double-space: t
|    fill-column: 70
|    End:

StateMachine.run: bof transition

StateMachine.run: line (source='index.txt', offset=148):
| 

StateMachine.check_line: state="Explicit", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "blank" in state "Explicit".

StateMachine.run: Explicit.eof transition

StateMachine.run: line (source='index.txt', offset=148):
| 

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "blank" in state "Body".

StateMachine.run: line (source='index.txt', offset=149):
| ``peps/``: Python Enhancement Proposals

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "Body".

StateMachine.get_state: Changing state from "Body" to "Text" (input line 150).

StateMachine.run: line (source='index.txt', offset=150):
| =======================================

StateMachine.check_line: state="Text", transitions=['blank', 'indent', 'underline', 'text'].

StateMachine.check_line: Matched transition "underline" in state "Text".

StateMachine.run: Text.eof transition

StateMachine.get_state: Changing state from "Text" to "Body" (input line 149).

StateMachine.run: line (source='index.txt', offset=149):
| ``peps/``: Python Enhancement Proposals

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "Body".

StateMachine.get_state: Changing state from "Body" to "Text" (input line 150).

StateMachine.run: line (source='index.txt', offset=150):
| =======================================

StateMachine.check_line: state="Text", transitions=['blank', 'indent', 'underline', 'text'].

StateMachine.check_line: Matched transition "underline" in state "Text".

StateMachine.run: input_lines (line_offset=-1):
| 
| * `PEP 256: Docstring Processing System Framework`__ is a high-level
|   generic proposal.  [`PEP 256`__ in the `master repository`_]
| * `PEP 257: Docstring Conventions`__ addresses docstring style and
|   touches on content.  [`PEP 257`__ in the `master repository`_]
| * `PEP 258: Docutils Design Specification`__ is an overview of the
|   architecture of Docutils.  It documents design issues and
|   implementation details.  [`PEP 258`__ in the `master repository`_]
| * `PEP 287: reStructuredText Docstring Format`__ proposes a standard
|   markup syntax.  [`PEP 287`__ in the `master repository`_]
| 
| Please note that PEPs in the `master repository`_ may not be current,
| whereas the local versions are.
| 
| __ peps/pep-0256.html
| __ http://www.python.org/peps/pep-0256.html
| __ peps/pep-0257.html
| __ http://www.python.org/peps/pep-0257.html
| .. _PEP 258:
| __ peps/pep-0258.html
| __ http://www.python.org/peps/pep-0258.html
| __ peps/pep-0287.html
| __ http://www.python.org/peps/pep-0287.html
| .. _master repository: http://www.python.org/peps/
| 
| 
| .. _api:
| 
| ``api/``: API Reference Material for Client-Developers
| ======================================================
| 
| * `The Docutils Publisher <api/publisher.html>`__
| * `Inside A Docutils Command-Line Front-End Tool <api/cmdline-tool.html>`__
| * `Docutils Runtime Settings <api/runtime-settings.html>`__
| * (`Docutils Transforms <ref/transforms.html>`__ should be moved here)
| 
| `PEP 258`_ is an overview of the architecture of Docutils.
| 
| 
| .. _howto:
| 
| ``howto/``: Instructions for Developers
| =======================================
| 
| * **Security:** `Deploying Docutils Securely <howto/security.html>`__
| * `Writing HTML (CSS) Stylesheets for Docutils
|   <howto/html-stylesheets.html>`__
| * `Docutils Internationalization <howto/i18n.html>`__
| * `Creating reStructuredText Directives <howto/rst-directives.html>`__
| * `Creating reStructuredText Interpreted Text Roles
|   <howto/rst-roles.html>`__
| 
| 
| .. _dev:
| 
| ``dev/``: Development Notes and Plans for Core-Developers
| =========================================================
| 
| Docutils-general:
| 
| * `Docutils Hacker's Guide <dev/hacking.html>`__
| * `Docutils Distributor's Guide <dev/distributing.html>`__
| * `Docutils To Do List <dev/todo.html>`__
| * `Docutils Project Policies <dev/policies.html>`__
| * `Docutils Web Site <dev/website.html>`__
| * `Docutils Release Procedure <dev/release.html>`__
| * `The Docutils Subversion Repository <dev/repository.html>`__
| * `Docutils Testing <dev/testing.html>`__
| * `Docstring Semantics <dev/semantics.html>`__ (incomplete)
| * `Python Source Reader <dev/pysource.html>`_ (incomplete)
| * `Docutils Python DTD <dev/pysource.dtd>`_ (experimental)
| * `Plan for Enthought API Documentation Tool <dev/enthought-plan.html>`_
| * `Enthought API Documentation Tool RFP <dev/enthought-rfp.html>`_
| 
| reStructuredText_:
| 
| * `A Record of reStructuredText Syntax Alternatives
|   <dev/rst/alternatives.html>`__
| * `Problems With StructuredText <dev/rst/problems.html>`__
| 
| 
| ..
|    Local Variables:
|    mode: indented-text
|    indent-tabs-mode: nil
|    sentence-end-double-space: t
|    fill-column: 70
|    End:

StateMachine.run: bof transition

StateMachine.run: line (source='index.txt', offset=151):
| 

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "blank" in state "Body".

StateMachine.run: line (source='index.txt', offset=152):
| * `PEP 256: Docstring Processing System Framework`__ is a high-level

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "bullet" in state "Body".

StateMachine.run: input_lines (line_offset=-1):
| `PEP 256: Docstring Processing System Framework`__ is a high-level
| generic proposal.  [`PEP 256`__ in the `master repository`_]

StateMachine.run: bof transition

StateMachine.run: line (source='index.txt', offset=152):
| `PEP 256: Docstring Processing System Framework`__ is a high-level

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "Body".

StateMachine.get_state: Changing state from "Body" to "Text" (input line 153).

StateMachine.run: line (source='index.txt', offset=153):
| generic proposal.  [`PEP 256`__ in the `master repository`_]

StateMachine.check_line: state="Text", transitions=['blank', 'indent', 'underline', 'text'].

StateMachine.check_line: Matched transition "text" in state "Text".

StateMachine.get_state: Changing state from "Text" to "Body" (input line 154).

StateMachine.run: Body.eof transition

StateMachine.run: input_lines (line_offset=-1):
| * `PEP 257: Docstring Conventions`__ addresses docstring style and
|   touches on content.  [`PEP 257`__ in the `master repository`_]
| * `PEP 258: Docutils Design Specification`__ is an overview of the
|   architecture of Docutils.  It documents design issues and
|   implementation details.  [`PEP 258`__ in the `master repository`_]
| * `PEP 287: reStructuredText Docstring Format`__ proposes a standard
|   markup syntax.  [`PEP 287`__ in the `master repository`_]
| 
| Please note that PEPs in the `master repository`_ may not be current,
| whereas the local versions are.
| 
| __ peps/pep-0256.html
| __ http://www.python.org/peps/pep-0256.html
| __ peps/pep-0257.html
| __ http://www.python.org/peps/pep-0257.html
| .. _PEP 258:
| __ peps/pep-0258.html
| __ http://www.python.org/peps/pep-0258.html
| __ peps/pep-0287.html
| __ http://www.python.org/peps/pep-0287.html
| .. _master repository: http://www.python.org/peps/
| 
| 
| .. _api:
| 
| ``api/``: API Reference Material for Client-Developers
| ======================================================
| 
| * `The Docutils Publisher <api/publisher.html>`__
| * `Inside A Docutils Command-Line Front-End Tool <api/cmdline-tool.html>`__
| * `Docutils Runtime Settings <api/runtime-settings.html>`__
| * (`Docutils Transforms <ref/transforms.html>`__ should be moved here)
| 
| `PEP 258`_ is an overview of the architecture of Docutils.
| 
| 
| .. _howto:
| 
| ``howto/``: Instructions for Developers
| =======================================
| 
| * **Security:** `Deploying Docutils Securely <howto/security.html>`__
| * `Writing HTML (CSS) Stylesheets for Docutils
|   <howto/html-stylesheets.html>`__
| * `Docutils Internationalization <howto/i18n.html>`__
| * `Creating reStructuredText Directives <howto/rst-directives.html>`__
| * `Creating reStructuredText Interpreted Text Roles
|   <howto/rst-roles.html>`__
| 
| 
| .. _dev:
| 
| ``dev/``: Development Notes and Plans for Core-Developers
| =========================================================
| 
| Docutils-general:
| 
| * `Docutils Hacker's Guide <dev/hacking.html>`__
| * `Docutils Distributor's Guide <dev/distributing.html>`__
| * `Docutils To Do List <dev/todo.html>`__
| * `Docutils Project Policies <dev/policies.html>`__
| * `Docutils Web Site <dev/website.html>`__
| * `Docutils Release Procedure <dev/release.html>`__
| * `The Docutils Subversion Repository <dev/repository.html>`__
| * `Docutils Testing <dev/testing.html>`__
| * `Docstring Semantics <dev/semantics.html>`__ (incomplete)
| * `Python Source Reader <dev/pysource.html>`_ (incomplete)
| * `Docutils Python DTD <dev/pysource.dtd>`_ (experimental)
| * `Plan for Enthought API Documentation Tool <dev/enthought-plan.html>`_
| * `Enthought API Documentation Tool RFP <dev/enthought-rfp.html>`_
| 
| reStructuredText_:
| 
| * `A Record of reStructuredText Syntax Alternatives
|   <dev/rst/alternatives.html>`__
| * `Problems With StructuredText <dev/rst/problems.html>`__
| 
| 
| ..
|    Local Variables:
|    mode: indented-text
|    indent-tabs-mode: nil
|    sentence-end-double-space: t
|    fill-column: 70
|    End:

StateMachine.run: bof transition

StateMachine.run: line (source='index.txt', offset=154):
| * `PEP 257: Docstring Conventions`__ addresses docstring style and

StateMachine.check_line: state="BulletList", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "bullet" in state "BulletList".

StateMachine.run: input_lines (line_offset=-1):
| `PEP 257: Docstring Conventions`__ addresses docstring style and
| touches on content.  [`PEP 257`__ in the `master repository`_]

StateMachine.run: bof transition

StateMachine.run: line (source='index.txt', offset=154):
| `PEP 257: Docstring Conventions`__ addresses docstring style and

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "Body".

StateMachine.get_state: Changing state from "Body" to "Text" (input line 155).

StateMachine.run: line (source='index.txt', offset=155):
| touches on content.  [`PEP 257`__ in the `master repository`_]

StateMachine.check_line: state="Text", transitions=['blank', 'indent', 'underline', 'text'].

StateMachine.check_line: Matched transition "text" in state "Text".

StateMachine.get_state: Changing state from "Text" to "Body" (input line 156).

StateMachine.run: Body.eof transition

StateMachine.run: line (source='index.txt', offset=156):
| * `PEP 258: Docutils Design Specification`__ is an overview of the

StateMachine.check_line: state="BulletList", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "bullet" in state "BulletList".

StateMachine.run: input_lines (line_offset=-1):
| `PEP 258: Docutils Design Specification`__ is an overview of the
| architecture of Docutils.  It documents design issues and
| implementation details.  [`PEP 258`__ in the `master repository`_]

StateMachine.run: bof transition

StateMachine.run: line (source='index.txt', offset=156):
| `PEP 258: Docutils Design Specification`__ is an overview of the

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "Body".

StateMachine.get_state: Changing state from "Body" to "Text" (input line 157).

StateMachine.run: line (source='index.txt', offset=157):
| architecture of Docutils.  It documents design issues and

StateMachine.check_line: state="Text", transitions=['blank', 'indent', 'underline', 'text'].

StateMachine.check_line: Matched transition "text" in state "Text".

StateMachine.get_state: Changing state from "Text" to "Body" (input line 159).

StateMachine.run: Body.eof transition

StateMachine.run: line (source='index.txt', offset=159):
| * `PEP 287: reStructuredText Docstring Format`__ proposes a standard

StateMachine.check_line: state="BulletList", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "bullet" in state "BulletList".

StateMachine.run: input_lines (line_offset=-1):
| `PEP 287: reStructuredText Docstring Format`__ proposes a standard
| markup syntax.  [`PEP 287`__ in the `master repository`_]
| 

StateMachine.run: bof transition

StateMachine.run: line (source='index.txt', offset=159):
| `PEP 287: reStructuredText Docstring Format`__ proposes a standard

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "Body".

StateMachine.get_state: Changing state from "Body" to "Text" (input line 160).

StateMachine.run: line (source='index.txt', offset=160):
| markup syntax.  [`PEP 287`__ in the `master repository`_]

StateMachine.check_line: state="Text", transitions=['blank', 'indent', 'underline', 'text'].

StateMachine.check_line: Matched transition "text" in state "Text".

StateMachine.get_state: Changing state from "Text" to "Body" (input line 161).

StateMachine.run: line (source='index.txt', offset=161):
| 

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "blank" in state "Body".

StateMachine.run: Body.eof transition

StateMachine.run: line (source='index.txt', offset=162):
| Please note that PEPs in the `master repository`_ may not be current,

StateMachine.check_line: state="BulletList", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "BulletList".

StateMachine.run: BulletList.eof transition

StateMachine.run: line (source='index.txt', offset=162):
| Please note that PEPs in the `master repository`_ may not be current,

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "Body".

StateMachine.get_state: Changing state from "Body" to "Text" (input line 163).

StateMachine.run: line (source='index.txt', offset=163):
| whereas the local versions are.

StateMachine.check_line: state="Text", transitions=['blank', 'indent', 'underline', 'text'].

StateMachine.check_line: Matched transition "text" in state "Text".

StateMachine.get_state: Changing state from "Text" to "Body" (input line 164).

StateMachine.run: line (source='index.txt', offset=164):
| 

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "blank" in state "Body".

StateMachine.run: line (source='index.txt', offset=165):
| __ peps/pep-0256.html

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "anonymous" in state "Body".

StateMachine.run: input_lines (line_offset=-1):
| __ http://www.python.org/peps/pep-0256.html
| __ peps/pep-0257.html
| __ http://www.python.org/peps/pep-0257.html
| .. _PEP 258:
| __ peps/pep-0258.html
| __ http://www.python.org/peps/pep-0258.html
| __ peps/pep-0287.html
| __ http://www.python.org/peps/pep-0287.html
| .. _master repository: http://www.python.org/peps/
| 
| 
| .. _api:
| 
| ``api/``: API Reference Material for Client-Developers
| ======================================================
| 
| * `The Docutils Publisher <api/publisher.html>`__
| * `Inside A Docutils Command-Line Front-End Tool <api/cmdline-tool.html>`__
| * `Docutils Runtime Settings <api/runtime-settings.html>`__
| * (`Docutils Transforms <ref/transforms.html>`__ should be moved here)
| 
| `PEP 258`_ is an overview of the architecture of Docutils.
| 
| 
| .. _howto:
| 
| ``howto/``: Instructions for Developers
| =======================================
| 
| * **Security:** `Deploying Docutils Securely <howto/security.html>`__
| * `Writing HTML (CSS) Stylesheets for Docutils
|   <howto/html-stylesheets.html>`__
| * `Docutils Internationalization <howto/i18n.html>`__
| * `Creating reStructuredText Directives <howto/rst-directives.html>`__
| * `Creating reStructuredText Interpreted Text Roles
|   <howto/rst-roles.html>`__
| 
| 
| .. _dev:
| 
| ``dev/``: Development Notes and Plans for Core-Developers
| =========================================================
| 
| Docutils-general:
| 
| * `Docutils Hacker's Guide <dev/hacking.html>`__
| * `Docutils Distributor's Guide <dev/distributing.html>`__
| * `Docutils To Do List <dev/todo.html>`__
| * `Docutils Project Policies <dev/policies.html>`__
| * `Docutils Web Site <dev/website.html>`__
| * `Docutils Release Procedure <dev/release.html>`__
| * `The Docutils Subversion Repository <dev/repository.html>`__
| * `Docutils Testing <dev/testing.html>`__
| * `Docstring Semantics <dev/semantics.html>`__ (incomplete)
| * `Python Source Reader <dev/pysource.html>`_ (incomplete)
| * `Docutils Python DTD <dev/pysource.dtd>`_ (experimental)
| * `Plan for Enthought API Documentation Tool <dev/enthought-plan.html>`_
| * `Enthought API Documentation Tool RFP <dev/enthought-rfp.html>`_
| 
| reStructuredText_:
| 
| * `A Record of reStructuredText Syntax Alternatives
|   <dev/rst/alternatives.html>`__
| * `Problems With StructuredText <dev/rst/problems.html>`__
| 
| 
| ..
|    Local Variables:
|    mode: indented-text
|    indent-tabs-mode: nil
|    sentence-end-double-space: t
|    fill-column: 70
|    End:

StateMachine.run: bof transition

StateMachine.run: line (source='index.txt', offset=166):
| __ http://www.python.org/peps/pep-0256.html

StateMachine.check_line: state="Explicit", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "anonymous" in state "Explicit".

StateMachine.run: line (source='index.txt', offset=167):
| __ peps/pep-0257.html

StateMachine.check_line: state="Explicit", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "anonymous" in state "Explicit".

StateMachine.run: line (source='index.txt', offset=168):
| __ http://www.python.org/peps/pep-0257.html

StateMachine.check_line: state="Explicit", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "anonymous" in state "Explicit".

StateMachine.run: line (source='index.txt', offset=169):
| .. _PEP 258:

StateMachine.check_line: state="Explicit", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "explicit_markup" in state "Explicit".

StateMachine.run: line (source='index.txt', offset=170):
| __ peps/pep-0258.html

StateMachine.check_line: state="Explicit", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "anonymous" in state "Explicit".

StateMachine.run: line (source='index.txt', offset=171):
| __ http://www.python.org/peps/pep-0258.html

StateMachine.check_line: state="Explicit", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "anonymous" in state "Explicit".

StateMachine.run: line (source='index.txt', offset=172):
| __ peps/pep-0287.html

StateMachine.check_line: state="Explicit", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "anonymous" in state "Explicit".

StateMachine.run: line (source='index.txt', offset=173):
| __ http://www.python.org/peps/pep-0287.html

StateMachine.check_line: state="Explicit", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "anonymous" in state "Explicit".

StateMachine.run: line (source='index.txt', offset=174):
| .. _master repository: http://www.python.org/peps/

StateMachine.check_line: state="Explicit", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "explicit_markup" in state "Explicit".

StateMachine.run: line (source='index.txt', offset=175):
| 

StateMachine.check_line: state="Explicit", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "blank" in state "Explicit".

StateMachine.run: Explicit.eof transition

StateMachine.run: line (source='index.txt', offset=175):
| 

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "blank" in state "Body".

StateMachine.run: line (source='index.txt', offset=176):
| 

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "blank" in state "Body".

StateMachine.run: line (source='index.txt', offset=177):
| .. _api:

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "explicit_markup" in state "Body".

StateMachine.run: input_lines (line_offset=-1):
| 
| ``api/``: API Reference Material for Client-Developers
| ======================================================
| 
| * `The Docutils Publisher <api/publisher.html>`__
| * `Inside A Docutils Command-Line Front-End Tool <api/cmdline-tool.html>`__
| * `Docutils Runtime Settings <api/runtime-settings.html>`__
| * (`Docutils Transforms <ref/transforms.html>`__ should be moved here)
| 
| `PEP 258`_ is an overview of the architecture of Docutils.
| 
| 
| .. _howto:
| 
| ``howto/``: Instructions for Developers
| =======================================
| 
| * **Security:** `Deploying Docutils Securely <howto/security.html>`__
| * `Writing HTML (CSS) Stylesheets for Docutils
|   <howto/html-stylesheets.html>`__
| * `Docutils Internationalization <howto/i18n.html>`__
| * `Creating reStructuredText Directives <howto/rst-directives.html>`__
| * `Creating reStructuredText Interpreted Text Roles
|   <howto/rst-roles.html>`__
| 
| 
| .. _dev:
| 
| ``dev/``: Development Notes and Plans for Core-Developers
| =========================================================
| 
| Docutils-general:
| 
| * `Docutils Hacker's Guide <dev/hacking.html>`__
| * `Docutils Distributor's Guide <dev/distributing.html>`__
| * `Docutils To Do List <dev/todo.html>`__
| * `Docutils Project Policies <dev/policies.html>`__
| * `Docutils Web Site <dev/website.html>`__
| * `Docutils Release Procedure <dev/release.html>`__
| * `The Docutils Subversion Repository <dev/repository.html>`__
| * `Docutils Testing <dev/testing.html>`__
| * `Docstring Semantics <dev/semantics.html>`__ (incomplete)
| * `Python Source Reader <dev/pysource.html>`_ (incomplete)
| * `Docutils Python DTD <dev/pysource.dtd>`_ (experimental)
| * `Plan for Enthought API Documentation Tool <dev/enthought-plan.html>`_
| * `Enthought API Documentation Tool RFP <dev/enthought-rfp.html>`_
| 
| reStructuredText_:
| 
| * `A Record of reStructuredText Syntax Alternatives
|   <dev/rst/alternatives.html>`__
| * `Problems With StructuredText <dev/rst/problems.html>`__
| 
| 
| ..
|    Local Variables:
|    mode: indented-text
|    indent-tabs-mode: nil
|    sentence-end-double-space: t
|    fill-column: 70
|    End:

StateMachine.run: bof transition

StateMachine.run: line (source='index.txt', offset=178):
| 

StateMachine.check_line: state="Explicit", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "blank" in state "Explicit".

StateMachine.run: Explicit.eof transition

StateMachine.run: line (source='index.txt', offset=178):
| 

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "blank" in state "Body".

StateMachine.run: line (source='index.txt', offset=179):
| ``api/``: API Reference Material for Client-Developers

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "Body".

StateMachine.get_state: Changing state from "Body" to "Text" (input line 180).

StateMachine.run: line (source='index.txt', offset=180):
| ======================================================

StateMachine.check_line: state="Text", transitions=['blank', 'indent', 'underline', 'text'].

StateMachine.check_line: Matched transition "underline" in state "Text".

StateMachine.run: Text.eof transition

StateMachine.get_state: Changing state from "Text" to "Body" (input line 179).

StateMachine.run: line (source='index.txt', offset=179):
| ``api/``: API Reference Material for Client-Developers

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "Body".

StateMachine.get_state: Changing state from "Body" to "Text" (input line 180).

StateMachine.run: line (source='index.txt', offset=180):
| ======================================================

StateMachine.check_line: state="Text", transitions=['blank', 'indent', 'underline', 'text'].

StateMachine.check_line: Matched transition "underline" in state "Text".

StateMachine.run: input_lines (line_offset=-1):
| 
| * `The Docutils Publisher <api/publisher.html>`__
| * `Inside A Docutils Command-Line Front-End Tool <api/cmdline-tool.html>`__
| * `Docutils Runtime Settings <api/runtime-settings.html>`__
| * (`Docutils Transforms <ref/transforms.html>`__ should be moved here)
| 
| `PEP 258`_ is an overview of the architecture of Docutils.
| 
| 
| .. _howto:
| 
| ``howto/``: Instructions for Developers
| =======================================
| 
| * **Security:** `Deploying Docutils Securely <howto/security.html>`__
| * `Writing HTML (CSS) Stylesheets for Docutils
|   <howto/html-stylesheets.html>`__
| * `Docutils Internationalization <howto/i18n.html>`__
| * `Creating reStructuredText Directives <howto/rst-directives.html>`__
| * `Creating reStructuredText Interpreted Text Roles
|   <howto/rst-roles.html>`__
| 
| 
| .. _dev:
| 
| ``dev/``: Development Notes and Plans for Core-Developers
| =========================================================
| 
| Docutils-general:
| 
| * `Docutils Hacker's Guide <dev/hacking.html>`__
| * `Docutils Distributor's Guide <dev/distributing.html>`__
| * `Docutils To Do List <dev/todo.html>`__
| * `Docutils Project Policies <dev/policies.html>`__
| * `Docutils Web Site <dev/website.html>`__
| * `Docutils Release Procedure <dev/release.html>`__
| * `The Docutils Subversion Repository <dev/repository.html>`__
| * `Docutils Testing <dev/testing.html>`__
| * `Docstring Semantics <dev/semantics.html>`__ (incomplete)
| * `Python Source Reader <dev/pysource.html>`_ (incomplete)
| * `Docutils Python DTD <dev/pysource.dtd>`_ (experimental)
| * `Plan for Enthought API Documentation Tool <dev/enthought-plan.html>`_
| * `Enthought API Documentation Tool RFP <dev/enthought-rfp.html>`_
| 
| reStructuredText_:
| 
| * `A Record of reStructuredText Syntax Alternatives
|   <dev/rst/alternatives.html>`__
| * `Problems With StructuredText <dev/rst/problems.html>`__
| 
| 
| ..
|    Local Variables:
|    mode: indented-text
|    indent-tabs-mode: nil
|    sentence-end-double-space: t
|    fill-column: 70
|    End:

StateMachine.run: bof transition

StateMachine.run: line (source='index.txt', offset=181):
| 

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "blank" in state "Body".

StateMachine.run: line (source='index.txt', offset=182):
| * `The Docutils Publisher <api/publisher.html>`__

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "bullet" in state "Body".

StateMachine.run: input_lines (line_offset=-1):
| `The Docutils Publisher <api/publisher.html>`__

StateMachine.run: bof transition

StateMachine.run: line (source='index.txt', offset=182):
| `The Docutils Publisher <api/publisher.html>`__

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "Body".

StateMachine.get_state: Changing state from "Body" to "Text" (input line 183).

StateMachine.run: Text.eof transition

StateMachine.run: input_lines (line_offset=-1):
| * `Inside A Docutils Command-Line Front-End Tool <api/cmdline-tool.html>`__
| * `Docutils Runtime Settings <api/runtime-settings.html>`__
| * (`Docutils Transforms <ref/transforms.html>`__ should be moved here)
| 
| `PEP 258`_ is an overview of the architecture of Docutils.
| 
| 
| .. _howto:
| 
| ``howto/``: Instructions for Developers
| =======================================
| 
| * **Security:** `Deploying Docutils Securely <howto/security.html>`__
| * `Writing HTML (CSS) Stylesheets for Docutils
|   <howto/html-stylesheets.html>`__
| * `Docutils Internationalization <howto/i18n.html>`__
| * `Creating reStructuredText Directives <howto/rst-directives.html>`__
| * `Creating reStructuredText Interpreted Text Roles
|   <howto/rst-roles.html>`__
| 
| 
| .. _dev:
| 
| ``dev/``: Development Notes and Plans for Core-Developers
| =========================================================
| 
| Docutils-general:
| 
| * `Docutils Hacker's Guide <dev/hacking.html>`__
| * `Docutils Distributor's Guide <dev/distributing.html>`__
| * `Docutils To Do List <dev/todo.html>`__
| * `Docutils Project Policies <dev/policies.html>`__
| * `Docutils Web Site <dev/website.html>`__
| * `Docutils Release Procedure <dev/release.html>`__
| * `The Docutils Subversion Repository <dev/repository.html>`__
| * `Docutils Testing <dev/testing.html>`__
| * `Docstring Semantics <dev/semantics.html>`__ (incomplete)
| * `Python Source Reader <dev/pysource.html>`_ (incomplete)
| * `Docutils Python DTD <dev/pysource.dtd>`_ (experimental)
| * `Plan for Enthought API Documentation Tool <dev/enthought-plan.html>`_
| * `Enthought API Documentation Tool RFP <dev/enthought-rfp.html>`_
| 
| reStructuredText_:
| 
| * `A Record of reStructuredText Syntax Alternatives
|   <dev/rst/alternatives.html>`__
| * `Problems With StructuredText <dev/rst/problems.html>`__
| 
| 
| ..
|    Local Variables:
|    mode: indented-text
|    indent-tabs-mode: nil
|    sentence-end-double-space: t
|    fill-column: 70
|    End:

StateMachine.run: bof transition

StateMachine.run: line (source='index.txt', offset=183):
| * `Inside A Docutils Command-Line Front-End Tool <api/cmdline-tool.html>`__

StateMachine.check_line: state="BulletList", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "bullet" in state "BulletList".

StateMachine.run: input_lines (line_offset=-1):
| `Inside A Docutils Command-Line Front-End Tool <api/cmdline-tool.html>`__

StateMachine.run: bof transition

StateMachine.run: line (source='index.txt', offset=183):
| `Inside A Docutils Command-Line Front-End Tool <api/cmdline-tool.html>`__

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "Body".

StateMachine.get_state: Changing state from "Body" to "Text" (input line 184).

StateMachine.run: Text.eof transition

StateMachine.run: line (source='index.txt', offset=184):
| * `Docutils Runtime Settings <api/runtime-settings.html>`__

StateMachine.check_line: state="BulletList", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "bullet" in state "BulletList".

StateMachine.run: input_lines (line_offset=-1):
| `Docutils Runtime Settings <api/runtime-settings.html>`__

StateMachine.run: bof transition

StateMachine.run: line (source='index.txt', offset=184):
| `Docutils Runtime Settings <api/runtime-settings.html>`__

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "Body".

StateMachine.get_state: Changing state from "Body" to "Text" (input line 185).

StateMachine.run: Text.eof transition

StateMachine.run: line (source='index.txt', offset=185):
| * (`Docutils Transforms <ref/transforms.html>`__ should be moved here)

StateMachine.check_line: state="BulletList", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "bullet" in state "BulletList".

StateMachine.run: input_lines (line_offset=-1):
| (`Docutils Transforms <ref/transforms.html>`__ should be moved here)
| 

StateMachine.run: bof transition

StateMachine.run: line (source='index.txt', offset=185):
| (`Docutils Transforms <ref/transforms.html>`__ should be moved here)

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "Body".

StateMachine.get_state: Changing state from "Body" to "Text" (input line 186).

StateMachine.run: line (source='index.txt', offset=186):
| 

StateMachine.check_line: state="Text", transitions=['blank', 'indent', 'underline', 'text'].

StateMachine.check_line: Matched transition "blank" in state "Text".

StateMachine.get_state: Changing state from "Text" to "Body" (input line 187).

StateMachine.run: Body.eof transition

StateMachine.run: line (source='index.txt', offset=187):
| `PEP 258`_ is an overview of the architecture of Docutils.

StateMachine.check_line: state="BulletList", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "BulletList".

StateMachine.run: BulletList.eof transition

StateMachine.run: line (source='index.txt', offset=187):
| `PEP 258`_ is an overview of the architecture of Docutils.

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "Body".

StateMachine.get_state: Changing state from "Body" to "Text" (input line 188).

StateMachine.run: line (source='index.txt', offset=188):
| 

StateMachine.check_line: state="Text", transitions=['blank', 'indent', 'underline', 'text'].

StateMachine.check_line: Matched transition "blank" in state "Text".

StateMachine.get_state: Changing state from "Text" to "Body" (input line 189).

StateMachine.run: line (source='index.txt', offset=189):
| 

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "blank" in state "Body".

StateMachine.run: line (source='index.txt', offset=190):
| .. _howto:

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "explicit_markup" in state "Body".

StateMachine.run: input_lines (line_offset=-1):
| 
| ``howto/``: Instructions for Developers
| =======================================
| 
| * **Security:** `Deploying Docutils Securely <howto/security.html>`__
| * `Writing HTML (CSS) Stylesheets for Docutils
|   <howto/html-stylesheets.html>`__
| * `Docutils Internationalization <howto/i18n.html>`__
| * `Creating reStructuredText Directives <howto/rst-directives.html>`__
| * `Creating reStructuredText Interpreted Text Roles
|   <howto/rst-roles.html>`__
| 
| 
| .. _dev:
| 
| ``dev/``: Development Notes and Plans for Core-Developers
| =========================================================
| 
| Docutils-general:
| 
| * `Docutils Hacker's Guide <dev/hacking.html>`__
| * `Docutils Distributor's Guide <dev/distributing.html>`__
| * `Docutils To Do List <dev/todo.html>`__
| * `Docutils Project Policies <dev/policies.html>`__
| * `Docutils Web Site <dev/website.html>`__
| * `Docutils Release Procedure <dev/release.html>`__
| * `The Docutils Subversion Repository <dev/repository.html>`__
| * `Docutils Testing <dev/testing.html>`__
| * `Docstring Semantics <dev/semantics.html>`__ (incomplete)
| * `Python Source Reader <dev/pysource.html>`_ (incomplete)
| * `Docutils Python DTD <dev/pysource.dtd>`_ (experimental)
| * `Plan for Enthought API Documentation Tool <dev/enthought-plan.html>`_
| * `Enthought API Documentation Tool RFP <dev/enthought-rfp.html>`_
| 
| reStructuredText_:
| 
| * `A Record of reStructuredText Syntax Alternatives
|   <dev/rst/alternatives.html>`__
| * `Problems With StructuredText <dev/rst/problems.html>`__
| 
| 
| ..
|    Local Variables:
|    mode: indented-text
|    indent-tabs-mode: nil
|    sentence-end-double-space: t
|    fill-column: 70
|    End:

StateMachine.run: bof transition

StateMachine.run: line (source='index.txt', offset=191):
| 

StateMachine.check_line: state="Explicit", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "blank" in state "Explicit".

StateMachine.run: Explicit.eof transition

StateMachine.run: line (source='index.txt', offset=191):
| 

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "blank" in state "Body".

StateMachine.run: line (source='index.txt', offset=192):
| ``howto/``: Instructions for Developers

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "Body".

StateMachine.get_state: Changing state from "Body" to "Text" (input line 193).

StateMachine.run: line (source='index.txt', offset=193):
| =======================================

StateMachine.check_line: state="Text", transitions=['blank', 'indent', 'underline', 'text'].

StateMachine.check_line: Matched transition "underline" in state "Text".

StateMachine.run: Text.eof transition

StateMachine.get_state: Changing state from "Text" to "Body" (input line 192).

StateMachine.run: line (source='index.txt', offset=192):
| ``howto/``: Instructions for Developers

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "Body".

StateMachine.get_state: Changing state from "Body" to "Text" (input line 193).

StateMachine.run: line (source='index.txt', offset=193):
| =======================================

StateMachine.check_line: state="Text", transitions=['blank', 'indent', 'underline', 'text'].

StateMachine.check_line: Matched transition "underline" in state "Text".

StateMachine.run: input_lines (line_offset=-1):
| 
| * **Security:** `Deploying Docutils Securely <howto/security.html>`__
| * `Writing HTML (CSS) Stylesheets for Docutils
|   <howto/html-stylesheets.html>`__
| * `Docutils Internationalization <howto/i18n.html>`__
| * `Creating reStructuredText Directives <howto/rst-directives.html>`__
| * `Creating reStructuredText Interpreted Text Roles
|   <howto/rst-roles.html>`__
| 
| 
| .. _dev:
| 
| ``dev/``: Development Notes and Plans for Core-Developers
| =========================================================
| 
| Docutils-general:
| 
| * `Docutils Hacker's Guide <dev/hacking.html>`__
| * `Docutils Distributor's Guide <dev/distributing.html>`__
| * `Docutils To Do List <dev/todo.html>`__
| * `Docutils Project Policies <dev/policies.html>`__
| * `Docutils Web Site <dev/website.html>`__
| * `Docutils Release Procedure <dev/release.html>`__
| * `The Docutils Subversion Repository <dev/repository.html>`__
| * `Docutils Testing <dev/testing.html>`__
| * `Docstring Semantics <dev/semantics.html>`__ (incomplete)
| * `Python Source Reader <dev/pysource.html>`_ (incomplete)
| * `Docutils Python DTD <dev/pysource.dtd>`_ (experimental)
| * `Plan for Enthought API Documentation Tool <dev/enthought-plan.html>`_
| * `Enthought API Documentation Tool RFP <dev/enthought-rfp.html>`_
| 
| reStructuredText_:
| 
| * `A Record of reStructuredText Syntax Alternatives
|   <dev/rst/alternatives.html>`__
| * `Problems With StructuredText <dev/rst/problems.html>`__
| 
| 
| ..
|    Local Variables:
|    mode: indented-text
|    indent-tabs-mode: nil
|    sentence-end-double-space: t
|    fill-column: 70
|    End:

StateMachine.run: bof transition

StateMachine.run: line (source='index.txt', offset=194):
| 

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "blank" in state "Body".

StateMachine.run: line (source='index.txt', offset=195):
| * **Security:** `Deploying Docutils Securely <howto/security.html>`__

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "bullet" in state "Body".

StateMachine.run: input_lines (line_offset=-1):
| **Security:** `Deploying Docutils Securely <howto/security.html>`__

StateMachine.run: bof transition

StateMachine.run: line (source='index.txt', offset=195):
| **Security:** `Deploying Docutils Securely <howto/security.html>`__

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "Body".

StateMachine.get_state: Changing state from "Body" to "Text" (input line 196).

StateMachine.run: Text.eof transition

StateMachine.run: input_lines (line_offset=-1):
| * `Writing HTML (CSS) Stylesheets for Docutils
|   <howto/html-stylesheets.html>`__
| * `Docutils Internationalization <howto/i18n.html>`__
| * `Creating reStructuredText Directives <howto/rst-directives.html>`__
| * `Creating reStructuredText Interpreted Text Roles
|   <howto/rst-roles.html>`__
| 
| 
| .. _dev:
| 
| ``dev/``: Development Notes and Plans for Core-Developers
| =========================================================
| 
| Docutils-general:
| 
| * `Docutils Hacker's Guide <dev/hacking.html>`__
| * `Docutils Distributor's Guide <dev/distributing.html>`__
| * `Docutils To Do List <dev/todo.html>`__
| * `Docutils Project Policies <dev/policies.html>`__
| * `Docutils Web Site <dev/website.html>`__
| * `Docutils Release Procedure <dev/release.html>`__
| * `The Docutils Subversion Repository <dev/repository.html>`__
| * `Docutils Testing <dev/testing.html>`__
| * `Docstring Semantics <dev/semantics.html>`__ (incomplete)
| * `Python Source Reader <dev/pysource.html>`_ (incomplete)
| * `Docutils Python DTD <dev/pysource.dtd>`_ (experimental)
| * `Plan for Enthought API Documentation Tool <dev/enthought-plan.html>`_
| * `Enthought API Documentation Tool RFP <dev/enthought-rfp.html>`_
| 
| reStructuredText_:
| 
| * `A Record of reStructuredText Syntax Alternatives
|   <dev/rst/alternatives.html>`__
| * `Problems With StructuredText <dev/rst/problems.html>`__
| 
| 
| ..
|    Local Variables:
|    mode: indented-text
|    indent-tabs-mode: nil
|    sentence-end-double-space: t
|    fill-column: 70
|    End:

StateMachine.run: bof transition

StateMachine.run: line (source='index.txt', offset=196):
| * `Writing HTML (CSS) Stylesheets for Docutils

StateMachine.check_line: state="BulletList", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "bullet" in state "BulletList".

StateMachine.run: input_lines (line_offset=-1):
| `Writing HTML (CSS) Stylesheets for Docutils
| <howto/html-stylesheets.html>`__

StateMachine.run: bof transition

StateMachine.run: line (source='index.txt', offset=196):
| `Writing HTML (CSS) Stylesheets for Docutils

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "Body".

StateMachine.get_state: Changing state from "Body" to "Text" (input line 197).

StateMachine.run: line (source='index.txt', offset=197):
| <howto/html-stylesheets.html>`__

StateMachine.check_line: state="Text", transitions=['blank', 'indent', 'underline', 'text'].

StateMachine.check_line: Matched transition "text" in state "Text".

StateMachine.get_state: Changing state from "Text" to "Body" (input line 198).

StateMachine.run: Body.eof transition

StateMachine.run: line (source='index.txt', offset=198):
| * `Docutils Internationalization <howto/i18n.html>`__

StateMachine.check_line: state="BulletList", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "bullet" in state "BulletList".

StateMachine.run: input_lines (line_offset=-1):
| `Docutils Internationalization <howto/i18n.html>`__

StateMachine.run: bof transition

StateMachine.run: line (source='index.txt', offset=198):
| `Docutils Internationalization <howto/i18n.html>`__

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "Body".

StateMachine.get_state: Changing state from "Body" to "Text" (input line 199).

StateMachine.run: Text.eof transition

StateMachine.run: line (source='index.txt', offset=199):
| * `Creating reStructuredText Directives <howto/rst-directives.html>`__

StateMachine.check_line: state="BulletList", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "bullet" in state "BulletList".

StateMachine.run: input_lines (line_offset=-1):
| `Creating reStructuredText Directives <howto/rst-directives.html>`__

StateMachine.run: bof transition

StateMachine.run: line (source='index.txt', offset=199):
| `Creating reStructuredText Directives <howto/rst-directives.html>`__

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "Body".

StateMachine.get_state: Changing state from "Body" to "Text" (input line 200).

StateMachine.run: Text.eof transition

StateMachine.run: line (source='index.txt', offset=200):
| * `Creating reStructuredText Interpreted Text Roles

StateMachine.check_line: state="BulletList", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "bullet" in state "BulletList".

StateMachine.run: input_lines (line_offset=-1):
| `Creating reStructuredText Interpreted Text Roles
| <howto/rst-roles.html>`__
| 
| 

StateMachine.run: bof transition

StateMachine.run: line (source='index.txt', offset=200):
| `Creating reStructuredText Interpreted Text Roles

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "Body".

StateMachine.get_state: Changing state from "Body" to "Text" (input line 201).

StateMachine.run: line (source='index.txt', offset=201):
| <howto/rst-roles.html>`__

StateMachine.check_line: state="Text", transitions=['blank', 'indent', 'underline', 'text'].

StateMachine.check_line: Matched transition "text" in state "Text".

StateMachine.get_state: Changing state from "Text" to "Body" (input line 202).

StateMachine.run: line (source='index.txt', offset=202):
| 

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "blank" in state "Body".

StateMachine.run: line (source='index.txt', offset=203):
| 

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "blank" in state "Body".

StateMachine.run: Body.eof transition

StateMachine.run: line (source='index.txt', offset=204):
| .. _dev:

StateMachine.check_line: state="BulletList", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "explicit_markup" in state "BulletList".

StateMachine.run: BulletList.eof transition

StateMachine.run: line (source='index.txt', offset=204):
| .. _dev:

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "explicit_markup" in state "Body".

StateMachine.run: input_lines (line_offset=-1):
| 
| ``dev/``: Development Notes and Plans for Core-Developers
| =========================================================
| 
| Docutils-general:
| 
| * `Docutils Hacker's Guide <dev/hacking.html>`__
| * `Docutils Distributor's Guide <dev/distributing.html>`__
| * `Docutils To Do List <dev/todo.html>`__
| * `Docutils Project Policies <dev/policies.html>`__
| * `Docutils Web Site <dev/website.html>`__
| * `Docutils Release Procedure <dev/release.html>`__
| * `The Docutils Subversion Repository <dev/repository.html>`__
| * `Docutils Testing <dev/testing.html>`__
| * `Docstring Semantics <dev/semantics.html>`__ (incomplete)
| * `Python Source Reader <dev/pysource.html>`_ (incomplete)
| * `Docutils Python DTD <dev/pysource.dtd>`_ (experimental)
| * `Plan for Enthought API Documentation Tool <dev/enthought-plan.html>`_
| * `Enthought API Documentation Tool RFP <dev/enthought-rfp.html>`_
| 
| reStructuredText_:
| 
| * `A Record of reStructuredText Syntax Alternatives
|   <dev/rst/alternatives.html>`__
| * `Problems With StructuredText <dev/rst/problems.html>`__
| 
| 
| ..
|    Local Variables:
|    mode: indented-text
|    indent-tabs-mode: nil
|    sentence-end-double-space: t
|    fill-column: 70
|    End:

StateMachine.run: bof transition

StateMachine.run: line (source='index.txt', offset=205):
| 

StateMachine.check_line: state="Explicit", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "blank" in state "Explicit".

StateMachine.run: Explicit.eof transition

StateMachine.run: line (source='index.txt', offset=205):
| 

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "blank" in state "Body".

StateMachine.run: line (source='index.txt', offset=206):
| ``dev/``: Development Notes and Plans for Core-Developers

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "Body".

StateMachine.get_state: Changing state from "Body" to "Text" (input line 207).

StateMachine.run: line (source='index.txt', offset=207):
| =========================================================

StateMachine.check_line: state="Text", transitions=['blank', 'indent', 'underline', 'text'].

StateMachine.check_line: Matched transition "underline" in state "Text".

StateMachine.run: Text.eof transition

StateMachine.get_state: Changing state from "Text" to "Body" (input line 206).

StateMachine.run: line (source='index.txt', offset=206):
| ``dev/``: Development Notes and Plans for Core-Developers

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "Body".

StateMachine.get_state: Changing state from "Body" to "Text" (input line 207).

StateMachine.run: line (source='index.txt', offset=207):
| =========================================================

StateMachine.check_line: state="Text", transitions=['blank', 'indent', 'underline', 'text'].

StateMachine.check_line: Matched transition "underline" in state "Text".

StateMachine.run: input_lines (line_offset=-1):
| 
| Docutils-general:
| 
| * `Docutils Hacker's Guide <dev/hacking.html>`__
| * `Docutils Distributor's Guide <dev/distributing.html>`__
| * `Docutils To Do List <dev/todo.html>`__
| * `Docutils Project Policies <dev/policies.html>`__
| * `Docutils Web Site <dev/website.html>`__
| * `Docutils Release Procedure <dev/release.html>`__
| * `The Docutils Subversion Repository <dev/repository.html>`__
| * `Docutils Testing <dev/testing.html>`__
| * `Docstring Semantics <dev/semantics.html>`__ (incomplete)
| * `Python Source Reader <dev/pysource.html>`_ (incomplete)
| * `Docutils Python DTD <dev/pysource.dtd>`_ (experimental)
| * `Plan for Enthought API Documentation Tool <dev/enthought-plan.html>`_
| * `Enthought API Documentation Tool RFP <dev/enthought-rfp.html>`_
| 
| reStructuredText_:
| 
| * `A Record of reStructuredText Syntax Alternatives
|   <dev/rst/alternatives.html>`__
| * `Problems With StructuredText <dev/rst/problems.html>`__
| 
| 
| ..
|    Local Variables:
|    mode: indented-text
|    indent-tabs-mode: nil
|    sentence-end-double-space: t
|    fill-column: 70
|    End:

StateMachine.run: bof transition

StateMachine.run: line (source='index.txt', offset=208):
| 

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "blank" in state "Body".

StateMachine.run: line (source='index.txt', offset=209):
| Docutils-general:

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "Body".

StateMachine.get_state: Changing state from "Body" to "Text" (input line 210).

StateMachine.run: line (source='index.txt', offset=210):
| 

StateMachine.check_line: state="Text", transitions=['blank', 'indent', 'underline', 'text'].

StateMachine.check_line: Matched transition "blank" in state "Text".

StateMachine.get_state: Changing state from "Text" to "Body" (input line 211).

StateMachine.run: line (source='index.txt', offset=211):
| * `Docutils Hacker's Guide <dev/hacking.html>`__

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "bullet" in state "Body".

StateMachine.run: input_lines (line_offset=-1):
| `Docutils Hacker's Guide <dev/hacking.html>`__

StateMachine.run: bof transition

StateMachine.run: line (source='index.txt', offset=211):
| `Docutils Hacker's Guide <dev/hacking.html>`__

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "Body".

StateMachine.get_state: Changing state from "Body" to "Text" (input line 212).

StateMachine.run: Text.eof transition

StateMachine.run: input_lines (line_offset=-1):
| * `Docutils Distributor's Guide <dev/distributing.html>`__
| * `Docutils To Do List <dev/todo.html>`__
| * `Docutils Project Policies <dev/policies.html>`__
| * `Docutils Web Site <dev/website.html>`__
| * `Docutils Release Procedure <dev/release.html>`__
| * `The Docutils Subversion Repository <dev/repository.html>`__
| * `Docutils Testing <dev/testing.html>`__
| * `Docstring Semantics <dev/semantics.html>`__ (incomplete)
| * `Python Source Reader <dev/pysource.html>`_ (incomplete)
| * `Docutils Python DTD <dev/pysource.dtd>`_ (experimental)
| * `Plan for Enthought API Documentation Tool <dev/enthought-plan.html>`_
| * `Enthought API Documentation Tool RFP <dev/enthought-rfp.html>`_
| 
| reStructuredText_:
| 
| * `A Record of reStructuredText Syntax Alternatives
|   <dev/rst/alternatives.html>`__
| * `Problems With StructuredText <dev/rst/problems.html>`__
| 
| 
| ..
|    Local Variables:
|    mode: indented-text
|    indent-tabs-mode: nil
|    sentence-end-double-space: t
|    fill-column: 70
|    End:

StateMachine.run: bof transition

StateMachine.run: line (source='index.txt', offset=212):
| * `Docutils Distributor's Guide <dev/distributing.html>`__

StateMachine.check_line: state="BulletList", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "bullet" in state "BulletList".

StateMachine.run: input_lines (line_offset=-1):
| `Docutils Distributor's Guide <dev/distributing.html>`__

StateMachine.run: bof transition

StateMachine.run: line (source='index.txt', offset=212):
| `Docutils Distributor's Guide <dev/distributing.html>`__

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "Body".

StateMachine.get_state: Changing state from "Body" to "Text" (input line 213).

StateMachine.run: Text.eof transition

StateMachine.run: line (source='index.txt', offset=213):
| * `Docutils To Do List <dev/todo.html>`__

StateMachine.check_line: state="BulletList", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "bullet" in state "BulletList".

StateMachine.run: input_lines (line_offset=-1):
| `Docutils To Do List <dev/todo.html>`__

StateMachine.run: bof transition

StateMachine.run: line (source='index.txt', offset=213):
| `Docutils To Do List <dev/todo.html>`__

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "Body".

StateMachine.get_state: Changing state from "Body" to "Text" (input line 214).

StateMachine.run: Text.eof transition

StateMachine.run: line (source='index.txt', offset=214):
| * `Docutils Project Policies <dev/policies.html>`__

StateMachine.check_line: state="BulletList", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "bullet" in state "BulletList".

StateMachine.run: input_lines (line_offset=-1):
| `Docutils Project Policies <dev/policies.html>`__

StateMachine.run: bof transition

StateMachine.run: line (source='index.txt', offset=214):
| `Docutils Project Policies <dev/policies.html>`__

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "Body".

StateMachine.get_state: Changing state from "Body" to "Text" (input line 215).

StateMachine.run: Text.eof transition

StateMachine.run: line (source='index.txt', offset=215):
| * `Docutils Web Site <dev/website.html>`__

StateMachine.check_line: state="BulletList", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "bullet" in state "BulletList".

StateMachine.run: input_lines (line_offset=-1):
| `Docutils Web Site <dev/website.html>`__

StateMachine.run: bof transition

StateMachine.run: line (source='index.txt', offset=215):
| `Docutils Web Site <dev/website.html>`__

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "Body".

StateMachine.get_state: Changing state from "Body" to "Text" (input line 216).

StateMachine.run: Text.eof transition

StateMachine.run: line (source='index.txt', offset=216):
| * `Docutils Release Procedure <dev/release.html>`__

StateMachine.check_line: state="BulletList", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "bullet" in state "BulletList".

StateMachine.run: input_lines (line_offset=-1):
| `Docutils Release Procedure <dev/release.html>`__

StateMachine.run: bof transition

StateMachine.run: line (source='index.txt', offset=216):
| `Docutils Release Procedure <dev/release.html>`__

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "Body".

StateMachine.get_state: Changing state from "Body" to "Text" (input line 217).

StateMachine.run: Text.eof transition

StateMachine.run: line (source='index.txt', offset=217):
| * `The Docutils Subversion Repository <dev/repository.html>`__

StateMachine.check_line: state="BulletList", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "bullet" in state "BulletList".

StateMachine.run: input_lines (line_offset=-1):
| `The Docutils Subversion Repository <dev/repository.html>`__

StateMachine.run: bof transition

StateMachine.run: line (source='index.txt', offset=217):
| `The Docutils Subversion Repository <dev/repository.html>`__

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "Body".

StateMachine.get_state: Changing state from "Body" to "Text" (input line 218).

StateMachine.run: Text.eof transition

StateMachine.run: line (source='index.txt', offset=218):
| * `Docutils Testing <dev/testing.html>`__

StateMachine.check_line: state="BulletList", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "bullet" in state "BulletList".

StateMachine.run: input_lines (line_offset=-1):
| `Docutils Testing <dev/testing.html>`__

StateMachine.run: bof transition

StateMachine.run: line (source='index.txt', offset=218):
| `Docutils Testing <dev/testing.html>`__

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "Body".

StateMachine.get_state: Changing state from "Body" to "Text" (input line 219).

StateMachine.run: Text.eof transition

StateMachine.run: line (source='index.txt', offset=219):
| * `Docstring Semantics <dev/semantics.html>`__ (incomplete)

StateMachine.check_line: state="BulletList", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "bullet" in state "BulletList".

StateMachine.run: input_lines (line_offset=-1):
| `Docstring Semantics <dev/semantics.html>`__ (incomplete)

StateMachine.run: bof transition

StateMachine.run: line (source='index.txt', offset=219):
| `Docstring Semantics <dev/semantics.html>`__ (incomplete)

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "Body".

StateMachine.get_state: Changing state from "Body" to "Text" (input line 220).

StateMachine.run: Text.eof transition

StateMachine.run: line (source='index.txt', offset=220):
| * `Python Source Reader <dev/pysource.html>`_ (incomplete)

StateMachine.check_line: state="BulletList", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "bullet" in state "BulletList".

StateMachine.run: input_lines (line_offset=-1):
| `Python Source Reader <dev/pysource.html>`_ (incomplete)

StateMachine.run: bof transition

StateMachine.run: line (source='index.txt', offset=220):
| `Python Source Reader <dev/pysource.html>`_ (incomplete)

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "Body".

StateMachine.get_state: Changing state from "Body" to "Text" (input line 221).

StateMachine.run: Text.eof transition

StateMachine.run: line (source='index.txt', offset=221):
| * `Docutils Python DTD <dev/pysource.dtd>`_ (experimental)

StateMachine.check_line: state="BulletList", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "bullet" in state "BulletList".

StateMachine.run: input_lines (line_offset=-1):
| `Docutils Python DTD <dev/pysource.dtd>`_ (experimental)

StateMachine.run: bof transition

StateMachine.run: line (source='index.txt', offset=221):
| `Docutils Python DTD <dev/pysource.dtd>`_ (experimental)

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "Body".

StateMachine.get_state: Changing state from "Body" to "Text" (input line 222).

StateMachine.run: Text.eof transition

StateMachine.run: line (source='index.txt', offset=222):
| * `Plan for Enthought API Documentation Tool <dev/enthought-plan.html>`_

StateMachine.check_line: state="BulletList", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "bullet" in state "BulletList".

StateMachine.run: input_lines (line_offset=-1):
| `Plan for Enthought API Documentation Tool <dev/enthought-plan.html>`_

StateMachine.run: bof transition

StateMachine.run: line (source='index.txt', offset=222):
| `Plan for Enthought API Documentation Tool <dev/enthought-plan.html>`_

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "Body".

StateMachine.get_state: Changing state from "Body" to "Text" (input line 223).

StateMachine.run: Text.eof transition

StateMachine.run: line (source='index.txt', offset=223):
| * `Enthought API Documentation Tool RFP <dev/enthought-rfp.html>`_

StateMachine.check_line: state="BulletList", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "bullet" in state "BulletList".

StateMachine.run: input_lines (line_offset=-1):
| `Enthought API Documentation Tool RFP <dev/enthought-rfp.html>`_
| 

StateMachine.run: bof transition

StateMachine.run: line (source='index.txt', offset=223):
| `Enthought API Documentation Tool RFP <dev/enthought-rfp.html>`_

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "Body".

StateMachine.get_state: Changing state from "Body" to "Text" (input line 224).

StateMachine.run: line (source='index.txt', offset=224):
| 

StateMachine.check_line: state="Text", transitions=['blank', 'indent', 'underline', 'text'].

StateMachine.check_line: Matched transition "blank" in state "Text".

StateMachine.get_state: Changing state from "Text" to "Body" (input line 225).

StateMachine.run: Body.eof transition

StateMachine.run: line (source='index.txt', offset=225):
| reStructuredText_:

StateMachine.check_line: state="BulletList", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "BulletList".

StateMachine.run: BulletList.eof transition

StateMachine.run: line (source='index.txt', offset=225):
| reStructuredText_:

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "Body".

StateMachine.get_state: Changing state from "Body" to "Text" (input line 226).

StateMachine.run: line (source='index.txt', offset=226):
| 

StateMachine.check_line: state="Text", transitions=['blank', 'indent', 'underline', 'text'].

StateMachine.check_line: Matched transition "blank" in state "Text".

StateMachine.get_state: Changing state from "Text" to "Body" (input line 227).

StateMachine.run: line (source='index.txt', offset=227):
| * `A Record of reStructuredText Syntax Alternatives

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "bullet" in state "Body".

StateMachine.run: input_lines (line_offset=-1):
| `A Record of reStructuredText Syntax Alternatives
| <dev/rst/alternatives.html>`__

StateMachine.run: bof transition

StateMachine.run: line (source='index.txt', offset=227):
| `A Record of reStructuredText Syntax Alternatives

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "Body".

StateMachine.get_state: Changing state from "Body" to "Text" (input line 228).

StateMachine.run: line (source='index.txt', offset=228):
| <dev/rst/alternatives.html>`__

StateMachine.check_line: state="Text", transitions=['blank', 'indent', 'underline', 'text'].

StateMachine.check_line: Matched transition "text" in state "Text".

StateMachine.get_state: Changing state from "Text" to "Body" (input line 229).

StateMachine.run: Body.eof transition

StateMachine.run: input_lines (line_offset=-1):
| * `Problems With StructuredText <dev/rst/problems.html>`__
| 
| 
| ..
|    Local Variables:
|    mode: indented-text
|    indent-tabs-mode: nil
|    sentence-end-double-space: t
|    fill-column: 70
|    End:

StateMachine.run: bof transition

StateMachine.run: line (source='index.txt', offset=229):
| * `Problems With StructuredText <dev/rst/problems.html>`__

StateMachine.check_line: state="BulletList", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "bullet" in state "BulletList".

StateMachine.run: input_lines (line_offset=-1):
| `Problems With StructuredText <dev/rst/problems.html>`__
| 
| 

StateMachine.run: bof transition

StateMachine.run: line (source='index.txt', offset=229):
| `Problems With StructuredText <dev/rst/problems.html>`__

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "text" in state "Body".

StateMachine.get_state: Changing state from "Body" to "Text" (input line 230).

StateMachine.run: line (source='index.txt', offset=230):
| 

StateMachine.check_line: state="Text", transitions=['blank', 'indent', 'underline', 'text'].

StateMachine.check_line: Matched transition "blank" in state "Text".

StateMachine.get_state: Changing state from "Text" to "Body" (input line 231).

StateMachine.run: line (source='index.txt', offset=231):
| 

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "blank" in state "Body".

StateMachine.run: Body.eof transition

StateMachine.run: line (source='index.txt', offset=232):
| ..

StateMachine.check_line: state="BulletList", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "explicit_markup" in state "BulletList".

StateMachine.run: BulletList.eof transition

StateMachine.run: line (source='index.txt', offset=232):
| ..

StateMachine.check_line: state="Body", transitions=['blank', 'indent', 'bullet', 'enumerator', 'field_marker', 'option_marker', 'doctest', 'line_block', 'grid_table_top', 'simple_table_top', 'explicit_markup', 'anonymous', 'line', 'text'].

StateMachine.check_line: Matched transition "explicit_markup" in state "Body".

StateMachine.run: input_lines (line_offset=-1):
| 

StateMachine.run: bof transition

StateMachine.run: Explicit.eof transition

StateMachine.run: Body.eof transition

StateMachine.get_state: Changing state from "Text" to "Body" (input line 241).

StateMachine.run: Body.eof transition

StateMachine.get_state: Changing state from "Line" to "Body" (input line 242).

StateMachine.run: Body.eof transition
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for title
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _call_default_visit for title
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _call_default_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling _call_default_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for title
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling _call_default_departure for title
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for title
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _call_default_visit for title
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _call_default_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling _call_default_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for title
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling _call_default_departure for title
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for title
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _call_default_visit for title
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for literal
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _call_default_visit for literal
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _call_default_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling _call_default_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for literal
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling _call_default_departure for literal
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _call_default_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling _call_default_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for title
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling _call_default_departure for title
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for title
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _call_default_visit for title
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for literal
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _call_default_visit for literal
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _call_default_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling _call_default_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for literal
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling _call_default_departure for literal
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _call_default_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling _call_default_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for title
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling _call_default_departure for title
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for title
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _call_default_visit for title
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for literal
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _call_default_visit for literal
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _call_default_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling _call_default_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for literal
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling _call_default_departure for literal
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _call_default_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling _call_default_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for title
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling _call_default_departure for title
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for title
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _call_default_visit for title
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for literal
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _call_default_visit for literal
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _call_default_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling _call_default_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for literal
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling _call_default_departure for literal
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _call_default_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling _call_default_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for title
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling _call_default_departure for title
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for title
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _call_default_visit for title
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for literal
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _call_default_visit for literal
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _call_default_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling _call_default_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for literal
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling _call_default_departure for literal
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _call_default_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling _call_default_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for title
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling _call_default_departure for title
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for title
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _call_default_visit for title
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for literal
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _call_default_visit for literal
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _call_default_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling _call_default_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for literal
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling _call_default_departure for literal
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _call_default_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling _call_default_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for title
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling _call_default_departure for title
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for document
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for document
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for title
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for title
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for docinfo
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for docinfo
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for author
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for author
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for contact
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for contact
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for date
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for date
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for revision
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for revision
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for copyright
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for copyright
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for literal
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for literal
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for target
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for target
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for target
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for target
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for topic
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for topic
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for title
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for title
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for bullet_list
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for bullet_list
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for literal
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for literal
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for literal
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for literal
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for literal
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for literal
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for literal
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for literal
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for literal
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for literal
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for literal
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for literal
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for section
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for section
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for title
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for title
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for enumerated_list
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for enumerated_list
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for emphasis
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for emphasis
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for section
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for section
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for title
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for title
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for field_list
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for field_list
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for field
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for field
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for field_name
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for field_name
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for field_body
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for field_body
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for field
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for field
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for field_name
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for field_name
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for field_body
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for field_body
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for field
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for field
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for field_name
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for field_name
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for field_body
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for field_body
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for field
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for field
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for field_name
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for field_name
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for field_body
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for field_body
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for field
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for field
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for field_name
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for field_name
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for field_body
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for field_body
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for field
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for field
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for field_name
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for field_name
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for field_body
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for field_body
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for field
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for field
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for field_name
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for field_name
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for field_body
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for field_body
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for target
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for target
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for target
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for target
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for target
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for target
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for target
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for target
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for target
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for target
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for target
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for target
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for target
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for target
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for target
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for target
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for target
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for target
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for section
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for section
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for title
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for title
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for literal
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for literal
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for bullet_list
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for bullet_list
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for bullet_list
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for bullet_list
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for target
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for target
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for bullet_list
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for bullet_list
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for target
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for target
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for bullet_list
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for bullet_list
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for target
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for target
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for target
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for target
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for section
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for section
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for title
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for title
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for literal
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for literal
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for bullet_list
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for bullet_list
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for bullet_list
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for bullet_list
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for target
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for target
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for bullet_list
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for bullet_list
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for target
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for target
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for section
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for section
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for title
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for title
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for literal
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for literal
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for bullet_list
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for bullet_list
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for target
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for target
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for target
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for target
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for target
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for target
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for target
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for target
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for target
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for target
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for target
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for target
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for target
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for target
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for target
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for target
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for target
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for target
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for target
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for target
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for target
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for target
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for section
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for section
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for title
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for title
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for literal
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for literal
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for bullet_list
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for bullet_list
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for target
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for target
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for section
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for section
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for title
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for title
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for literal
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for literal
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for bullet_list
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for bullet_list
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for strong
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for strong
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for target
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for target
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for section
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for section
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for title
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for title
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for literal
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for literal
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for bullet_list
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for bullet_list
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for target
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for target
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for target
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for target
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for target
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for target
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for target
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for target
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for bullet_list
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for bullet_list
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for comment
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for comment
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling _nop for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for document
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_document for document
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for title
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_title for title
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for title
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_title for title
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for docinfo
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_docinfo for docinfo
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for author
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_author for author
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for author
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_author for author
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for contact
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_contact for contact
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for contact
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_contact for contact
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for date
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_date for date
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for date
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_date for date
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for revision
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_revision for revision
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for revision
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_revision for revision
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for copyright
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_copyright for copyright
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for copyright
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_copyright for copyright
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for docinfo
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_docinfo for docinfo
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for literal
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_literal for literal
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for target
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_target for target
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for target
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_target for target
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for target
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_target for target
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for target
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_target for target
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for topic
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_topic for topic
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for title
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_title for title
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for title
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_title for title
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for bullet_list
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_bullet_list for bullet_list
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for literal
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_literal for literal
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for literal
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_literal for literal
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for literal
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_literal for literal
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for literal
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_literal for literal
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for literal
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_literal for literal
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for literal
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_literal for literal
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for bullet_list
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_bullet_list for bullet_list
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for topic
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_topic for topic
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for section
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_section for section
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for title
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_title for title
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for title
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_title for title
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for enumerated_list
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_enumerated_list for enumerated_list
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for enumerated_list
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling pass_node for enumerated_list
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling ignore_node for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling ignore_node for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling ignore_node for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling ignore_node for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling ignore_node for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for emphasis
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_emphasis for emphasis
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for emphasis
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_emphasis for emphasis
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for enumerated_list
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_enumerated_list for enumerated_list
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for section
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_section for section
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for section
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_section for section
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for title
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_title for title
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for title
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_title for title
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for field_list
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_field_list for field_list
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for field
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_field for field
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for field_name
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_field_name for field_name
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for field_name
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_field_name for field_name
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for field_body
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_field_body for field_body
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for field_body
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_field_body for field_body
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for field
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_field for field
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for field
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_field for field
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for field_name
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_field_name for field_name
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for field_name
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_field_name for field_name
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for field_body
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_field_body for field_body
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for field_body
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_field_body for field_body
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for field
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_field for field
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for field
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_field for field
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for field_name
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_field_name for field_name
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for field_name
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_field_name for field_name
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for field_body
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_field_body for field_body
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for field_body
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_field_body for field_body
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for field
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_field for field
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for field
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_field for field
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for field_name
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_field_name for field_name
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for field_name
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_field_name for field_name
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for field_body
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_field_body for field_body
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for field_body
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_field_body for field_body
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for field
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_field for field
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for field
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_field for field
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for field_name
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_field_name for field_name
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for field_name
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_field_name for field_name
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for field_body
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_field_body for field_body
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for field_body
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_field_body for field_body
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for field
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_field for field
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for field
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_field for field
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for field_name
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_field_name for field_name
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for field_name
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_field_name for field_name
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for field_body
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_field_body for field_body
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for field_body
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_field_body for field_body
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for field
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_field for field
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for field
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_field for field
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for field_name
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_field_name for field_name
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for field_name
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_field_name for field_name
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for field_body
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_field_body for field_body
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for field_body
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_field_body for field_body
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for field
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_field for field
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for field_list
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_field_list for field_list
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for target
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_target for target
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for target
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_target for target
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for target
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_target for target
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for target
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_target for target
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for target
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_target for target
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for target
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_target for target
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for target
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_target for target
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for target
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_target for target
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for target
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_target for target
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for target
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_target for target
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for target
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_target for target
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for target
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_target for target
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for target
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_target for target
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for target
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_target for target
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for target
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_target for target
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for target
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_target for target
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for target
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_target for target
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for target
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_target for target
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for section
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_section for section
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for section
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_section for section
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for title
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_title for title
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for literal
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_literal for literal
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for title
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_title for title
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for bullet_list
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_bullet_list for bullet_list
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for bullet_list
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling pass_node for bullet_list
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling ignore_node for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling ignore_node for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling ignore_node for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling ignore_node for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for bullet_list
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_bullet_list for bullet_list
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for bullet_list
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_bullet_list for bullet_list
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for bullet_list
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling pass_node for bullet_list
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling ignore_node for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling ignore_node for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling ignore_node for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling ignore_node for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for bullet_list
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_bullet_list for bullet_list
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for target
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_target for target
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for target
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_target for target
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for bullet_list
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_bullet_list for bullet_list
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for bullet_list
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling pass_node for bullet_list
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling ignore_node for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling ignore_node for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling ignore_node for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling ignore_node for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for target
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_target for target
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for target
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_target for target
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for bullet_list
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_bullet_list for bullet_list
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for bullet_list
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_bullet_list for bullet_list
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for bullet_list
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling pass_node for bullet_list
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling ignore_node for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for target
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_target for target
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for target
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_target for target
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for bullet_list
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_bullet_list for bullet_list
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for target
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_target for target
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for target
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_target for target
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for section
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_section for section
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for section
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_section for section
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for title
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_title for title
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for literal
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_literal for literal
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for title
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_title for title
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for bullet_list
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_bullet_list for bullet_list
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for bullet_list
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling pass_node for bullet_list
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling ignore_node for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling ignore_node for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling ignore_node for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling ignore_node for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for bullet_list
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_bullet_list for bullet_list
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for bullet_list
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_bullet_list for bullet_list
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for bullet_list
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling pass_node for bullet_list
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling ignore_node for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling ignore_node for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling ignore_node for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling ignore_node for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling ignore_node for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for target
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_target for target
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for target
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_target for target
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for bullet_list
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_bullet_list for bullet_list
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for bullet_list
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_bullet_list for bullet_list
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for bullet_list
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling pass_node for bullet_list
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling ignore_node for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for bullet_list
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_bullet_list for bullet_list
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for target
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_target for target
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for target
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_target for target
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for section
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_section for section
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for section
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_section for section
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for title
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_title for title
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for literal
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_literal for literal
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for title
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_title for title
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for bullet_list
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_bullet_list for bullet_list
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for bullet_list
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling pass_node for bullet_list
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling ignore_node for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling ignore_node for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling ignore_node for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling ignore_node for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for bullet_list
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_bullet_list for bullet_list
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for target
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_target for target
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for target
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_target for target
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for target
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_target for target
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for target
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_target for target
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for target
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_target for target
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for target
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_target for target
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for target
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_target for target
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for target
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_target for target
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for target
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_target for target
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for target
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_target for target
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for target
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_target for target
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for target
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_target for target
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for target
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_target for target
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for target
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_target for target
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for target
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_target for target
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for target
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_target for target
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for target
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_target for target
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for target
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_target for target
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for target
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_target for target
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for target
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_target for target
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for target
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_target for target
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for target
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_target for target
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for section
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_section for section
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for section
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_section for section
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for title
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_title for title
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for literal
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_literal for literal
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for title
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_title for title
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for bullet_list
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_bullet_list for bullet_list
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for bullet_list
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling pass_node for bullet_list
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling ignore_node for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling ignore_node for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling ignore_node for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling ignore_node for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for bullet_list
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_bullet_list for bullet_list
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for target
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_target for target
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for target
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_target for target
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for section
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_section for section
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for section
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_section for section
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for title
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_title for title
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for literal
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_literal for literal
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for title
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_title for title
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for bullet_list
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_bullet_list for bullet_list
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for bullet_list
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling pass_node for bullet_list
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling ignore_node for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling ignore_node for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling ignore_node for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling ignore_node for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling ignore_node for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for strong
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_strong for strong
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for strong
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_strong for strong
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for bullet_list
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_bullet_list for bullet_list
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for target
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_target for target
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for target
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_target for target
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for section
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_section for section
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for section
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_section for section
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for title
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_title for title
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for literal
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_literal for literal
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for title
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_title for title
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for bullet_list
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_bullet_list for bullet_list
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for bullet_list
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling pass_node for bullet_list
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling ignore_node for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling ignore_node for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling ignore_node for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling ignore_node for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling ignore_node for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling ignore_node for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling ignore_node for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling ignore_node for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling ignore_node for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling ignore_node for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling ignore_node for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling ignore_node for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling ignore_node for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for target
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_target for target
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for target
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_target for target
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for target
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_target for target
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for target
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_target for target
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for target
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_target for target
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for target
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_target for target
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for target
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_target for target
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for target
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_target for target
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for bullet_list
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_bullet_list for bullet_list
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for bullet_list
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_bullet_list for bullet_list
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for bullet_list
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling pass_node for bullet_list
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling ignore_node for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walk calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling ignore_node for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for Text
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_Text for Text
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for reference
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_reference for reference
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for paragraph
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_paragraph for paragraph
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for list_item
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_list_item for list_item
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for bullet_list
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_bullet_list for bullet_list
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_visit for comment
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_visit calling visit_comment for comment
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for section
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_section for section
index.txt:: (DEBUG/0) docutils.nodes.Node.walkabout calling dispatch_departure for document
index.txt:: (DEBUG/0) docutils.nodes.NodeVisitor.dispatch_departure calling depart_document for document
